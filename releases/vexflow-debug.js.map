{"version":3,"sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/./src/vex.js","webpack://Vex/./src/fraction.js","webpack://Vex/./src/registry.js","webpack://Vex/./src/element.js","webpack://Vex/./src/boundingboxcomputation.js","webpack://Vex/./src/boundingbox.js","webpack://Vex/./src/fonts/vexflow_font.js","webpack://Vex/./src/glyph.js","webpack://Vex/./src/tables.js","webpack://Vex/./src/canvascontext.js","webpack://Vex/./src/raphaelcontext.js","webpack://Vex/./src/svgcontext.js","webpack://Vex/./src/renderer.js","webpack://Vex/./src/stem.js","webpack://Vex/./src/tuplet.js","webpack://Vex/./src/beam.js","webpack://Vex/./src/voice.js","webpack://Vex/./src/staveconnector.js","webpack://Vex/./src/tickable.js","webpack://Vex/./src/note.js","webpack://Vex/./src/notehead.js","webpack://Vex/./src/stemmablenote.js","webpack://Vex/./src/modifier.js","webpack://Vex/./src/dot.js","webpack://Vex/./src/stavenote.js","webpack://Vex/./src/frethandfinger.js","webpack://Vex/./src/music.js","webpack://Vex/./src/accidental.js","webpack://Vex/./src/notesubgroup.js","webpack://Vex/./src/stavetie.js","webpack://Vex/./src/tabtie.js","webpack://Vex/./src/gracenotegroup.js","webpack://Vex/./src/strokes.js","webpack://Vex/./src/stringnumber.js","webpack://Vex/./src/articulation.js","webpack://Vex/./src/tickcontext.js","webpack://Vex/./src/ornament.js","webpack://Vex/./src/annotation.js","webpack://Vex/./src/bend.js","webpack://Vex/./src/vibrato.js","webpack://Vex/./src/modifiercontext.js","webpack://Vex/./src/formatter.js","webpack://Vex/./src/stavemodifier.js","webpack://Vex/./src/stavebarline.js","webpack://Vex/./src/staverepetition.js","webpack://Vex/./src/stavesection.js","webpack://Vex/./src/stavetempo.js","webpack://Vex/./src/textnote.js","webpack://Vex/./src/stavetext.js","webpack://Vex/./src/clef.js","webpack://Vex/./src/keysignature.js","webpack://Vex/./src/timesignature.js","webpack://Vex/./src/stavevolta.js","webpack://Vex/./src/stave.js","webpack://Vex/./src/tabstave.js","webpack://Vex/./src/tabnote.js","webpack://Vex/./src/vibratobracket.js","webpack://Vex/./src/multimeasurerest.js","webpack://Vex/./src/clefnote.js","webpack://Vex/./src/keysignote.js","webpack://Vex/./src/timesignote.js","webpack://Vex/./src/tabslide.js","webpack://Vex/./src/gracenote.js","webpack://Vex/./src/gracetabnote.js","webpack://Vex/./src/tuning.js","webpack://Vex/./src/keymanager.js","webpack://Vex/./src/stavehairpin.js","webpack://Vex/./src/curve.js","webpack://Vex/./src/textdynamics.js","webpack://Vex/./src/staveline.js","webpack://Vex/./src/pedalmarking.js","webpack://Vex/./src/textbracket.js","webpack://Vex/./src/barnote.js","webpack://Vex/./src/ghostnote.js","webpack://Vex/./src/tremolo.js","webpack://Vex/./src/crescendo.js","webpack://Vex/./src/parser.js","webpack://Vex/./src/easyscore.js","webpack://Vex/./src/factory.js","webpack://Vex/./src/system.js","webpack://Vex/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vex","L","block","args","line","Array","slice","join","console","log","MakeException","_Error","exception","message","data","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","_inherits","_wrapNativeSuper","Error","RuntimeError","code","RERR","Merge","destination","source","Min","Math","min","Max","max","forEach","a","fn","length","RoundN","x","parseInt","MidLine","b","mid_line","SortAndUnique","arr","cmp","eq","last","newArr","sort","push","Contains","obj","getCanvasContext","canvas_sel","canvas","document","getElementById","getContext","drawDot","ctx","y","color","arguments","undefined","save","setFillStyle","beginPath","arc","PI","closePath","fill","restore","BM","f","start_time","Date","getTime","elapsed","StackTrace","stack","W","_len","_key","Prefix","text","prefix","Fraction","numerator","denominator","fraction_classCallCheck","set","fraction_createClass","concat","GCD","LCM","arg0","shift","LCMM","u","gcd","param1","param2","otherNumerator","otherDenominator","lcm","compare","__compareA","copy","simplify","__compareB","subtract","greaterThanEquals","greaterThan","floor","abs","__tmp","toString","q","quotient","fraction","toSimplifiedString","str","split","X","setIndexValue","index","id","elem","Registry","registry_classCallCheck","clear","registry_createClass","type","class","_ref","oldValue","getAttribute","setAttribute","INDEXES","updateIndex","onRegister","attrName","keys","map","getElementsByAttribute","className","_ref2","array","filter","includes","registry","defaultRegistry","Element","element_classCallCheck","attrs","newID","el","classes","boundingBox","context","rendered","getDefaultRegistry","register","element_createClass","ID","style","getStyle","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","checkContext","applyStyle","draw","restoreStyle","onUpdate","BoundingBoxComputation","x1","y1","x2","y2","boundingboxcomputation_classCallCheck","Number","NaN","addPoint","isNaN","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","b2ac","t1","sqrt","addX","addY","t2","BoundingBox","w","h","boundingbox_classCallCheck","boundingbox_createClass","that","new_x","new_y","new_w","new_h","rect","stroke","Font","glyphs","v0","x_min","x_max","ha","v1","v2","v3","v4","v5","v6","v7","v8","v9","va","vb","vc","vf","v10","v11","v18","v1b","v1d","v1e","v1f","v20","v22","v23","v25","v26","v27","v28","v29","v2a","v2c","v2d","v2f","v30","v31","v33","v34","v36","v38","v39","v3b","v3c","v3e","v3f","v40","v41","v42","v43","v44","v45","v46","v47","v49","v4a","v4b","v4d","v4e","v51","v52","v53","v54","v55","v58","v59","v5a","v5b","v5c","v5d","v60","v62","v68","v6c","v6d","v6f","v70","v72","v74","v75","v78","v79","v7a","v7c","v7d","v7f","v80","v81","v83","v84","v86","v8a","v8b","v8c","v8d","v8f","v90","v92","v93","v94","v95","v97","v9a","v9b","v9c","v9e","va3","va5","va9","vaa","vab","vad","vb1","vb3","vb4","vb6","vb7","vb9","vba","vbf","vc3","vd0","vd1","vd2","vd3","vd4","vd5","vd8","vd9","cssFontWeight","ascender","underlinePosition","cssFontStyle","yMin","xMin","yMax","xMax","resolution","descender","familyName","lineHeight","underlineThickness","processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","nextX","nextY","Glyph","_Element","point","options","glyph_classCallCheck","glyph_possibleConstructorReturn","glyph_getPrototypeOf","cache","font","metrics","x_shift","y_shift","originShift","setOptions","reset","glyph_inherits","glyph_createClass","glyph","cached_outline","x_pos","y_pos","val","nocache","scale","loadMetrics","renderOutline","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","bboxComp","addQuadraticCurve","width","height","stave","bbox","getOutlineBoundingBox","getW","getH","xShift","getX","yShift","getY","setOriginX","setOriginY","setRendered","getYForGlyphs","Flow","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RESOLUTION","DEFAULT_NOTATION_FONT_SCALE","DEFAULT_TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","TEXT_HEIGHT_OFFSET_HACK","IsKerned","clefProperties","clef","props","values","treble","line_shift","bass","tenor","alto","soprano","percussion","mezzo-soprano","baritone-c","baritone-f","subbass","french","keyProperties","params","octave_shift","tables_typeof","pieces","k","toUpperCase","note_values","octave","int_value","int_val","shift_right","glyph_name","note_glyph","accidental","displaced","C","CN","C#","C##","CB","CBB","D","DN","D#","D##","DB","DBB","E","EN","E#","E##","EB","EBB","F","FN","F#","F##","FB","FBB","G","GN","G#","G##","GB","GBB","A","AN","A#","A##","AB","ABB","B","BN","B#","B##","BB","BBB","R","rest","D0","D1","D2","D3","T0","stem_up_y_offset","stem_down_y_offset","T1","T2","T3","X0","X1","X2","X3","S1","S2","R1","R2","integerToNote","integer","noteValue","table","0","1","2","3","4","5","6","7","8","9","10","11","tabToGlyph","fret","shift_y","glyphMetrics","getMetrics","textWidth","getWidth","articulationCodes","artic","articulations","a.","between_lines","av","a>","a-","a^","a+","ao","ah","a@a","a@u","a|","am","a,","accidentalCodes","acc","accidentals","#","parenRightPaddingAdjustment","##","bb","{","}","db","bbs","++","+","+-","++-","bs","bss","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","ornamentCodes","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","keySignature","spec","keySpec","keySpecs","notes","accidentalList","acc_list","num","Am","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","Em","Bm","F#m","C#m","G#m","D#m","A#m","unicode","sharp","String","fromCharCode","flat","natural","triangle","o-with-slash","degrees","circle","parseNoteDurationString","durationString","result","exec","duration","dots","parseNoteData","noteData","durationStringData","ticks","durationToTicks","note_type","currentTicks","sanitizeDuration","alias","durationAliases","durations","durationToFraction","parse","durationToNumber","1/2","16","32","64","128","256","512","1024","durationToGlyph","duration_codes","glyphTypeProperties","customGlyphTypeProperties","code_head","common","stem","stem_offset","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","beam_count","code_flag_upstem","code_flag_downstem","smufl","to_code_points","bracketTop","bracketBottom","barlineTick","segno","coda","gClef","cClef","fClef","unpitchedPercussionClef1","6stringTabClef","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleX","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalBuyukMucennebFlat","accidentalBakiyeFlat","accidentalKomaSharp","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articStaccatissimoBelow","articMarcatoAbove","articMarcatoBelow","fermataAbove","fermataBelow","breathMarkComma","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restHalf","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentMordentInverted","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","arrowheadBlackUp","arrowheadBlackDown","TIME4_4","num_beats","beat_value","CanvasContext","canvascontext_classCallCheck","vexFlowCanvasContext","WIDTH","HEIGHT","canvascontext_createClass","clearRect","family","size","weight","background_fillStyle","blur","cap_type","lineCap","dash","lineDash","parseFloat","resize","fillRect","radius","startAngle","endAngle","antiClockwise","glow","measureText","fillText","RaphaelContext","element","raphaelcontext_classCallCheck","paper","Raphael","path","pen","state","font_family","font_size","font_weight","attributes","stroke-width","background_attributes","shadow_attributes","state_stack","transform","setSize","viewBox","attr","normalizeAngle","angle","tmp","delta","arcHelper","cos","sin","largeArcFlag","sweepFlag","out","sa","num_paths","stroke-linejoin","stroke-linecap","toFixed","opacity","strokeWidth","txt","bounds","getBBox","remove","pop","attrNamesToIgnoreMap","fontAttrNamesToIgnore","font-family","font-weight","font-style","font-size","SVGContext","svgcontext_classCallCheck","svgNS","svg","appendChild","_","layerDivider","createElementNS","vexflowLayerG","groups","parent","stroke-dasharray","iePolyfill","svgElementType","cls","group","pointerBBox","navigator","ie","test","userAgent","bold","italic","indexOf","replace","fontAttributes","fontSize","fontArray","trim","match","applyAttributes","visibleWidth","visibleHeight","setViewBox","viewBoxString","attrNamesToIgnore","nodeName","propertyName","setAttributeNS","lastChild","removeChild","rectangle","add","number","precision","round","peth","textContent","ieMeasureTextFix","widthCorrection","lastContext","Renderer","elementId","backend","renderer_classCallCheck","Backends","CANVAS","bolsterCanvasContext","RAPHAEL","SVG","renderer_createClass","background","renderer","setBackgroundFillStyle","buildContext","USE_CANVAS_PROXY","methodName","fromX","fromY","toX","toY","dashPattern","dx","dy","atan2","idx","dashLength","nx","ny","VML","NONE","UP","DOWN","devicePixelRatio","Stem","stem_classCallCheck","stem_possibleConstructorReturn","stem_getPrototypeOf","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","stem_inherits","stem_createClass","direction","ext","CATEGORY","y_offset","isStemUp","ys","stemHeight","innerMostNoteheadY","apply","outerMostNoteheadY","topY","baseY","isVisible","stem_x","stem_y","getHeight","DEBUG","stemletYOffset","openGroup","closeGroup","Tuplet","tuplet_classCallCheck","tuplet_possibleConstructorReturn","tuplet_getPrototypeOf","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","some","note","beam","ratioed","location","LOCATION_TOP","Formatter","AlignRestsToNotes","resolveGlyphs","attach","tuplet_inherits","tuplet_createClass","setTuplet","resetTuplet","LOCATION_BOTTOM","msg","warn","getNotesOccupied","beats","setNotesOccupied","detach","numerator_glyphs","unshift","denom_glyphs","first_note","maxTupletCount","countTuplets","minTupletCount","tupletStack","tuplet","tupletCount","nested_tuplet_y_offset","getNestedTupletCount","NESTING_OFFSET","getStave","getYForLine","top_y","getStemDirection","getStemExtents","bottom_y","_this2","last_note","getTieLeftX","getTieRightX","getStemX","getYPosition","addGlyphWidth","reduce","notation_start_x","line_width","x_offset","render","colon_x","colon_radius","calculateStemDirection","lineSum","keyProps","keyProp","BEAM_LEFT","BEAM_BOTH","Beam","auto_stem","beam_classCallCheck","beam_getPrototypeOf","getIntrinsicTicks","hasStem","getCategory","memo","setStemDirection","setBeam","beam_assertThisInitialized","postFormatted","getBeamCount","break_on_indices","render_options","beam_width","max_slope","min_slope","slope_iterations","slope_cost","show_stemlets","stemlet_extension","partial_beam_length","flat_beams","min_flat_beam_offset","beam_inherits","beam_createClass","time_sig","2/2","3/2","4/2","1/4","2/4","3/4","4/4","1/8","2/8","3/8","4/8","1/16","2/16","3/16","4/16","beatTotal","beatValue","voice","generateBeams","getTickables","config","nextGroup","sanitizedGroups","tickGroups","multiply","clone","currentTickGroup","noteGroups","currentGroup","nextTickGroup","unprocessedNote","shouldIgnoreTicks","ticksPerGroup","totalTicks","getTicks","unbeamable","equals","tempGroup","isFirstOrLast","prevNote","breaksOnEachRest","beam_rests","isRest","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","stemDirection","findFirstNote","applyStemDirection","uniqueTuplets","beamedNoteGroups","beamable","allTuplets","beams","secondary_breaks","secondary_break_ticks","flat_beam_offset","setTupletLocation","setBracketed","getGlyph","beamCount","indices","first_x_px","first_y_px","slope","_this$render_options","firstNote","initialSlope","lastNote","firstStemTipY","firstStemX","getStemSlope","increment","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","getSlopeY","stemTipY","diff","idealSlope","cost","_this$render_options2","total","extremeY","extremeBeamCount","currentExtreme","_toConsumableArray","getYs","offset","extremeTest","newOffset","beamY","_this$render_options3","getBeamYToDraw","stemX","beamedStemTipY","preBeamExtension","getStem","getExtension","beamExtension","setExtension","totalBeamWidth","setVisibility","setStemlet","prev_tick","tick","next_tick","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","lookupBeamDirection","tick_of_duration","beam_lines","beam_started","current_beam","previous_should_break","tick_tally","should_break","prev_note","next_note","beam_alone","end","start","beam_direction","last_beam","setContext","valid_beam_durations","beamThickness","beamLines","getBeamLines","j","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","calculateFlatSlope","calculateSlope","applyStemExtensions","postFormat","drawStems","drawBeamLines","Voice","time","voice_classCallCheck","voice_possibleConstructorReturn","voice_getPrototypeOf","resolutionMultiplier","tickables","ticksUsed","smallestTickCount","largestTickWidth","Mode","STRICT","voiceGroup","voice_inherits","voice_createClass","SOFT","FULL","setStave","getBoundingBox","mergeWith","g","strict","tickable","lessThan","setVoice","addTickable","preFormatted","tickable_bb","drawWithStyle","drawBoldDoubleLine","topX","botY","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","staveconnector_classCallCheck","staveconnector_possibleConstructorReturn","staveconnector_getPrototypeOf","thickness","DOUBLE","texts","staveconnector_inherits","staveconnector_createClass","SINGLE_RIGHT","SINGLE_LEFT","SINGLE","BRACE","BRACKET","THIN_DOUBLE","singleRight","singleLeft","single","double","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","none","typeString","content","shift_x","getNumLines","attachment_height","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","renderGlyph","setFont","text_width","getBottomLineY","Tickable","tickable_classCallCheck","tickable_possibleConstructorReturn","tickable_getPrototypeOf","intrinsicTicks","tickMultiplier","tickContext","modifierContext","modifiers","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","left","right","iterations","space","used","mean","deviation","tickable_inherits","isCenterAligned","noteCount","notesOccupied","splice","getNoteCount","applyTickMultiplier","mc","mod","tc","preFormat","Note","_Tickable","note_struct","note_classCallCheck","note_possibleConstructorReturn","note_getPrototypeOf","initData","JSON","stringify","noteType","duration_override","setDuration","setIntrinsicTicks","positions","note_typeof","playNote","extraLeftPx","extraRightPx","left_modPx","right_modPx","setCenterAlignment","annotation_spacing","stave_padding","STAVEPADDING","note_inherits","note_createClass","yPos","xStart","getAbsoluteX","modLeftPx","xPre1","xAbs","xPost1","noteWidth","xPost2","xEnd","modRightPx","xFreedomRight","getFormatterMetrics","xWidth","getXShift","yy","spaceDeviation","setNote","setIndex","setPreFormatted","setYs","glyph_font_scale","text_line","getYForTopText","modifier","left_shift","right_shift","getNoteStartX","getCenterXShift","extra","getExtraPx","NoteHead","_Note","head_options","notehead_classCallCheck","notehead_possibleConstructorReturn","notehead_getPrototypeOf","StaveNote","STEM_UP","glyph_code","custom_glyph_code","custom_glyph","slashed","stroke_px","setWidth","notehead_inherits","notehead_createClass","_get","displacementStemAdjustment","spacing","getSpacingBetweenLines","half_spacing","min_y","getLine","setY","getYForNote","head_x","staveSpace","breve_lines","drawSlashNoteHead","StemmableNote","stemmablenote_classCallCheck","stemmablenote_possibleConstructorReturn","stemmablenote_getPrototypeOf","stemExtensionOverride","stemmablenote_inherits","setStem","shouldRenderFlag","flagCode","getStemExtension","setDirection","buildFlag","getGlyphWidth","getExtents","textLine","extents","getYForBottomText","stem_struct","Modifier","modifier_classCallCheck","modifier_possibleConstructorReturn","modifier_getPrototypeOf","Position","LEFT","modifier_context","spacingFromNextModifier","modifier_inherits","modifier_createClass","RIGHT","ABOVE","BELOW","above","below","PositionString","subNotes","getTickContext","extraPx","subNoteXOffset","extraLeft","getSpacingFromNextModifier","subNote","subTickContext","setXOffset","Dot","_Modifier","dot_classCallCheck","dot_possibleConstructorReturn","dot_getPrototypeOf","dot_inherits","dot_createClass","dot_list","max_shift_map","dot","getNote","getKeyProps","getIndex","getExtraRightPx","note_id","dot_shift","x_width","last_line","prev_dotted_space","half_shiftY","_dot_list$_i","setXShift","lineSpace","spacing_between_lines_px","getModifierStartXY","forceFlagRight","shiftRestVertical","dir","isrest","maxLine","minLine","setKeyLine","getKeyLine","_StemmableNote","noteStruct","stavenote_classCallCheck","stavenote_possibleConstructorReturn","stavenote_getPrototypeOf","mv_headtype","durationNum","use_default_head_x","note_heads","voice2Note","isNearNote","DEFAULT_LEDGER_LINE_OFFSET","calculateKeyProps","buildStem","autoStem","stavenote_inherits","stavenote_createClass","formatByY","notesList","minL","stemMax","getStemLength","stemMin","getStemMinumumLength","maxL","voice_shift","getVoiceShiftWidth","is_displaced","isDisplaced","voices","noteU","noteM","noteL","stemDelta","voiceXShift","lineSpacing","setStemLength","centerRest","hasStave","topNote","bottomNote","topKeys","bottomKeys","topNotBottomY","stavenote_get","noteHeadStyles","noteHead","buildNoteHeads","setStyle","head","calcExtraPx","step","getKeys","lastLine","lineDiff","noteProps","notehead","Infinity","_this$getMetrics","minY","maxY","halfLineSpacing","frac","isTopNote","resultLine","thisLine","getCenterGlyphX","_this$getNoteHeadBoun","getNoteHeadBounds","setYBounds","tieStartX","tieEndX","restLine","top","bot","_Modifier$Position","hasFlag","isInnerNoteIndex","ledgerLineStyle","flagStyle","mContext","setModifierContext","addModifier","articulation","annotation","setDotShiftY","addDot","getModifiers","setExtraLeftPx","setExtraRightPx","yTop","yBottom","nonDisplacedX","displacedX","highestLine","lowestLine","highestDisplacedLine","lowestDisplacedLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","doubleWidth","_this$getNoteHeadBoun2","min_x","drawLedgerLine","normal","ledgerWidth","_extends","getLedgerLineStyle","noteheadStyle","_this$getNoteHeadBoun3","noteStemHeight","flagX","flagY","getFlagStyle","_this3","stemStruct","xBegin","shouldRenderStem","setX","setNoteHeadXBounds","isChord","drawLedgerLines","drawStem","drawNoteHeads","drawFlag","drawModifiers","FretHandFinger","frethandfinger_classCallCheck","frethandfinger_possibleConstructorReturn","frethandfinger_getPrototypeOf","finger","frethandfinger_inherits","frethandfinger_createClass","nums","nums_list","shiftLeft","shiftRight","pos","getPosition","props_tmp","getExtraLeftPx","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","num_shift","_nums_list$_i","numWidth","dot_x","dot_y","Music","music_classCallCheck","e","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","b2","min2","S","H","maj2","T","b3","min3","maj3","#4","b5","aug4","#5","b6","aug5","maj6","m7","min7","dom7","maj7","major","dorian","mixolydian","minor","M","scales","root_index","cn","c#","c##","cb","cbb","dn","d#","d##","dbb","en","e#","e##","eb","ebb","f#","f##","fb","fbb","gn","g#","g##","gb","gbb","an","a#","a##","ab","abb","bn","b#","b##","bbb","NUM_TONES","interval","isValidNoteValue","noteString","toLowerCase","keyString","noteValues","intervalString","intervals","canonical_notes","intervalValue","isValidIntervalValue","diatonic_intervals","sum","parts","getNoteParts","rootValue","getNoteValue","multiplier","reverse_interval","relativeNoteName","tones","nextNote","getRelativeNoteValue","note1","note2","difference","keySigParts","getKeyParts","scaleName","scaleTypes","keySigString","getScaleTones","noteLocation","root_indices","scaleMap","roots","rootName","noteName","getRelativeNoteName","Accidental","accidental_classCallCheck","accidental_possibleConstructorReturn","accidental_getPrototypeOf","font_scale","parenLeftPadding","parenRightPadding","cautionary","parenLeft","parenRight","accidental_inherits","accidental_createClass","leftShift","accList","accLine","lineList","accShift","previousLine","flatLine","dblSharpLine","numAcc","totalColumns","_loop","_i3","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","_getGroupLines$map2","_slicedToArray","item","_i2","notColliding","_len2","indexPairs","_key2","every","lines","accidental_toConsumableArray","groupLength","endCase","groupMember","column","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","line1","line2","clearance","clearanceRequired","collision","tickPositions","tickNoteMap","tickPosition","notesAtPosition","music","createScaleMap","modifiedPitches","processNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","addAccidental","getGraceNotes","fontScale","parenWidth","accX","accY","NoteSubGroup","notesubgroup_classCallCheck","notesubgroup_possibleConstructorReturn","notesubgroup_getPrototypeOf","formatter","setStrict","addTickables","notesubgroup_assertThisInitialized","notesubgroup_inherits","notesubgroup_createClass","joinVoices","format","getMinTotalWidth","alignSubNotesWithNote","StaveTie","stavetie_classCallCheck","stavetie_possibleConstructorReturn","stavetie_getPrototypeOf","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","setNotes","stavetie_inherits","first_indices","last_indices","first_ys","last_ys","last_x_px","cp_x","last_y_px","top_cp_y","bottom_cp_y","center_x","getTieStartX","getTieEndX","renderTie","renderText","TabTie","_StaveTie","tabtie_classCallCheck","tabtie_possibleConstructorReturn","tabtie_getPrototypeOf","tabtie_inherits","tabtie_createClass","GraceNoteGroup","grace_notes","show_slur","gracenotegroup_classCallCheck","gracenotegroup_possibleConstructorReturn","gracenotegroup_getPrototypeOf","slur","slur_y_shift","gracenotegroup_assertThisInitialized","gracenotegroup_inherits","gracenotegroup_createClass","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","setSpacingFromNextModifier","graceNote","TieClass","Stroke","strokes_classCallCheck","strokes_possibleConstructorReturn","strokes_getPrototypeOf","all_voices","note_end","stroke_spacing","strokes_inherits","strokes_createClass","strokes","strokeList","_note$getKeyProps$str","getPositions","strokeShift","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","ROLL_UP","RASQUEDO_DOWN","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","arrow","arrow_shift_x","arrow_y","text_y","line_space","getModifierContext","Type","StringNumber","stringnumber_classCallCheck","stringnumber_possibleConstructorReturn","stringnumber_getPrototypeOf","string_number","dashed","leg","LineEndType","stringnumber_inherits","stringnumber_createClass","shift_left","num_shiftR","x_widthL","x_widthR","num_width","stem_ext","bottom","STEM_DOWN","len","pattern","drawDashedLine","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveNote","noteCategory","Articulation","articulation_classCallCheck","articulation_possibleConstructorReturn","articulation_getPrototypeOf","articulation_inherits","articulation_createClass","getIncrement","setTextLine","top_text_line","maxWidth","articWidth","builder","articNameToCode","staccato","tenuto","articString","_ref3","articulation_slicedToArray","getFactory","_ABOVE$BELOW$position","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","_defineProperty","setOrigin","_note$getStemExtents","stemBaseY","articulation_toConsumableArray","getTopY","INITIAL_OFFSET","_note$getStemExtents2","getBottomY","offsetDirection","noteLine","articLine","snappedLine","snapLineToStaff","TickContext","tickcontext_classCallCheck","tickcontext_possibleConstructorReturn","tickcontext_getPrototypeOf","currentTick","maxTicks","minTicks","padding","xBase","xOffset","notePx","tContexts","tickcontext_inherits","tickcontext_createClass","tContext","contexts","extraRight","setTickContext","Ornament","ornament_classCallCheck","ornament_possibleConstructorReturn","ornament_getPrototypeOf","delayed","accidentalUpper","accidentalLower","accidentalLowerPadding","accidentalUpperPadding","ornament","ornament_inherits","ornament_createClass","accid","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","nextContext","getNextContext","Annotation","annotation_classCallCheck","annotation_possibleConstructorReturn","annotation_getPrototypeOf","justification","Justify","CENTER","vert_justification","VerticalJustify","TOP","annotation_inherits","annotation_createClass","annotations","CENTER_STEM","center","centerStem","BOTTOM","just","VerticalJustifyString","JustifyString","text_height","has_stem","stem_base","yt","Bend","release","phrase","bend_classCallCheck","bend_possibleConstructorReturn","bend_getPrototypeOf","line_style","bend_width","release_width","updateWidth","bend_inherits","bend_createClass","bends","last_width","bend","total_width","additional_width","draw_width","bend_height","annotation_y","renderRelease","renderArrowHead","setRawFont","render_x","cp_y","last_bend","last_drawn_width","Vibrato","vibrato_classCallCheck","vibrato_possibleConstructorReturn","vibrato_getPrototypeOf","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vibrato_inherits","vibrato_createClass","vibratos","vibrato","vx","vy","renderVibrato","opts","num_waves","ModifierContext","modifiercontext_classCallCheck","PREFORMAT","POSTFORMAT","formatted","extra_left_px","extra_right_px","lookAhead","nextRestLine","getLineForRest","createContexts","ContextType","addToContext","getTotalTicks","getMode","isComplete","getResolutionMultiplier","tickToContextMap","tickList","integerTicks","newContext","list","formatter_classCallCheck","minTotalWidth","hasMinTotalWidth","tickContexts","modiferContexts","contextGaps","gaps","formatter_createClass","_ref$paddingBetween","paddingBetween","addToModifierContext","xPos","gap","lossHistory","loss","auto_beam","align_rests","formatter_typeof","setMode","applyAndGetBeams","formatToStave","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","createTickContexts","_this$tickContexts","contextList","contextMap","getTicksUsed","justifyWidth","renderingContext","centerX","leftoverPxPerTick","spaceAccum","prevTick","getCenterAlignedTickables","evaluate","prevContext","prevMetrics","insideRightEdge","insideLeftEdge","durationStats","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","totalCost","current","prev","next","move","minShift","postFormatContexts","createModifierContexts","alignRests","getNoteEndX","StaveModifier","stavemodifier_classCallCheck","stavemodifier_possibleConstructorReturn","stavemodifier_getPrototypeOf","layoutMetrics","stavemodifier_inherits","stavemodifier_createClass","BEGIN","END","renderToStave","setYShift","Barline","_StaveModifier","stavebarline_classCallCheck","stavebarline_possibleConstructorReturn","stavebarline_getPrototypeOf","TYPE","widths","REPEAT_BEGIN","REPEAT_END","REPEAT_BOTH","paddings","layoutMetricsMap","paddingLeft","paddingRight","setPosition","setType","stavebarline_inherits","stavebarline_createClass","repeatBegin","repeatEnd","repeatBoth","setPadding","setLayoutMetrics","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","getTopLineTopY","getBottomLineBottomY","begin","dot_radius","Repetition","staverepetition_classCallCheck","staverepetition_possibleConstructorReturn","staverepetition_getPrototypeOf","symbol_type","staverepetition_inherits","staverepetition_createClass","CODA_LEFT","CODA_RIGHT","SEGNO_LEFT","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","drawCodaFixed","drawSymbolText","drawSignoFixed","num_lines","draw_coda","text_x","symbol_x","vertical_bar_width","StaveSection","section","stavesection_classCallCheck","stavesection_possibleConstructorReturn","stavesection_getPrototypeOf","stavesection_inherits","stavesection_createClass","StaveTempo","tempo","stavetempo_classCallCheck","stavetempo_possibleConstructorReturn","stavetempo_getPrototypeOf","stavetempo_inherits","stavetempo_createClass","bpm","stem_height","toIsBeat","error","toDuration","toDots","TextNote","text_struct","textnote_classCallCheck","textnote_possibleConstructorReturn","textnote_getPrototypeOf","superscript","subscript","glyph_type","struct","GLYPHS","glyph_struct","smooth","Justification","textnote_inherits","textnote_createClass","mordent_upper","mordent_lower","z","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","StaveText","stavetext_classCallCheck","stavetext_possibleConstructorReturn","stavetext_getPrototypeOf","stavetext_inherits","stavetext_createClass","Clef","clef_classCallCheck","clef_possibleConstructorReturn","clef_getPrototypeOf","clef_inherits","clef_createClass","tab","default","small","8va","sizes","attachments","8vb","types","anno_dict","attachment","glyphScale","glyphOffset","numLines","getOptions","setPoint","placeGlyphOnLine","KeySignature","cancelKeySpec","alterKeySpec","keysignature_classCallCheck","keysignature_possibleConstructorReturn","keysignature_getPrototypeOf","setKeySig","glyphFontScale","xPositions","paddingForced","keysignature_inherits","keysignature_createClass","nextAcc","accGlyphData","extraWidth","accidentalSpacing","xPosition","glyphWidth","cancel_accList","different_types","naturals","cancelled","customLines","convertToCancelAccList","firstAccidentalType","convertToAlterAccList","endClef","convertAccLines","convertToGlyph","TimeSignature","timeSpec","customPadding","validate_args","timesignature_classCallCheck","timesignature_possibleConstructorReturn","timesignature_getPrototypeOf","topLine","bottomLine","setTimeSig","timeSig","timesignature_inherits","timesignature_createClass","C|","_TimeSignature$glyphs","numbers","assertIsValidFraction","_timeSpec$split$map2","timesignature_slicedToArray","topDigits","botDigits","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","topGlyph","botWidth","botGlyph","topStartX","botStartX","start_x","parseTimeSpec","Volta","stavevolta_classCallCheck","stavevolta_possibleConstructorReturn","stavevolta_getPrototypeOf","volta","stavevolta_inherits","stavevolta_createClass","MID","BEGIN_END","vert_height","Stave","stave_classCallCheck","stave_possibleConstructorReturn","stave_getPrototypeOf","end_x","measure","glyph_spacing_px","fill_style","left_bar","right_bar","space_above_staff_ln","space_below_staff_ln","top_text_position","resetLines","BARTYPE","addEndModifier","stave_inherits","line_config","visible","bottom_text_position","begBarline","getType","stave_extends","number_t","headroom","_Barline$type","clefSpec","clefs","addClef","setClef","keySignatures","addKeySignature","setKeySignature","timeSignatures","addTimeSignature","setTimeSignature","category","items","order","temp","endBarline","begModifiers","endModifiers","sortByCategory","barlines","keysignatures","timesignatures","getPadding","lastBarlineIdx","getLayoutMetrics","getModifierXShift","isDouble","drawVerticalFixed","top_line","bottom_line","drawVerticalBarFixed","line_number","lines_configuration","TabStave","_Stave","tabstave_classCallCheck","tab_options","tabstave_possibleConstructorReturn","tabstave_getPrototypeOf","tabstave_inherits","TabNote","tab_struct","draw_stem","tabnote_classCallCheck","tabnote_possibleConstructorReturn","tabnote_getPrototypeOf","ghost","draw_dots","draw_stem_through_stave","tabnote_inherits","tabnote_createClass","stem_extension_override","tabnote_get","getStemY","stemDownLine","stemStartLine","shouldDrawFlag","flag_x","flag_y","flag_code","_this4","stem_through","stem_lines","unused_strings","up_stem","down_stem","line_spacing","total_lines","strings","containsLastString","containsFirstString","line_ys","string","isTopBound","isBottomBound","getPartialStemLines","strings_used","getUnusedStringGroups","tab_x","render_stem","drawPositions","drawStemThrough","semibrave_rest","VibratoBracket","bracket_data","vibratobracket_classCallCheck","vibratobracket_possibleConstructorReturn","vibratobracket_getPrototypeOf","stop","vibratobracket_inherits","stop_x","MultiMeasureRest","number_of_measures","multimeasurerest_classCallCheck","multimeasurerest_possibleConstructorReturn","multimeasurerest_getPrototypeOf","show_number","number_line","number_glyph_point","padding_left","padding_right","line_thickness","serif_thickness","use_symbols","symbol_spacing","semibrave_rest_glyph_scale","xs","multimeasurerest_inherits","sbl","serif","lineThicknessHalf","n4","n2","n1","get_semibrave_rest","semibrave_rest_width","yMiddle","drawSymbols","drawLine","ClefNote","clefnote_classCallCheck","clefnote_possibleConstructorReturn","clefnote_getPrototypeOf","clefnote_inherits","clefnote_createClass","clef_obj","clefnote_get","abs_x","KeySigNote","keysignote_classCallCheck","keysignote_possibleConstructorReturn","keysignote_getPrototypeOf","keysignote_inherits","keysignote_get","TimeSigNote","timesignote_classCallCheck","timesignote_possibleConstructorReturn","timesignote_getPrototypeOf","timeSignature","getTimeSig","timesignote_inherits","timesignote_get","TabSlide","_TabTie","tabslide_classCallCheck","tabslide_possibleConstructorReturn","tabslide_getPrototypeOf","first_fret","last_fret","SLIDE_DOWN","SLIDE_UP","slide_direction","tabslide_inherits","tabslide_createClass","slide_y","GraceNote","_StaveNote","gracenote_classCallCheck","gracenote_possibleConstructorReturn","gracenote_getPrototypeOf","gracenote_extends","SCALE","LEDGER_LINE_OFFSET","slash","gracenote_inherits","gracenote_createClass","ret","gracenote_get","staveNoteScale","getStaveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","offsets","slashStemOffset","slashBeamOffset","protrusions","beam_slope","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","GraceTabNote","_TabNote","gracetabnote_classCallCheck","gracetabnote_possibleConstructorReturn","gracetabnote_getPrototypeOf","gracetabnote_inherits","gracetabnote_createClass","gracetabnote_get","Tuning","tuningString","tuning_classCallCheck","setTuning","tuning_createClass","standard","dagdad","dropd","standardBanjo","names","tuningValues","numStrings","noteToInteger","stringNum","fretNum","stringValue","getValueForString","getValueForFret","KeyManager","keymanager_classCallCheck","setKey","keyParts","scaleMapByValue","originalScaleMapByValue","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","stavehairpin_classCallCheck","stavehairpin_possibleConstructorReturn","stavehairpin_getPrototypeOf","hairpin","left_shift_px","right_shift_px","stavehairpin_inherits","stavehairpin_createClass","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","setRenderOptions","CRESC","DECRESC","dis","first_y","staff_height","l_shift","r_shift","last_x","first_x","renderHairpin","last_y","Curve","from","to","curve_classCallCheck","curve_possibleConstructorReturn","curve_getPrototypeOf","NEAR_HEAD","position_end","invert","cps","curve_inherits","curve_createClass","NEAR_TOP","nearHead","nearTop","cp_spacing","metric","end_metric","renderCurve","TextDynamics","textdynamics_classCallCheck","textdynamics_possibleConstructorReturn","textdynamics_getPrototypeOf","sequence","glyph_font_size","textdynamics_inherits","textdynamics_createClass","letter","glyph_data","letter_x","current_letter","drawArrowHead","x0","y0","StaveLine","staveline_classCallCheck","staveline_possibleConstructorReturn","staveline_getPrototypeOf","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","TextJustification","staveline_inherits","staveline_createClass","setLineDash","setLineCap","start_position","end_position","applyLineStyle","first_index","last_index","upwards_slope","notehead_width","point1","point2","end_y","start_y","both_arrows","distance","ratio","angle1","angle2","top_x","line_angle","drawArrowLine","vertical_position","applyFontStyle","drawPedalGlyph","PedalMarking","pedalmarking_classCallCheck","pedalmarking_possibleConstructorReturn","pedalmarking_getPrototypeOf","TEXT","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","glyph_point_size","pedalmarking_inherits","pedalmarking_createClass","pedal","Styles","MIXED","setCustomText","pedal_depress","pedal_release","mixed","depress","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawBracketed","drawText","TextBracket","_ref$text","_ref$superscript","_ref$position","Positions","textbracket_classCallCheck","textbracket_possibleConstructorReturn","textbracket_getPrototypeOf","show_bracket","underline_superscript","textbracket_inherits","textbracket_createClass","textbracket_extends","main_width","main_height","super_y","superscript_width","super_height","line_y","BarNote","_this$metrics$widths","barnote_classCallCheck","barnote_possibleConstructorReturn","barnote_getPrototypeOf","barnote_defineProperty","barnote_inherits","barnote_get","barline","GhostNote","parameter","ghostnote_classCallCheck","ghostnote_typeof","ghostnote_possibleConstructorReturn","ghostnote_getPrototypeOf","ghostnote_inherits","ghostnote_get","Tremolo","tremolo_classCallCheck","tremolo_possibleConstructorReturn","tremolo_getPrototypeOf","tremolo_inherits","tremolo_createClass","y_spacing","YOFFSETSTEMDOWN","YOFFSETSTEMUP","XOFFSETSTEMDOWN","XOFFSETSTEMUP","Crescendo","crescendo_classCallCheck","crescendo_possibleConstructorReturn","crescendo_getPrototypeOf","decrescendo","extend_left","extend_right","crescendo_inherits","decresc","tick_context","next_context","begin_x","half_height","reverse","Parser","flattenMatches","results","matchedString","grammar","parser_classCallCheck","errorPos","expect","returnPos","token","regexp","RegExp","success","incrementPos","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","matchSuccess","matchFail","numMatches","more","expectOne","expectOneOrMore","rules","matchToken","noSpace","oneOrMore","zeroOrMore","expectZeroOrMore","matches","run","EasyScore","Grammar","easyscore_classCallCheck","LINE","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","ACCIDENTALS","DOT","setNoteDots","_this5","SLASH","MAYBESLASH","TYPES","setNoteType","_this6","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","_this7","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Builder","commitHooks","elements","rollingDuration","resetPiece","easyscore_extends","commitHook","piece","chord","addNote","_this8","easyscore_typeof","easyscore_toConsumableArray","_this9","_this$piece","accids","addDotToAll","setId","setClass","addClass","defaults","easyscore_createClass","_this10","easyScoreHook","throwOnError","parser","addCommitHook","getElements","voiceOptions","setDefaults","default_options","factory_extends","Factory","factory_classCallCheck","face","renderQ","systems","staves","_arr","_i","initRenderer","_this$options$rendere","ghostNote","textNoteStruct","textNote","barNote","clefNote","timeSigNote","keySigNote","cancelKey","alterKey","vJustify","hJustify","fontFamily","fontWeight","setJustification","setVerticalJustification","fingering","stringNumber","multimeasurerest","connector","secondaryBeamBreaks","breakSecondaryAt","curve","tie","setText","vibratoBracket","setLine","setHarsh","textBracket","system","System","StylesString","isRendered","system_extends","system_classCallCheck","system_possibleConstructorReturn","system_getPrototypeOf","system_inherits","spaceBetweenStaves","debugFormatter","formatIterations","system_get","spaceAbove","spaceBelow","debugNoteMetrics","startX","allVoices","debugNoteMetricsYs","part","setNoteStartX","tune","lastY","plotDebugging","plotMetrics"],"mappings":"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","file":"vexflow-debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n\nconst Vex = () => {};\n\n// Default log function sends all arguments to console.\nVex.L = (block, args) => {\n  if (!args) return;\n  const line = Array.prototype.slice.call(args).join(' ');\n  window.console.log(block + ': ' + line);\n};\n\nVex.MakeException = (name) => {\n  const exception = class extends Error {\n    constructor(message, data) {\n      super(message);\n      this.name = name;\n      this.message = message;\n      this.data = data;\n    }\n  };\n\n  return exception;\n};\n\n// Default runtime exception.\nclass RuntimeError {\n  constructor(code, message) {\n    this.code = code;\n    this.message = message;\n  }\n\n  toString() {\n    return '[RuntimeError] ' + this.code + ':' + this.message;\n  }\n}\n\n// Shortcut method for `RuntimeError`.\nVex.RuntimeError = RuntimeError;\nVex.RERR = Vex.RuntimeError;\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nVex.Merge = (destination, source) => {\n  for (const property in source) { // eslint-disable-line guard-for-in\n    destination[property] = source[property];\n  }\n  return destination;\n};\n\n// DEPRECATED. Use `Math.*`.\nVex.Min = Math.min;\nVex.Max = Math.max;\nVex.forEach = (a, fn) => {\n  for (let i = 0; i < a.length; i++) {\n    fn(a[i], i);\n  }\n};\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nVex.RoundN = (x, n) =>\n  (x % n) >= (n / 2)\n    ? parseInt(x / n, 10) * n + n\n    : parseInt(x / n, 10) * n;\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nVex.MidLine = (a, b) => {\n  let mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n};\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nVex.SortAndUnique = (arr, cmp, eq) => {\n  if (arr.length > 1) {\n    const newArr = [];\n    let last;\n    arr.sort(cmp);\n\n    for (let i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Check if array `a` contains `obj`.\nVex.Contains = (a, obj) => {\n  let i = a.length;\n  while (i--) {\n    if (a[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Get the 2D Canvas context from DOM element `canvas_sel`.\nVex.getCanvasContext = canvas_sel => {\n  if (!canvas_sel) {\n    throw new Vex.RERR('BadArgument', 'Invalid canvas selector: ' + canvas_sel);\n  }\n\n  const canvas = document.getElementById(canvas_sel);\n  if (!(canvas && canvas.getContext)) {\n    throw new Vex.RERR(\n      'UnsupportedBrowserError', 'This browser does not support HTML5 Canvas'\n    );\n  }\n\n  return canvas.getContext('2d');\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nVex.drawDot = (ctx, x, y, color = '#55') => {\n  ctx.save();\n  ctx.setFillStyle(color);\n\n  // draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\nVex.BM = (s, f) => {\n  const start_time = new Date().getTime();\n  f();\n  const elapsed = new Date().getTime() - start_time;\n  Vex.L(s + elapsed + 'ms');\n};\n\n// Get stack trace.\nVex.StackTrace = () => {\n  const err = new Error();\n  return err.stack;\n};\n\n// Dump warning to console.\nVex.W = (...args) => {\n  const line = args.join(' ');\n  window.console.log('Warning: ', line, Vex.StackTrace());\n};\n\n// Used by various classes (e.g., SVGContext) to provide a\n// unique prefix to element names (or other keys in shared namespaces).\nVex.Prefix = text => Vex.Prefix.prefix + text;\nVex.Prefix.prefix = 'vf-';\n\nexport { Vex };\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Fraction class that represents a rational number\n//\n// @author zz85\n// @author incompleteopus (modifications)\n\n/* eslint-disable no-underscore-dangle */\n\nimport { Vex } from './vex';\nexport class Fraction {\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  static GCD(a, b) {\n    if (typeof a !== 'number' || typeof b !== 'number') {\n      throw new Vex.RERR('BadArgument', `Invalid numbers: ${a}, ${b}`);\n    }\n\n    let t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  }\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  static LCM(a, b) {\n    return ((a * b) / Fraction.GCD(a, b));\n  }\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  static LCMM(args) {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length === 1) {\n      return args[0];\n    } else if (args.length === 2) {\n      return Fraction.LCM(args[0], args[1]);\n    } else {\n      const arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Fraction.LCMM(args));\n    }\n  }\n\n  constructor(numerator, denominator) {// 分子， 分母\n    this.set(numerator, denominator);\n  }\n  set(numerator, denominator) {\n    this.numerator = numerator === undefined ? 1 : numerator;\n    this.denominator = denominator === undefined ? 1 : denominator;\n    return this;\n  }\n  value() {\n    return this.numerator / this.denominator;\n  }\n  simplify() {\n    let u = this.numerator;\n    let d = this.denominator;\n\n    const gcd = Fraction.GCD(u, d);\n    u /= gcd;\n    d /= gcd;\n\n    if (d < 0) {\n      d = -d;\n      u = -u;\n    }\n    return this.set(u, d);\n  }\n  add(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a + otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  subtract(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 0;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    const lcm = Fraction.LCM(this.denominator, otherDenominator);\n    const a = lcm / this.denominator;\n    const b = lcm / otherDenominator;\n\n    const u = this.numerator * a - otherNumerator * b;\n    return this.set(u, lcm);\n  }\n  multiply(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n  }\n  divide(param1, param2) {\n    let otherNumerator;\n    let otherDenominator;\n\n    if (param1 instanceof Fraction) {\n      otherNumerator = param1.numerator;\n      otherDenominator = param1.denominator;\n    } else {\n      if (param1 !== undefined) {\n        otherNumerator = param1;\n      } else {\n        otherNumerator = 1;\n      }\n\n      if (param2 !== undefined) {\n        otherDenominator = param2;\n      } else {\n        otherDenominator = 1;\n      }\n    }\n\n    return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n  }\n\n  // Simplifies both sides and checks if they are equal.\n  equals(compare) {\n    const a = Fraction.__compareA.copy(compare).simplify();\n    const b = Fraction.__compareB.copy(this).simplify();\n\n    return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n  }\n\n  // Greater than operator.\n  greaterThan(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator > 0);\n  }\n\n  // Greater than or equals operator.\n  greaterThanEquals(compare) {\n    const a = Fraction.__compareB.copy(this);\n    a.subtract(compare);\n    return (a.numerator >= 0);\n  }\n\n  // Less than operator.\n  lessThan(compare) {\n    return !(this.greaterThanEquals(compare));\n  }\n\n  // Less than or equals operator.\n  lessThanEquals(compare) {\n    return !(this.greaterThan(compare));\n  }\n\n  // Creates a new copy with this current values.\n  clone() {\n    return new Fraction(this.numerator, this.denominator);\n  }\n\n  // Copies value of another Fraction into itself.\n  copy(copy) {\n    if (typeof copy === 'number') {\n      return this.set(copy || 0, 1);\n    }\n    return this.set(copy.numerator, copy.denominator);\n  }\n\n  // Returns the integer component eg. (4/2) == 2\n  quotient() {\n    return Math.floor(this.numerator / this.denominator);\n  }\n\n  // Returns the fraction component when reduced to a mixed number\n  fraction() {\n    return this.numerator % this.denominator;\n  }\n\n  // Returns the absolute value\n  abs() {\n    this.denominator = Math.abs(this.denominator);\n    this.numerator = Math.abs(this.numerator);\n    return this;\n  }\n\n  // Returns a raw string representation\n  toString() {\n    return this.numerator + '/' + this.denominator;\n  }\n\n  // Returns a simplified string respresentation\n  toSimplifiedString() {\n    return Fraction.__tmp.copy(this).simplify().toString();\n  }\n\n  // Returns string representation in mixed form\n  toMixedString() {\n    let s = '';\n    const q = this.quotient();\n    const f = Fraction.__tmp.copy(this);\n\n    if (q < 0) {\n      f.abs().fraction();\n    } else {\n      f.fraction();\n    }\n\n    if (q !== 0) {\n      s += q;\n\n      if (f.numerator !== 0) {\n        s += ' ' + f.toSimplifiedString();\n      }\n    } else {\n      if (f.numerator === 0) {\n        s = '0';\n      } else {\n        s = f.toSimplifiedString();\n      }\n    }\n\n    return s;\n  }\n\n  // Parses a fraction string\n  parse(str) {\n    const i = str.split('/');\n    const n = parseInt(i[0], 10);\n    const d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n    return this.set(n, d);\n  }\n}\n\n// Temporary cached objects\nFraction.__compareA = new Fraction();\nFraction.__compareB = new Fraction();\nFraction.__tmp = new Fraction();\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to regiser with a registry:\n//\n// 1) Explicitly call `element.register(registry)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\n\nimport { Vex } from './vex';\n\nexport const X = Vex.MakeException('RegistryError');\n\nfunction setIndexValue(index, name, value, id, elem) {\n  if (!index[name][value]) index[name][value] = {};\n  index[name][value][id] = elem;\n}\n\nexport class Registry {\n  static get INDEXES() { return ['type']; }\n\n  constructor() {\n    this.clear();\n  }\n\n  // If you call `enableDefaultRegistry`, any new elements will auto-register with\n  // the provided registry as soon as they're constructed.\n  static enableDefaultRegistry(registry) {\n    Registry.defaultRegistry = registry;\n  }\n\n  static getDefaultRegistry() {\n    return Registry.defaultRegistry;\n  }\n\n  static disableDefaultRegistry() {\n    Registry.defaultRegistry = null;\n  }\n\n  clear() {\n    // Indexes are represented as maps of maps (of maps). This allows\n    // for both multi-labeling (e.g., an element can have multiple classes)\n    // and efficient lookup.\n    this.index = {\n      id: {},\n      type: {},\n      class: {},\n    };\n    return this;\n  }\n\n  // Updates the indexes for element 'id'. If an element's attribute changes\n  // from A -> B, make sure to remove the element from A.\n  updateIndex({ id, name, value, oldValue }) {\n    const elem = this.getElementById(id);\n    if (oldValue !== null && this.index[name][oldValue]) {\n      delete this.index[name][oldValue][id];\n    }\n    if (value !== null) {\n      setIndexValue(this.index, name, value, elem.getAttribute('id'), elem);\n    }\n  }\n\n  // Register element `elem` with this registry. This adds the element to its index and watches\n  // it for attribute changes.\n  register(elem, id) {\n    id = id || elem.getAttribute('id');\n\n    if (!id) {\n      throw new X('Can\\'t add element without `id` attribute to registry', elem);\n    }\n\n    // Manually add id to index, then update other indexes.\n    elem.setAttribute('id', id);\n    setIndexValue(this.index, 'id', id, id, elem);\n    Registry.INDEXES.forEach(name => {\n      this.updateIndex({ id, name, value: elem.getAttribute(name), oldValue: null });\n    });\n    elem.onRegister(this);\n    return this;\n  }\n\n  getElementById(id) {\n    return this.index.id[id] ? this.index.id[id][id] : null;\n  }\n\n  getElementsByAttribute(attrName, value) {\n    const index = this.index[attrName];\n    if (index && index[value]) {\n      return Object.keys(index[value]).map(i => index[value][i]);\n    } else {\n      return [];\n    }\n  }\n\n  getElementsByType(type) { return this.getElementsByAttribute('type', type); }\n  getElementsByClass(className) { return this.getElementsByAttribute('class', className); }\n\n  // This is called by the element when an attribute value changes. If an indexed\n  // attribute changes, then update the local index.\n  onUpdate({ id, name, value, oldValue }) {\n    function includes(array, value) {\n      return array.filter(x => x === value).length > 0;\n    }\n\n    if (!includes(Registry.INDEXES.concat(['id', 'class']), name)) return this;\n    this.updateIndex({ id, name, value, oldValue });\n    return this;\n  }\n}\n\nRegistry.defaultRegistry = null;\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a generic base class for VexFlow, with implementations\n// of general functions and properties that can be inherited by all VexFlow elements.\n\nimport { Vex } from './vex';\nimport { Registry } from './registry';\n\nexport class Element {\n  static newID() { return 'auto' + (Element.ID++); }\n\n  constructor({ type } = {}) {\n    this.attrs = {\n      id: Element.newID(),\n      el: null,\n      type: type || 'Base',\n      classes: {},\n    };\n\n    this.boundingBox = null;\n    this.context = null;\n    this.rendered = false;\n\n    // If a default registry exist, then register with it right away.\n    if (Registry.getDefaultRegistry()) {\n      Registry.getDefaultRegistry().register(this);\n    }\n  }\n\n  // set the draw style of a stemmable note:\n  setStyle(style) { this.style = style; return this; }\n  getStyle() { return this.style; }\n\n  // Apply current style to Canvas `context`\n  applyStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n\n    context.save();\n    if (style.shadowColor) context.setShadowColor(style.shadowColor);\n    if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n    if (style.fillStyle) context.setFillStyle(style.fillStyle);\n    if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n    if (style.lineWidth) context.setLineWidth(style.lineWidth);\n    return this;\n  }\n\n  restoreStyle(context = this.context, style = this.getStyle()) {\n    if (!style) return this;\n    context.restore();\n    return this;\n  }\n\n  // draw with style of an element.\n  drawWithStyle() {\n    this.checkContext();\n    this.applyStyle();\n    this.draw();\n    this.restoreStyle();\n  }\n\n  // An element can have multiple class labels.\n  hasClass(className) { return (this.attrs.classes[className] === true); }\n  addClass(className) {\n    this.attrs.classes[className] = true;\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: className,\n        oldValue: null,\n      });\n    }\n    return this;\n  }\n\n  removeClass(className) {\n    delete this.attrs.classes[className];\n    if (this.registry) {\n      this.registry.onUpdate({\n        id: this.getAttribute('id'),\n        name: 'class',\n        value: null,\n        oldValue: className,\n      });\n    }\n    return this;\n  }\n\n  // This is called by the registry after the element is registered.\n  onRegister(registry) { this.registry = registry; return this; }\n  isRendered() { return this.rendered; }\n  setRendered(rendered = true) { this.rendered = rendered; return this; }\n\n  getAttributes() { return this.attrs; }\n  getAttribute(name) { return this.attrs[name]; }\n  setAttribute(name, value) {\n    const id = this.attrs.id;\n    const oldValue = this.attrs[name];\n    this.attrs[name] = value;\n    if (this.registry) {\n      // Register with old id to support id changes.\n      this.registry.onUpdate({ id, name, value, oldValue });\n    }\n    return this;\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getBoundingBox() { return this.boundingBox; }\n\n  // Validators\n  checkContext() {\n    if (!this.context) {\n      throw new Vex.RERR('NoContext', 'No rendering context attached to instance');\n    }\n    return this.context;\n  }\n}\n\nElement.ID = 1000;\n","// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n","// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\nexport class BoundingBox {\n  static copy(that) {\n    return new BoundingBox(that.x, that.y, that.w, that.h);\n  }\n\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getW() { return this.w; }\n  getH() { return this.h; }\n  setX(x) { this.x = x; return this; }\n  setY(y) { this.y = y; return this; }\n  setW(w) { this.w = w; return this; }\n  setH(h) { this.h = h; return this; }\n  move(x, y) { this.x += x; this.y += y; }\n  clone() { return BoundingBox.copy(this); }\n\n  // Merge my box with given box. Creates a bigger bounding box unless\n  // the given box is contained in this one.\n  mergeWith(boundingBox, ctx) {\n    const that = boundingBox;\n\n    const new_x = this.x < that.x ? this.x : that.x;\n    const new_y = this.y < that.y ? this.y : that.y;\n    const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n    const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n\n    this.x = new_x;\n    this.y = new_y;\n    this.w = new_w;\n    this.h = new_h;\n\n    if (ctx) this.draw(ctx);\n    return this;\n  }\n\n  draw(ctx, x, y) {\n    if (!x) x = 0;\n    if (!y) y = 0;\n    ctx.rect(this.x + x, this.y + y, this.w, this.h);\n    ctx.stroke();\n  }\n}\n","export const Font = {\n\"glyphs\":{\n\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\n\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\n\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\n\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\n\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\n\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\n\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\n\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\n\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\n\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\n\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\n\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\n\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\n\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\n\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\n\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\n\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\n\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\n\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\n\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\n\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\n\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\n\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\n\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\n\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\n\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\n\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\n\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\n\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\n\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\n\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\n\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\n\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\n\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\n\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\n\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\n\"v39\":{\"x_min\":-171.5,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\n\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\n\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\n\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\n\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\n\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\n\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\n\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\n\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\n\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\n\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\n\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\n\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\n\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\n\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\n\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\n\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\n\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\n\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\n\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\n\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\n\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\n\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\n\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\n\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\n\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\n\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\n\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\n\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\n\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\n\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\n\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\n\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\n\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\n\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\n\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\n\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\n\"v7a\":{\"x_min\":-1.359375,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 \"},\n\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\n\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\n\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\n\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\n\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\n\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\n\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\n\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\n\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\n\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\n\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\n\"v8d\":{\"x_min\":-1.359375,\"x_max\":255.890625,\"ha\":261,\"o\":\"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 \"},\n\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\n\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\n\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\n\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\n\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\n\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\n\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\n\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\n\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\n\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\n\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\n\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\n\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\n\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\n\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\n\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\n\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\n\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\n\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\n\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\n\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\n\"vb7\":{\"x_min\":-176.9375,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\n\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\n\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\n\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\n\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"},\n\"vd0\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 \"},\n\"vd1\":{\"x_min\":-20,\"x_max\":320,\"ha\":257,\"o\":\"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 \"},\n\"vd2\":{\"x_min\":0,\"x_max\":430.75,\"ha\":386,\"o\":\"m 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 \"},\n\"vd3\":{\"x_min\":0,\"x_max\":430.75,\"ha\":386,\"o\":\"m 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 \"},\n\"vd4\":{\"x_min\":0,\"x_max\":430.75,\"ha\":360,\"o\":\"m 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 \"},\n\"vd5\":{\"x_min\":0,\"x_max\":430.75,\"ha\":360,\"o\":\"m 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100\"},\n\"vd8\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m 20 -357 b 33 -353 29 -357 33 -353 l 84 -300 b 91 -295 86 -297 88 -295 b 98 -300 94 -295 95 -297 l 148 -353 b 161 -357 148 -353 153 -357 b 183 -338 170 -357 183 -351 b 109 -22 183 -323 109 -22 b 91 0 108 -16 105 0 b 72 -22 76 0 73 -16 b 0 -338 72 -22 0 -323 b 20 -357 0 -351 12 -357 z \"},\n\"vd9\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m 163 357 b 150 353 154 357 150 353 l 99 300 b 92 295 96 297 95 295 b 85 300 89 295 88 297 l 35 353 b 22 357 35 353 30 357 b 0 338 13 357 0 351 b 73 22 0 323 73 22 b 92 0 75 16 78 0 b 111 22 107 0 109 16 b 183 338 111 22 183 323 b 163 357 183 351 171 357 z\"},\n\n},\n\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875},\n\"resolution\":1000,\"descender\":-2066,\"familyName\":\"VexFlow-18\",\"lineHeight\":4093,\"underlineThickness\":50\n};\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './fonts/vexflow_font';\n\nfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() { return originX + outline[i++] * scaleX; }\n  function nextY() { return originY + outline[i++] * scaleY; }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        outlineFns[command](nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        outlineFns.q(nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        outlineFns.b(nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  /* Static methods used to implement loading / unloading of glyphs */\n  static loadMetrics(font, code, cache) {\n    const glyph = font.glyphs[code];\n    if (!glyph) {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline;\n\n    if (glyph.o) {\n      if (cache) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        ha,\n        outline,\n      };\n    } else {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in Vex.Flow.Font.\n   * @param {boolean} nocache If set, disables caching of font outline.\n   */\n  static renderGlyph(ctx, x_pos, y_pos, point, val, nocache) {\n    const scale = point * 72.0 / (Font.resolution * 100.0);\n    const metrics = Glyph.loadMetrics(Font, val, !nocache);\n    Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n  }\n\n  static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n    });\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code, point, options) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      cache: true,\n      font: Font,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  setOptions(options) {\n    Vex.Merge(this.options, options);\n    this.reset();\n  }\n\n  setPoint(point) { this.point = point; return this; }\n  setStave(stave) { this.stave = stave; return this; }\n  setXShift(x_shift) { this.x_shift = x_shift; return this; }\n  setYShift(y_shift) { this.y_shift = y_shift; return this; }\n\n  reset() {\n    this.scale = this.point * 72 / (this.options.font.resolution * 100);\n    this.metrics = Glyph.loadMetrics(\n      this.options.font,\n      this.code,\n      this.options.cache\n    );\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale,\n      0,\n      0\n    );\n  }\n\n  getMetrics() {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale,\n      x_max: this.metrics.x_max * this.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    };\n  }\n\n  setOriginX(x) {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y) {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x, y) {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx, x, y) {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    this.applyStyle(ctx);\n    Glyph.renderOutline(ctx, outline, scale, x + this.originShift.x, y + this.originShift.y);\n    this.restoreStyle(ctx);\n  }\n\n  renderToStave(x) {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new Vex.RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale;\n\n    this.setRendered();\n    this.applyStyle();\n    Glyph.renderOutline(this.context, outline, scale,\n      x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/* eslint-disable key-spacing */\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\n\nconst Flow = {\n  STEM_WIDTH: 1.5,\n  STEM_HEIGHT: 35,\n  STAVE_LINE_THICKNESS: 1,\n  RESOLUTION: 16384,\n  DEFAULT_NOTATION_FONT_SCALE: 39,\n  DEFAULT_TABLATURE_FONT_SCALE: 39,\n  SLASH_NOTEHEAD_WIDTH: 15,\n\n  // HACK:\n  // Since text origins are positioned at the baseline, we must\n  // compensate for the ascender of the text. Of course, 1 staff space is\n  // a very poor approximation.\n  //\n  // This will be deprecated in the future. This is a temporary solution until\n  // we have more robust text metrics.\n  TEXT_HEIGHT_OFFSET_HACK: 1,\n\n  /* Kerning (DEPRECATED) */\n  IsKerned: true,\n};\n\n\nFlow.clefProperties = clef => {\n  if (!clef) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  const props = Flow.clefProperties.values[clef];\n  if (!props) throw new Vex.RERR('BadArgument', 'Invalid clef: ' + clef);\n\n  return props;\n};\n\nFlow.clefProperties.values = {\n  'treble': { line_shift: 0 },\n  'bass': { line_shift: 6 },\n  'tenor': { line_shift: 4 },\n  'alto': { line_shift: 3 },\n  'soprano': { line_shift: 1 },\n  'percussion': { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  'subbass': { line_shift: 7 },\n  'french': { line_shift: -1 },\n};\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option,\n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nFlow.keyProperties = (key, clef, params) => {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n\n  const options = { octave_shift: 0 };\n\n  if (typeof params === 'object') {\n    Vex.Merge(options, params);\n  }\n\n  const pieces = key.split('/');\n\n  if (pieces.length < 2) {\n    throw new Vex.RERR('BadArguments', `Key must have note + octave and an optional glyph: ${key}`);\n  }\n\n  const k = pieces[0].toUpperCase();\n  const value = Flow.keyProperties.note_values[k];\n  if (!value) throw new Vex.RERR('BadArguments', 'Invalid key name: ' + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  let octave = parseInt(pieces[1], 10);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  octave += -1 * options.octave_shift;\n\n  const base_index = (octave * 7) - (4 * 7);\n  let line = (base_index + value.index) / 2;\n  line += Flow.clefProperties(clef).line_shift;\n\n  let stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  const int_value = typeof (value.int_val) !== 'undefined'\n    ? (octave * 12) + value.int_val\n    : null;\n\n  /* Check if the user specified a glyph. */\n  let code = value.code;\n  let shift_right = value.shift_right;\n  if (pieces.length > 2 && pieces[2]) {\n    const glyph_name = pieces[2].toUpperCase();\n    const note_glyph = Flow.keyProperties.note_glyph[glyph_name];\n    if (note_glyph) {\n      code = note_glyph.code;\n      shift_right = note_glyph.shift_right;\n    }\n  }\n\n  return {\n    key: k,\n    octave,\n    line,\n    int_value,\n    accidental: value.accidental,\n    code,\n    stroke,\n    shift_right,\n    displaced: false,\n  };\n};\n\nFlow.keyProperties.note_values = {\n  'C': { index: 0, int_val: 0, accidental: null },\n  'CN': { index: 0, int_val: 0, accidental: 'n' },\n  'C#': { index: 0, int_val: 1, accidental: '#' },\n  'C##': { index: 0, int_val: 2, accidental: '##' },\n  'CB': { index: 0, int_val: -1, accidental: 'b' },\n  'CBB': { index: 0, int_val: -2, accidental: 'bb' },\n  'D': { index: 1, int_val: 2, accidental: null },\n  'DN': { index: 1, int_val: 2, accidental: 'n' },\n  'D#': { index: 1, int_val: 3, accidental: '#' },\n  'D##': { index: 1, int_val: 4, accidental: '##' },\n  'DB': { index: 1, int_val: 1, accidental: 'b' },\n  'DBB': { index: 1, int_val: 0, accidental: 'bb' },\n  'E': { index: 2, int_val: 4, accidental: null },\n  'EN': { index: 2, int_val: 4, accidental: 'n' },\n  'E#': { index: 2, int_val: 5, accidental: '#' },\n  'E##': { index: 2, int_val: 6, accidental: '##' },\n  'EB': { index: 2, int_val: 3, accidental: 'b' },\n  'EBB': { index: 2, int_val: 2, accidental: 'bb' },\n  'F': { index: 3, int_val: 5, accidental: null },\n  'FN': { index: 3, int_val: 5, accidental: 'n' },\n  'F#': { index: 3, int_val: 6, accidental: '#' },\n  'F##': { index: 3, int_val: 7, accidental: '##' },\n  'FB': { index: 3, int_val: 4, accidental: 'b' },\n  'FBB': { index: 3, int_val: 3, accidental: 'bb' },\n  'G': { index: 4, int_val: 7, accidental: null },\n  'GN': { index: 4, int_val: 7, accidental: 'n' },\n  'G#': { index: 4, int_val: 8, accidental: '#' },\n  'G##': { index: 4, int_val: 9, accidental: '##' },\n  'GB': { index: 4, int_val: 6, accidental: 'b' },\n  'GBB': { index: 4, int_val: 5, accidental: 'bb' },\n  'A': { index: 5, int_val: 9, accidental: null },\n  'AN': { index: 5, int_val: 9, accidental: 'n' },\n  'A#': { index: 5, int_val: 10, accidental: '#' },\n  'A##': { index: 5, int_val: 11, accidental: '##' },\n  'AB': { index: 5, int_val: 8, accidental: 'b' },\n  'ABB': { index: 5, int_val: 7, accidental: 'bb' },\n  'B': { index: 6, int_val: 11, accidental: null },\n  'BN': { index: 6, int_val: 11, accidental: 'n' },\n  'B#': { index: 6, int_val: 12, accidental: '#' },\n  'B##': { index: 6, int_val: 13, accidental: '##' },\n  'BB': { index: 6, int_val: 10, accidental: 'b' },\n  'BBB': { index: 6, int_val: 9, accidental: 'bb' },\n  'R': { index: 6, int_val: 9, rest: true }, // Rest\n  'X': {\n    index: 6,\n    accidental: '',\n    octave: 4,\n    code: 'v3e',\n    shift_right: 5.5,\n  },\n};\n\nFlow.keyProperties.note_glyph = {\n  /* Diamond */\n  'D0': { code: 'v27', shift_right: -0.5 },\n  'D1': { code: 'v2d', shift_right: -0.5 },\n  'D2': { code: 'v22', shift_right: -0.5 },\n  'D3': { code: 'v70', shift_right: -0.5 },\n\n  /* Triangle */\n  'T0': { code: 'v49', shift_right: -2, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T1': { code: 'v93', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T2': { code: 'v40', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n  'T3': { code: 'v7d', shift_right: 0.5, stem_up_y_offset: -4, stem_down_y_offset: 4 },\n\n  /* Cross */\n  'X0': { code: 'v92', shift_right: -2, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X1': { code: 'v95', shift_right: -0.5, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X2': { code: 'v3e', shift_right: 0.5, stem_up_y_offset: 4, stem_down_y_offset: 4 },\n  'X3': { code: 'v3b', shift_right: -2, stem_up_y_offset: 2, stem_down_y_offset: 2 },\n\n  /* Square */\n  'S1': { code: 'vd3', shift_right: 0 },\n  'S2': { code: 'vd2', shift_right: 0 },\n  /* Rectangle */\n  'R1': { code: 'vd5', shift_right: 0 },\n  'R2': { code: 'vd4', shift_right: 0 },\n};\n\nFlow.integerToNote = integer => {\n  if (typeof (integer) === 'undefined') {\n    throw new Vex.RERR('BadArguments', 'Undefined integer for integerToNote');\n  }\n\n  if (integer < -2) {\n    throw new Vex.RERR('BadArguments', `integerToNote requires integer > -2: ${integer}`);\n  }\n\n  const noteValue = Flow.integerToNote.table[integer];\n  if (!noteValue) {\n    throw new Vex.RERR('BadArguments', `Unknown note value for integer: ${integer}`);\n  }\n\n  return noteValue;\n};\n\nFlow.integerToNote.table = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B',\n};\n\n\nFlow.tabToGlyph = (fret, scale = 1.0) => {\n  let glyph = null;\n  let width = 0;\n  let shift_y = 0;\n\n  if (fret.toString().toUpperCase() === 'X') {\n    const glyphMetrics = new Glyph('v7f', Flow.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();\n    glyph = 'v7f';\n    width = glyphMetrics.width;\n    shift_y = -glyphMetrics.height / 2;\n  } else {\n    width = Flow.textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    getWidth: () => width * scale,\n    shift_y,\n  };\n};\n\nFlow.textWidth = text => 7 * text.toString().length;\n\nFlow.articulationCodes = artic => Flow.articulationCodes.articulations[artic];\n\nFlow.articulationCodes.articulations = {\n  'a.': { code: 'v23', between_lines: true }, // Staccato\n  'av': { code: 'v28', between_lines: true }, // Staccatissimo\n  'a>': { code: 'v42', between_lines: true }, // Accent\n  'a-': { code: 'v25', between_lines: true }, // Tenuto\n  'a^': { code: 'va', between_lines: false }, // Marcato\n  'a+': { code: 'v8b', between_lines: false }, // Left hand pizzicato\n  'ao': { code: 'v94', between_lines: false }, // Snap pizzicato\n  'ah': { code: 'vb9', between_lines: false }, // Natural harmonic or open note\n  'a@a': { code: 'v43', between_lines: false }, // Fermata above staff\n  'a@u': { code: 'v5b', between_lines: false }, // Fermata below staff\n  'a|': { code: 'v75', between_lines: false }, // Bow up - up stroke\n  'am': { code: 'v97', between_lines: false }, // Bow down - down stroke\n  'a,': { code: 'vb3', between_lines: false }, // Choked\n};\n\nFlow.accidentalCodes = acc => Flow.accidentalCodes.accidentals[acc];\n\nFlow.accidentalCodes.accidentals = {\n  '#': { code: 'v18', parenRightPaddingAdjustment: -1 },\n  '##': { code: 'v7f', parenRightPaddingAdjustment: -1 },\n  'b': { code: 'v44', parenRightPaddingAdjustment: -2 },\n  'bb': { code: 'v26', parenRightPaddingAdjustment: -2 },\n  'n': { code: 'v4e', parenRightPaddingAdjustment: -1 },\n  '{': { code: 'v9c', parenRightPaddingAdjustment: -1 },\n  '}': { code: 'v84', parenRightPaddingAdjustment: -1 },\n  'db': { code: 'v9e', parenRightPaddingAdjustment: -1 },\n  'd': { code: 'vab', parenRightPaddingAdjustment: 0 },\n  'bbs': { code: 'v90', parenRightPaddingAdjustment: -1 },\n  '++': { code: 'v51', parenRightPaddingAdjustment: -1 },\n  '+': { code: 'v78', parenRightPaddingAdjustment: -1 },\n  '+-': { code: 'v8d', parenRightPaddingAdjustment: -1 },\n  '++-': { code: 'v7a', parenRightPaddingAdjustment: -1 },\n  'bs': { code: 'vb7', parenRightPaddingAdjustment: -1 },\n  'bss': { code: 'v39', parenRightPaddingAdjustment: -1 },\n  'o': { code: 'vd0', parenRightPaddingAdjustment: -1 },\n  'k': { code: 'vd1', parenRightPaddingAdjustment: -1 },\n};\n\nFlow.accidentalColumnsTable = {\n  1: {\n    a: [1],\n    b: [1],\n  },\n  2: {\n    a: [1, 2],\n  },\n  3: {\n    a: [1, 3, 2],\n    b: [1, 2, 1],\n    second_on_bottom: [1, 2, 3],\n  },\n  4: {\n    a: [1, 3, 4, 2],\n    b: [1, 2, 3, 1],\n    spaced_out_tetrachord: [1, 2, 1, 2],\n  },\n  5: {\n    a: [1, 3, 5, 4, 2],\n    b: [1, 2, 4, 3, 1],\n    spaced_out_pentachord: [1, 2, 3, 2, 1],\n    very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n  },\n  6: {\n    a: [1, 3, 5, 6, 4, 2],\n    b: [1, 2, 4, 5, 3, 1],\n    spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n    very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n  },\n};\n\nFlow.ornamentCodes = acc => Flow.ornamentCodes.ornaments[acc];\n\nFlow.ornamentCodes.ornaments = {\n  'mordent': { code: 'v1e' },\n  'mordent_inverted': { code: 'v45' },\n  'turn': { code: 'v72' },\n  'turn_inverted': { code: 'v33' },\n  'tr': { code: 'v1f' },\n  'upprall': { code: 'v60' },\n  'downprall': { code: 'vb4' },\n  'prallup': { code: 'v6d' },\n  'pralldown': { code: 'v2c' },\n  'upmordent': { code: 'v29' },\n  'downmordent': { code: 'v68' },\n  'lineprall': { code: 'v20' },\n  'prallprall': { code: 'v86' },\n};\n\nFlow.keySignature = spec => {\n  const keySpec = Flow.keySignature.keySpecs[spec];\n\n  if (!keySpec) {\n    throw new Vex.RERR('BadKeySignature', `Bad key signature spec: '${spec}'`);\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  const notes = Flow.keySignature.accidentalList(keySpec.acc);\n\n  const acc_list = [];\n  for (let i = 0; i < keySpec.num; ++i) {\n    const line = notes[i];\n    acc_list.push({ type: keySpec.acc, line });\n  }\n\n  return acc_list;\n};\n\nFlow.keySignature.keySpecs = {\n  'C': { acc: null, num: 0 },\n  'Am': { acc: null, num: 0 },\n  'F': { acc: 'b', num: 1 },\n  'Dm': { acc: 'b', num: 1 },\n  'Bb': { acc: 'b', num: 2 },\n  'Gm': { acc: 'b', num: 2 },\n  'Eb': { acc: 'b', num: 3 },\n  'Cm': { acc: 'b', num: 3 },\n  'Ab': { acc: 'b', num: 4 },\n  'Fm': { acc: 'b', num: 4 },\n  'Db': { acc: 'b', num: 5 },\n  'Bbm': { acc: 'b', num: 5 },\n  'Gb': { acc: 'b', num: 6 },\n  'Ebm': { acc: 'b', num: 6 },\n  'Cb': { acc: 'b', num: 7 },\n  'Abm': { acc: 'b', num: 7 },\n  'G': { acc: '#', num: 1 },\n  'Em': { acc: '#', num: 1 },\n  'D': { acc: '#', num: 2 },\n  'Bm': { acc: '#', num: 2 },\n  'A': { acc: '#', num: 3 },\n  'F#m': { acc: '#', num: 3 },\n  'E': { acc: '#', num: 4 },\n  'C#m': { acc: '#', num: 4 },\n  'B': { acc: '#', num: 5 },\n  'G#m': { acc: '#', num: 5 },\n  'F#': { acc: '#', num: 6 },\n  'D#m': { acc: '#', num: 6 },\n  'C#': { acc: '#', num: 7 },\n  'A#m': { acc: '#', num: 7 },\n};\n\nFlow.unicode = {\n  // Unicode accidentals\n  'sharp': String.fromCharCode(parseInt('266F', 16)),\n  'flat': String.fromCharCode(parseInt('266D', 16)),\n  'natural': String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  'triangle': String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  'o-with-slash': String.fromCharCode(parseInt('00F8', 16)),\n  // Diminished\n  'degrees': String.fromCharCode(parseInt('00B0', 16)),\n  'circle': String.fromCharCode(parseInt('25CB', 16)),\n};\n\nFlow.keySignature.accidentalList = (acc) => {\n  const patterns = {\n    'b': [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n    '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n  };\n\n  return patterns[acc];\n};\n\nFlow.parseNoteDurationString = durationString => {\n  if (typeof (durationString) !== 'string') {\n    return null;\n  }\n\n  const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\n  const result = regexp.exec(durationString);\n  if (!result) {\n    return null;\n  }\n\n  const duration = result[1];\n  const dots = result[2].length;\n  let type = result[3];\n\n  if (type.length === 0) {\n    type = 'n';\n  }\n\n  return {\n    duration,\n    dots,\n    type,\n  };\n};\n\nFlow.parseNoteData = noteData => {\n  const duration = noteData.duration;\n\n  // Preserve backwards-compatibility\n  const durationStringData = Flow.parseNoteDurationString(duration);\n  if (!durationStringData) {\n    return null;\n  }\n\n  let ticks = Flow.durationToTicks(durationStringData.duration);\n  if (ticks == null) {\n    return null;\n  }\n\n  let type = noteData.type;\n  if (!type) type = noteData.note_type\n  if (type) {\n    if (!(type === 'n' || type === 'r' || type === 'h' || type === 'm' || type === 's')) {\n      return null;\n    }\n  } else {\n    type = durationStringData.type;\n\n    // If we have keys, try and check if we've got a custom glyph\n    if (noteData.keys !== undefined) {\n      const result = noteData.keys[0].split('/');\n\n      // We have a custom glyph specified after the note eg. /X2\n      if (result && result.length === 3) {\n        type = result[2]; // Set the type to the custom note head\n      }\n    }\n    if (!type) {\n      type = 'n';\n    }\n  }\n\n  const dots = noteData.dots ? noteData.dots : durationStringData.dots;\n\n  if (typeof (dots) !== 'number') {\n    return null;\n  }\n\n  let currentTicks = ticks;\n\n  for (let i = 0; i < dots; i++) {\n    if (currentTicks <= 1) return null;\n\n    currentTicks = currentTicks / 2;\n    ticks += currentTicks;\n  }\n\n  return {\n    duration: durationStringData.duration,\n    type,\n    dots,\n    ticks,\n  };\n};\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nFlow.sanitizeDuration = duration => {\n  const alias = Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (Flow.durationToTicks.durations[duration] === undefined) {\n    throw new Vex.RERR('BadArguments', `The provided duration is not valid: ${duration}`);\n  }\n\n  return duration;\n};\n\n// Convert the `duration` to an fraction\nFlow.durationToFraction = duration => new Fraction().parse(Flow.sanitizeDuration(duration));\n\n// Convert the `duration` to an number\nFlow.durationToNumber = duration => Flow.durationToFraction(duration).value();\n\n// Convert the `duration` to total ticks\nFlow.durationToTicks = duration => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const ticks = Flow.durationToTicks.durations[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\nFlow.durationToTicks.durations = {\n  '1/2': Flow.RESOLUTION * 2,\n  '1': Flow.RESOLUTION / 1,\n  '2': Flow.RESOLUTION / 2,\n  '4': Flow.RESOLUTION / 4,\n  '8': Flow.RESOLUTION / 8,\n  '16': Flow.RESOLUTION / 16,\n  '32': Flow.RESOLUTION / 32,\n  '64': Flow.RESOLUTION / 64,\n  '128': Flow.RESOLUTION / 128,\n  '256': Flow.RESOLUTION / 256,\n  '512': Flow.RESOLUTION / 512,\n  '1024': Flow.RESOLUTION / 1024,\n};\n\nFlow.durationAliases = {\n  'w': '1',\n  'h': '2',\n  'q': '4',\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  'b': '256',\n};\n\nFlow.durationToGlyph = (duration, type) => {\n  duration = Flow.sanitizeDuration(duration);\n\n  const code = Flow.durationToGlyph.duration_codes[duration];\n  if (code === undefined) {\n    return null;\n  }\n\n  if (!type) {\n    type = 'n';\n  }\n\n  let glyphTypeProperties = code.type[type];\n  if (glyphTypeProperties === undefined) {\n    // Try and get it from the custom list of note heads\n    const customGlyphTypeProperties = Flow.keyProperties.note_glyph[type.toUpperCase()];\n\n    // If not, then return with nothing\n    if (customGlyphTypeProperties === undefined) {\n      return null;\n    }\n\n    // Otherwise set it as the code_head value\n    glyphTypeProperties = {\n      code_head: customGlyphTypeProperties.code,\n      stem_up_y_offset: customGlyphTypeProperties.stem_up_y_offset,\n      stem_down_y_offset: customGlyphTypeProperties.stem_down_y_offset,\n    };\n  }\n\n  return Vex.Merge(Vex.Merge({}, code.common), glyphTypeProperties);\n};\n\nFlow.durationToGlyph.duration_codes = {\n  '1/2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v53', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Breve note\n        code_head: 'v53',\n      },\n      'h': { // Breve note harmonic\n        code_head: 'v59',\n      },\n      'm': { // Breve note muted -\n        code_head: 'vf',\n        stem_offset: 0,\n      },\n      'r': { // Breve rest\n        code_head: 'v31',\n        rest: true,\n        position: 'B/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Breve note slash -\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '1': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v1d', scale).getMetrics().width;\n      },\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Flow.STEM_HEIGHT,\n      stem_down_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Whole note\n        code_head: 'v1d',\n      },\n      'h': { // Whole note harmonic\n        code_head: 'v46',\n      },\n      'm': { // Whole note muted\n        code_head: 'v92',\n        stem_offset: -3,\n      },\n      'r': { // Whole rest\n        code_head: 'v5c',\n        rest: true,\n        position: 'D/5',\n        dot_shiftY: 0.5,\n      },\n      's': { // Whole note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '2': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'v81', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Half note\n        code_head: 'v81',\n      },\n      'h': { // Half note harmonic\n        code_head: 'v2d',\n      },\n      'm': { // Half note muted\n        code_head: 'v95',\n        stem_offset: -3,\n      },\n      'r': { // Half rest\n        code_head: 'vc',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n      },\n      's': { // Half note slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '4': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Quarter note\n        code_head: 'vb',\n      },\n      'h': { // Quarter harmonic\n        code_head: 'v22',\n      },\n      'm': { // Quarter muted\n        code_head: 'v3e',\n        stem_offset: -3,\n      },\n      'r': { // Quarter rest\n        code_head: 'v7c',\n        stem: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5,\n      },\n      's': { // Quarter slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '8': {\n    common: {\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: 'v54',\n      code_flag_downstem: 'v9a',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Eighth note\n        code_head: 'vb',\n      },\n      'h': { // Eighth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Eighth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Eighth rest\n        code_head: 'va5',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0,\n      },\n      's': { // Eight slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '16': {\n    common: {\n      beam_count: 2,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v3f',\n      code_flag_downstem: 'v8f',\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixteenth note\n        code_head: 'vb',\n      },\n      'h': { // Sixteenth note harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixteenth note muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixteenth rest\n        code_head: 'v3c',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0,\n      },\n      's': { // Sixteenth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '32': {\n    common: {\n      beam_count: 3,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v47',\n      code_flag_downstem: 'v2a',\n      stem_up_extension: 9,\n      stem_down_extension: 9,\n      tabnote_stem_up_extension: 8,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Thirty-second note\n        code_head: 'vb',\n      },\n      'h': { // Thirty-second harmonic\n        code_head: 'v22',\n      },\n      'm': { // Thirty-second muted\n        code_head: 'v3e',\n      },\n      'r': { // Thirty-second rest\n        code_head: 'v55',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0,\n      },\n      's': { // Thirty-second slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '64': {\n    common: {\n      beam_count: 4,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'va9',\n      code_flag_downstem: 'v58',\n      stem_up_extension: 13,\n      stem_down_extension: 13,\n      tabnote_stem_up_extension: 12,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': { // Sixty-fourth note\n        code_head: 'vb',\n      },\n      'h': { // Sixty-fourth harmonic\n        code_head: 'v22',\n      },\n      'm': { // Sixty-fourth muted\n        code_head: 'v3e',\n      },\n      'r': { // Sixty-fourth rest\n        code_head: 'v38',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0,\n      },\n      's': { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n  '128': {\n    common: {\n      beam_count: 5,\n      getWidth(scale = Flow.DEFAULT_NOTATION_FONT_SCALE) {\n        return new Glyph(this.code_head || 'vb', scale).getMetrics().width;\n      },\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: 'v9b',\n      code_flag_downstem: 'v30',\n      stem_up_extension: 22,\n      stem_down_extension: 22,\n      tabnote_stem_up_extension: 21,\n      tabnote_stem_down_extension: 18,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0,\n    },\n    type: {\n      'n': {  // Hundred-twenty-eight note\n        code_head: 'vb',\n      },\n      'h': { // Hundred-twenty-eight harmonic\n        code_head: 'v22',\n      },\n      'm': { // Hundred-twenty-eight muted\n        code_head: 'v3e',\n      },\n      'r': {  // Hundred-twenty-eight rest\n        code_head: 'vaa',\n        stem: false,\n        flag: false,\n        rest: true,\n        position: 'B/4',\n        dot_shiftY: 1.5,\n        line_above: 3.0,\n        line_below: 3.0,\n      },\n      's': { // Hundred-twenty-eight rest\n        // Drawn with canvas primitives\n        getWidth: () => Flow.SLASH_NOTEHEAD_WIDTH,\n        position: 'B/4',\n      },\n    },\n  },\n};\n\n// For future collaboration with the SMuFL Standard Music Font Layout\n\nFlow.smufl = {};\n\n// add references between smufl glyph names and code points.\nFlow.smufl.to_code_points = {\n  // staff brackets and dividers (e000-e00f)\n  bracketTop: 'v1b',\n  bracketBottom: 'v10',\n\n  // barlines (e030-e03f)\n  barlineTick: 'v6f',\n\n  // repeats (e040-e04f)\n  segno: 'v8c',\n  coda: 'v4d',\n\n  // clefs (e050-e07f)\n  gClef: 'v83',\n  cClef: 'vad',\n  fClef: 'v79',\n  unpitchedPercussionClef1: 'v59', // same as breveNoteheadHarmonic\n  '6stringTabClef': 'v2f',\n\n  // time signatures (e080-e09f)\n  timeSig0: 'v0',\n  timeSig1: 'v1',\n  timeSig2: 'v2',\n  timeSig3: 'v3',\n  timeSig4: 'v4',\n  timeSig5: 'v5',\n  timeSig6: 'v6',\n  timeSig7: 'v7',\n  timeSig8: 'v8',\n  timeSig9: 'v9',\n  timeSigCommon: 'v41',\n  timeSigCutCommon: 'vb6',\n\n  // notehead (e0a0-e0ff)\n  noteheadDoubleWhole: 'v53',\n  noteheadWhole: 'v1d',\n  noteheadHalf: 'v81',\n  noteheadBlack: 'vb',\n  noteheadXWhole: 'v92',\n  noteheadXHalf: 'v95',\n  noteheadXBlack: 'v3e',\n  noteheadCircleX: 'v3b',\n  noteheadTriangleUpWhole: 'v49',\n  noteheadTriangleUpHalf: 'v93',\n  noteheadTriangleUpBlack: 'v40',\n  noteheadDiamondWhole: 'v46',\n  noteheadDiamondHalf: 'v2d',\n  noteheadDiamondBlack: 'v22',\n\n  // individual notes (e1d0-e1ef)\n  augmentationDot: 'v23',\n\n  // temolos (e220-e23f)\n  tremolo1: 'v74',\n\n  // flags (e240-e25f)\n  flag8thUp: 'v54',\n  flag8thDown: 'v9a',\n  flag16thUp: 'v3f',\n  flag16thDown: 'v8f',\n  flag32ndUp: 'v47',\n  flag32ndDown: 'v2a',\n  flag64thUp: 'va9',\n  flag64thDown: 'v58',\n  flag128thUp: 'v9b',\n  flag128thDown: 'v30',\n\n  // standard accidentals (e260-e26f)\n  accidentalFlat: 'v44',\n  accidentalNatural: 'v4e',\n  accidentalSharp: 'v18',\n  accidentalDoubleSharp: 'v7f',\n  accidentalDoubleFlat: 'v26',\n  accidentalParensLeft: 'v9c',\n  accidentalParensRight: 'v84',\n\n  // stein-zimmermann accidentals (24-edo) (e280-e28f)\n  accidentalQuarterToneFlatStein: 'vab',\n  accidentalThreeQuarterTonesFlatZimmermann: 'v9e',\n  accidentalQuarterToneSharpStein: 'v78',\n  accidentalThreeQuarterTonesSharpStein: 'v51',\n\n  // arel-ezgi-uzdilek accidentals (e440-e44f)\n  accidentalBuyukMucennebFlat: 'v39',\n  accidentalBakiyeFlat: 'vb7',\n  accidentalKomaSharp: 'v51', // same as accidentalQuarterToneSharpStein\n  accidentalKucukMucennebSharp: 'v8d',\n\n  // persian accidentals (e460-e46f)\n  accidentalKoron: 'vd1',\n  accidentalSori: 'vd0',\n\n  // articulation (e4a0-e4bf)\n  articAccentAbove: 'v42',\n  articAccentBelow: 'v42', // same as above\n  articTenutoAbove: 'v25',\n  articTenutoBelow: 'v25', // same as above\n  articStaccatoAbove: 'v23', // = dot\n  articStaccatoBelow: 'v23', // = dot\n  articStaccatissimoAbove: 'v28',\n  articStaccatissimoBelow: 'v28',\n  articMarcatoAbove: 'v5a',\n  articMarcatoBelow: 'v8a',\n  // holds and pauses (e4c0-e4df)\n  fermataAbove: 'v43',\n  fermataBelow: 'v5b',\n  breathMarkComma: 'v6c',\n  breathMarkUpbow: 'v8a', // looks better than current upbow\n  caesura: 'v34',\n  caesuraCurved: 'v4b',\n\n  // rests (e4e0-e4ff)\n  restMaxima: 'v59', // not designed for this, but should do the trick\n  // need restLonga -- used in multimeasure rests, like above\n  restDoubleWhole: 'v31',\n  restWhole: 'v5c',\n  restHalf: 'vc',\n  restQuarter: 'v7c',\n  rest8th: 'va5',\n  rest16th: 'v3c',\n  rest32nd: 'v55',\n  rest64th: 'v38',\n  rest128th: 'vaa',\n\n  // dynamics (e520-e54f)\n  dynamicPiano: 'vbf',\n  dynamicMezzo: 'v62',\n  dynamicForte: 'vba',\n  dynamicRinforzando: 'vba',\n  dynamicSforzando: 'v4a',\n  dynamicZ: 'v80',\n\n  // common ornaments (e560-e56f)\n  ornamentTrill: 'v1f',\n  ornamentTurn: 'v72',\n  ornamentTurnSlash: 'v33',\n  ornamentMordent: 'v45',\n  ornamentMordentInverted: 'v1e',\n  ornamentTremblement: 'v86',\n\n  // precomposed trills and mordents (e5b0-e5cf)\n  ornamentPrecompAppoggTrill: 'v20',\n  ornamentPrecompSlideTrillDAnglebert: 'v60',\n  ornamentPrecompSlideTrillBach: 'v29',\n  ornamentPrecompTrillSuffixDandrieu: 'v6d',\n  ornamentPrecompDoubleCadenceUpperPrefix: 'vb4',\n  ornamentPrecompDoubleCadenceUpperPrefixTurn: 'v68',\n  ornamentPrecompTrillLowerSuffix: 'v2c',\n\n  // string techniques (e610-e62f)\n  stringsDownBow: 'v94',\n  stringsUpBow: 'v75',\n  stringsHarmonic: 'vb9',\n\n  // plucked techniques (e630-e63f)\n  pluckedSnapPizzicatoAbove: 'v94',\n  pluckedLeftHandPizzicato: 'v8b', // plus sign\n\n  // keyboard techniques (e650-e67f)\n  keyboardPedalPed: 'v36',\n  keyboardPedalUp: 'v5d',\n\n  // percussion playing technique pictograms (e7f0-e80f)\n  pictChokeCymbal: 'vb3',\n\n  // multi-segment lines (eaa0-eb0f)\n  wiggleArpeggiatoUp: 'va3', // rotated 90deg from reference implementation\n\n  // arrows and arrowheads (eb60-eb8f)\n  arrowheadBlackUp: 'vc3',\n  arrowheadBlackDown: 'v52',\n\n  // not found:\n  // noteheadDiamondWhole: 'v27', stylistic alternate to v46?\n  // noteheadDiamondBlack: 'v70', stylistic alternate to v22?\n  // noteheadTriangleUpBlack: 'v7d', stylistic alternate to v40?\n  // accidentalSlashedDoubleFlat: 'v90',\n  // accidentalOneAndAHalfSharpTurned: 'v7a',\n  // unused marcato alternative?  'v5a',\n  // arpeggioBrushDown: 'v11',\n};\n\n// Some defaults\nFlow.TIME4_4 = {\n  num_beats: 4,\n  beat_value: 4,\n  resolution: Flow.RESOLUTION,\n};\nexport { Flow };\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nexport class CanvasContext {\n  static get WIDTH() {\n    return 600;\n  }\n  static get HEIGHT() {\n    return 400;\n  }\n\n  constructor(context) {\n    // Use a name that is unlikely to clash with a canvas context\n    // property\n    this.vexFlowCanvasContext = context;\n    if (!context.canvas) {\n      this.canvas = {\n        width: CanvasContext.WIDTH,\n        height: CanvasContext.HEIGHT,\n      };\n    } else {\n      this.canvas = context.canvas;\n    }\n  }\n\n  clear() {\n    this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.vexFlowCanvasContext.font = (weight || '') + ' ' + size + 'pt ' + family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.vexFlowCanvasContext.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.vexFlowCanvasContext.fillStyle = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_fillStyle = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.vexFlowCanvasContext.strokeStyle = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.vexFlowCanvasContext.shadowColor = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.vexFlowCanvasContext.shadowBlur = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.vexFlowCanvasContext.lineWidth = width;\n    return this;\n  }\n\n  setLineCap(cap_type) {\n    this.vexFlowCanvasContext.lineCap = cap_type;\n    return this;\n  }\n\n  // setLineDash: is the one native method in a canvas context\n  // that begins with set, therefore we don't bolster the method\n  // if it already exists (see renderer.bolsterCanvasContext).\n  // If it doesn't exist, we bolster it and assume it's looking for\n  // a ctx.lineDash method, as previous versions of VexFlow\n  // expected.\n  setLineDash(dash) {\n    this.vexFlowCanvasContext.lineDash = dash;\n    return this;\n  }\n\n  scale(x, y) {\n    return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n  }\n\n  resize(width, height) {\n    return this.vexFlowCanvasContext.resize(parseInt(width, 10), parseInt(height, 10));\n  }\n\n  rect(x, y, width, height) {\n    return this.vexFlowCanvasContext.rect(x, y, width, height);\n  }\n\n  fillRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n  }\n\n  clearRect(x, y, width, height) {\n    return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n  }\n\n  beginPath() {\n    return this.vexFlowCanvasContext.beginPath();\n  }\n\n  moveTo(x, y) {\n    return this.vexFlowCanvasContext.moveTo(x, y);\n  }\n\n  lineTo(x, y) {\n    return this.vexFlowCanvasContext.lineTo(x, y);\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    return this.vexFlowCanvasContext.glow();\n  }\n\n  fill() {\n    return this.vexFlowCanvasContext.fill();\n  }\n\n  stroke() {\n    return this.vexFlowCanvasContext.stroke();\n  }\n\n  closePath() {\n    return this.vexFlowCanvasContext.closePath();\n  }\n\n  measureText(text) {\n    return this.vexFlowCanvasContext.measureText(text);\n  }\n\n  fillText(text, x, y) {\n    return this.vexFlowCanvasContext.fillText(text, x, y);\n  }\n\n  save() {\n    return this.vexFlowCanvasContext.save();\n  }\n\n  restore() {\n    return this.vexFlowCanvasContext.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A rendering context for the Raphael backend.\n//\n// ## Warning: Deprecated for SVGContext\n// Except in instances where SVG support for IE < 9.0 is\n// needed, SVGContext is recommended.\n\nexport class RaphaelContext {\n  constructor(element) {\n    this.element = element;\n    this.paper = Raphael(element); // eslint-disable-line\n    this.path = '';\n    this.pen = { x: 0, y: 0 };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      font_family: 'Arial',\n      font_size: 8,\n      font_weight: 800,\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'font': '10pt Arial',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'font': '10pt Arial',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n  }\n\n  // Containers not implemented\n  openGroup() {}\n  closeGroup() {}\n  add() {}\n\n  setFont(family, size, weight) {\n    this.state.font_family = family;\n    this.state.font_size = size;\n    this.state.font_weight = weight;\n    this.attributes.font = (this.state.font_weight || '') + ' ' +\n      (this.state.font_size * this.state.scale.x) + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  setRawFont(font) {\n    this.attributes.font = font;\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // Empty because there is no equivalent in SVG\n  setLineDash() { return this; }\n  setLineCap() { return this; }\n\n  scale(x, y) {\n    this.state.scale = { x, y };\n    // The scale() method is deprecated as of Raphael.JS 2.0, and\n    // can no longer be used as an option in an Element.attr() call.\n    // It is preserved here for users running earlier versions of\n    // Raphael.JS, though it has no effect on the SVG output in\n    // Raphael 2 and higher.\n    this.attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.attributes.scale = x + ',' + y + ',0,0';\n    this.attributes.font = this.state.font_size * this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    this.background_attributes.transform = 'S' + x + ',' + y + ',0,0';\n    this.background_attributes.font = this.state.font_size *\n      this.state.scale.x + 'pt ' +\n      this.state.font_family;\n    return this;\n  }\n\n  clear() { this.paper.clear(); }\n\n  resize(width, height) {\n    this.element.style.width = width;\n    this.paper.setSize(width, height);\n    return this;\n  }\n\n  // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n  // is resized.\n  //\n  // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n  setViewBox(viewBox) {\n    this.paper.canvas.setAttribute('viewBox', viewBox);\n  }\n\n  rect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', this.lineWidth);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5).attr(this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height = -height;\n    }\n\n    this.paper.rect(x, y, width - 0.5, height - 0.5)\n      .attr(this.background_attributes);\n    return this;\n  }\n\n  beginPath() {\n    this.path = '';\n    this.pen.x = 0;\n    this.pen.y = 0;\n    return this;\n  }\n\n  moveTo(x, y) {\n    this.path += 'M' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    this.path += 'L' + x + ',' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this.path += 'C' +\n      x1 + ',' +\n      y1 + ',' +\n      x2 + ',' +\n      y2 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this.path += 'Q' +\n      x1 + ',' +\n      y1 + ',' +\n      x + ',' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ',' + y1 + ',A' +\n      radius + ',' + radius + ',0,' + largeArcFlag + ',' + sweepFlag + ',' +\n      x2 + ',' + y2 + 'M' + this.pen.x + ',' + this.pen.y;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    const out = this.paper.set();\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      for (let i = 1; i <= num_paths; i++) {\n        out.push(this.paper.path(this.path).attr({\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +(sa.width / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n          // See note in this.scale(): In Raphael the scale() method\n          // is deprecated and removed as of Raphael 2.0 and replaced\n          // by the transform() method.  It is preserved here for\n          // users with earlier versions of Raphael, but has no effect\n          // on the output SVG in Raphael 2.0+.\n          transform: this.attributes.transform,\n          scale: this.attributes.scale,\n        }));\n      }\n    }\n    return out;\n  }\n\n  fill() {\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('stroke-width', 0);\n    this.glow(elem);\n    return this;\n  }\n\n  stroke() {\n    // The first line of code below is, unfortunately, a bit of a hack:\n    // Raphael's transform() scaling does not scale the stroke-width, so\n    // in order to scale a stroke, we have to manually scale the\n    // stroke-width.\n    //\n    // This works well so long as the X & Y states for this.scale() are\n    // relatively similar.  However, if they are very different, we\n    // would expect horizontal and vertical lines to have different\n    // stroke-widths.\n    //\n    // In the future, if we want to support very divergent values for\n    // horizontal and vertical scaling, we may want to consider\n    // implementing SVG scaling with properties of the SVG viewBox &\n    // viewPort and removing it entirely from the Element.attr() calls.\n    // This would more closely parallel the approach taken in\n    // canvascontext.js as well.\n\n    const strokeWidth = this.lineWidth * (this.state.scale.x + this.state.scale.y) / 2;\n    const elem = this.paper.path(this.path)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke-width', strokeWidth);\n    this.glow(elem);\n    return this;\n  }\n\n  closePath() {\n    this.path += 'Z';\n    return this;\n  }\n\n  measureText(text) {\n    const txt = this.paper.text(0, 0, text)\n      .attr(this.attributes)\n      .attr('fill', 'none')\n      .attr('stroke', 'none');\n    const bounds = txt.getBBox();\n    txt.remove();\n\n    return {\n      width: bounds.width,\n      height: bounds.height,\n    };\n  }\n\n  fillText(text, x, y) {\n    this.paper\n      .text(\n        x + (this.measureText(text).width / 2),\n        y - (this.state.font_size / (2.25 * this.state.scale.y)),\n        text\n      )\n      .attr(this.attributes);\n\n    return this;\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        font_family: this.state.font_family,\n      },\n      attributes: {\n        font: this.attributes.font,\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state.font_family = state.state.font_family;\n    this.attributes.font = state.attributes.font;\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Gregory Ristow (2015)\n\nimport { Vex } from './vex';\n\nconst attrNamesToIgnoreMap = {\n  path: {\n    x: true,\n    y: true,\n    width: true,\n    height: true,\n  },\n  rect: {\n  },\n  text: {\n    width: true,\n    height: true,\n  },\n};\n\n{\n  const fontAttrNamesToIgnore = {\n    'font-family': true,\n    'font-weight': true,\n    'font-style': true,\n    'font-size': true,\n  };\n\n  Vex.Merge(attrNamesToIgnoreMap.rect, fontAttrNamesToIgnore);\n  Vex.Merge(attrNamesToIgnoreMap.path, fontAttrNamesToIgnore);\n}\n\nexport class SVGContext {\n  constructor(element) {\n    // element is the parent DOM object\n    this.element = element;\n    // Create the SVG in the SVG namespace:\n    this.svgNS = 'http://www.w3.org/2000/svg';\n    const svg = this.create('svg');\n    // Add it to the canvas:\n    this.element.appendChild(svg);\n\n    (new Array(5).fill(0)).forEach((_, i) => {\n      \n        const layerDivider = document.createElementNS(this.svgNS, \"g\"); //to create a circle. for rectangle use 'rectangle'\n        layerDivider.id = `layer-divider-${i}`;\n        svg.appendChild(layerDivider);\n    })\n\n    this.vexflowLayerG = document.getElementById('layer-divider-1');\n\n\n    // Point to it:\n    this.svg = svg;\n    // this.groups = [this.svg]; // Create the group stack\n    this.groups = [this.vexflowLayerG]; // Create the group stack\n    this.parent = this.vexflowLayerG;\n\n    this.path = '';\n    this.pen = { x: NaN, y: NaN };\n    this.lineWidth = 1.0;\n    this.state = {\n      scale: { x: 1, y: 1 },\n      'font-family': 'Arial',\n      'font-size': '8pt',\n      'font-weight': 'normal',\n    };\n\n    this.attributes = {\n      'stroke-width': 0.3,\n      'fill': 'black',\n      'stroke': 'black',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.background_attributes = {\n      'stroke-width': 0,\n      'fill': 'white',\n      'stroke': 'white',\n      'stroke-dasharray': 'none',\n      'font-family': 'Arial',\n      'font-size': '10pt',\n      'font-weight': 'normal',\n      'font-style': 'normal',\n    };\n\n    this.shadow_attributes = {\n      width: 0,\n      color: 'black',\n    };\n\n    this.state_stack = [];\n\n    // Test for Internet Explorer\n    this.iePolyfill();\n  }\n\n  create(svgElementType) {\n    return document.createElementNS(this.svgNS, svgElementType);\n  }\n\n  // Allow grouping elements in containers for interactivity.\n  openGroup(cls, id, attrs) {\n    const group = this.create('g');\n    this.groups.push(group);\n    this.parent.appendChild(group);\n    this.parent = group;\n    if (cls) group.setAttribute('class', Vex.Prefix(cls));\n    if (id) group.setAttribute('id', Vex.Prefix(id));\n\n    if (attrs && attrs.pointerBBox) {\n      group.setAttribute('pointer-events', 'bounding-box');\n    }\n    return group;\n  }\n\n  closeGroup() {\n    this.groups.pop();\n    this.parent = this.groups[this.groups.length - 1];\n  }\n\n  add(elem) {\n    this.parent.appendChild(elem);\n  }\n\n  // Tests if the browser is Internet Explorer; if it is,\n  // we do some tricks to improve text layout.  See the\n  // note at ieMeasureTextFix() for details.\n  iePolyfill() {\n    if (typeof (navigator) !== 'undefined') {\n      this.ie = (\n        /MSIE 9/i.test(navigator.userAgent) ||\n        /MSIE 10/i.test(navigator.userAgent) ||\n        /rv:11\\.0/i.test(navigator.userAgent) ||\n        /Trident/i.test(navigator.userAgent)\n      );\n    }\n  }\n\n  // ### Styling & State Methods:\n\n  setFont(family, size, weight) {\n    // Unlike canvas, in SVG italic is handled by font-style,\n    // not weight. So: we search the weight argument and\n    // apply bold and italic to weight and style respectively.\n    let bold = false;\n    let italic = false;\n    let style = 'normal';\n    // Weight might also be a number (200, 400, etc...) so we\n    // test its type to be sure we have access to String methods.\n    if (typeof weight === 'string') {\n      // look for \"italic\" in the weight:\n      if (weight.indexOf('italic') !== -1) {\n        weight = weight.replace(/italic/g, '');\n        italic = true;\n      }\n      // look for \"bold\" in weight\n      if (weight.indexOf('bold') !== -1) {\n        weight = weight.replace(/bold/g, '');\n        bold = true;\n      }\n      // remove any remaining spaces\n      weight = weight.replace(/ /g, '');\n    }\n    weight = bold ? 'bold' : weight;\n    weight = (typeof weight === 'undefined' || weight === '') ? 'normal' : weight;\n\n    style = italic ? 'italic' : style;\n\n    const fontAttributes = {\n      'font-family': family,\n      'font-size': size + 'pt',\n      'font-weight': weight,\n      'font-style': style,\n    };\n\n    // Store the font size so that if the browser is Internet\n    // Explorer we can fix its calculations of text width.\n    this.fontSize = Number(size);\n\n    Vex.Merge(this.attributes, fontAttributes);\n    Vex.Merge(this.state, fontAttributes);\n\n    return this;\n  }\n\n  setRawFont(font) {\n    font = font.trim();\n    // Assumes size first, splits on space -- which is presently\n    // how all existing modules are calling this.\n    const fontArray = font.split(' ');\n\n    this.attributes['font-family'] = fontArray[1];\n    this.state['font-family'] = fontArray[1];\n\n    this.attributes['font-size'] = fontArray[0];\n    this.state['font-size'] = fontArray[0];\n\n    // Saves fontSize for IE polyfill\n    this.fontSize = Number(fontArray[0].match(/\\d+/));\n    return this;\n  }\n\n  setFillStyle(style) {\n    this.attributes.fill = style;\n    return this;\n  }\n\n  setBackgroundFillStyle(style) {\n    this.background_attributes.fill = style;\n    this.background_attributes.stroke = style;\n    return this;\n  }\n\n  setStrokeStyle(style) {\n    this.attributes.stroke = style;\n    return this;\n  }\n\n  setShadowColor(style) {\n    this.shadow_attributes.color = style;\n    return this;\n  }\n\n  setShadowBlur(blur) {\n    this.shadow_attributes.width = blur;\n    return this;\n  }\n\n  setLineWidth(width) {\n    this.attributes['stroke-width'] = width;\n    this.lineWidth = width;\n  }\n\n  // @param array {lineDash} as [dashInt, spaceInt, dashInt, spaceInt, etc...]\n  setLineDash(lineDash) {\n    if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n      lineDash = lineDash.join(', ');\n      this.attributes['stroke-dasharray'] = lineDash;\n      return this;\n    } else {\n      throw new Vex.RERR('ArgumentError', 'lineDash must be an array of integers.');\n    }\n  }\n\n  setLineCap(lineCap) {\n    this.attributes['stroke-linecap'] = lineCap;\n    return this;\n  }\n\n  // ### Sizing & Scaling Methods:\n\n  // TODO (GCR): See note at scale() -- seperate our internal\n  // conception of pixel-based width/height from the style.width\n  // and style.height properties eventually to allow users to\n  // apply responsive sizing attributes to the SVG.\n  resize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.element.style.width = width;\n    const attributes = {\n      width,\n      height,\n    };\n    this.applyAttributes(this.svg, attributes);\n    return this;\n  }\n\n  scale(x, y) {\n    // uses viewBox to scale\n    // TODO (GCR): we may at some point want to distinguish the\n    // style.width / style.height properties that are applied to\n    // the SVG object from our internal conception of the SVG\n    // width/height.  This would allow us to create automatically\n    // scaling SVG's that filled their containers, for instance.\n    //\n    // As this isn't implemented in Canvas or Raphael contexts,\n    // I've left as is for now, but in using the viewBox to\n    // handle internal scaling, am trying to make it possible\n    // for us to eventually move in that direction.\n\n    this.state.scale = { x, y };\n    const visibleWidth = this.width / x;\n    const visibleHeight = this.height / y;\n    this.setViewBox(0, 0, visibleWidth, visibleHeight);\n\n    return this;\n  }\n\n  setViewBox(...args) {\n    // Override for \"x y w h\" style:\n    if (args.length === 1) {\n      const [viewBox] = args;\n      this.svg.setAttribute('viewBox', viewBox);\n    } else {\n      const [xMin, yMin, width, height] = args;\n      const viewBoxString = xMin + ' ' + yMin + ' ' + width + ' ' + height;\n      this.svg.setAttribute('viewBox', viewBoxString);\n    }\n  }\n\n  // ### Drawing helper methods:\n\n  applyAttributes(element, attributes) {\n    const attrNamesToIgnore = attrNamesToIgnoreMap[element.nodeName];\n    Object\n      .keys(attributes)\n      .forEach(propertyName => {\n        if (attrNamesToIgnore && attrNamesToIgnore[propertyName]) {\n          return;\n        }\n        element.setAttributeNS(null, propertyName, attributes[propertyName]);\n      });\n\n    return element;\n  }\n\n  // ### Shape & Path Methods:\n\n  clear() {\n    // Clear the SVG by removing all inner children.\n\n    // (This approach is usually slightly more efficient\n    // than removing the old SVG & adding a new one to\n    // the container element, since it does not cause the\n    // container to resize twice.  Also, the resize\n    // triggered by removing the entire SVG can trigger\n    // a touchcancel event when the element resizes away\n    // from a touch point.)\n\n    while (this.svg.lastChild) {\n      this.svg.removeChild(this.svg.lastChild);\n    }\n\n    // Replace the viewbox attribute we just removed:\n    this.scale(this.state.scale.x, this.state.scale.y);\n  }\n\n  // ## Rectangles:\n\n  rect(x, y, width, height, attributes) {\n    // Avoid invalid negative height attribs by\n    // flipping the rectangle on its head:\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    // Create the rect & style it:\n    const rectangle = this.create('rect');\n    if (typeof attributes === 'undefined') {\n      attributes = {\n        fill: 'none',\n        'stroke-width': this.lineWidth,\n        stroke: 'black',\n      };\n    }\n\n    Vex.Merge(attributes, {\n      x,\n      y,\n      width,\n      height,\n    });\n\n    this.applyAttributes(rectangle, attributes);\n\n    this.add(rectangle);\n    return this;\n  }\n\n  fillRect(x, y, width, height) {\n    if (height < 0) {\n      y += height;\n      height *= -1;\n    }\n\n    this.rect(x, y, width, height, this.attributes);\n    return this;\n  }\n\n  clearRect(x, y, width, height) {\n    // TODO(GCR): Improve implementation of this...\n    // Currently it draws a box of the background color, rather\n    // than creating alpha through lower z-levels.\n    //\n    // See the implementation of this in SVGKit:\n    // http://sourceforge.net/projects/svgkit/\n    // as a starting point.\n    //\n    // Adding a large number of transform paths (as we would\n    // have to do) could be a real performance hit.  Since\n    // tabNote seems to be the only module that makes use of this\n    // it may be worth creating a seperate tabStave that would\n    // draw lines around locations of tablature fingering.\n    //\n\n    this.rect(x, y, width, height, this.background_attributes);\n    return this;\n  }\n\n  // ## Paths:\n  round(number, precision) {\n    return Math.round(+(number + 'e' + precision)) / Math.pow(10, precision);\n  } \n  beginPath() {\n    this.path = '';\n    this.pen.x = NaN;\n    this.pen.y = NaN;\n    return this;\n  }\n\n  moveTo(x, y) {\n    x = this.round(x, 2);\n    y = this.round(y, 2);\n    this.path += 'M' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  lineTo(x, y) {\n    x = this.round(x, 2);\n    y = this.round(y, 2);\n    this.path += 'L' + x + ' ' + y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    x = this.round(x, 2);\n    y = this.round(y, 2);\n    x1 = this.round(x1, 2);\n    y1 = this.round(y1, 2);\n    x2 = this.round(x2, 2);\n    y2 = this.round(y2, 2);\n\n    this.path += 'C' +\n      x1 + ' ' +\n      y1 + ',' +\n      x2 + ' ' +\n      y2 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    x = this.round(x, 2);\n    y = this.round(y, 2);\n    x1 = this.round(x1, 2);\n    y1 = this.round(y1, 2);\n\n    this.path += 'Q' +\n      x1 + ' ' +\n      y1 + ',' +\n      x + ' ' +\n      y;\n    this.pen.x = x;\n    this.pen.y = y;\n    return this;\n  }\n\n  // This is an attempt (hack) to simulate the HTML5 canvas\n  // arc method.\n  arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n    function normalizeAngle(angle) {\n      while (angle < 0) {\n        angle += Math.PI * 2;\n      }\n\n      while (angle > Math.PI * 2) {\n        angle -= Math.PI * 2;\n      }\n      return angle;\n    }\n\n    startAngle = normalizeAngle(startAngle);\n    endAngle = normalizeAngle(endAngle);\n\n    if (startAngle > endAngle) {\n      const tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n      antiClockwise = !antiClockwise;\n    }\n\n    const delta = endAngle - startAngle;\n\n    if (delta > Math.PI) {\n      this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2, antiClockwise);\n      this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle, antiClockwise);\n    } else {\n      this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n    }\n    return this;\n  }\n\n  arcHelper(x, y, radius, startAngle, endAngle, antiClockwise) {\n    const x1 = x + radius * Math.cos(startAngle);\n    const y1 = y + radius * Math.sin(startAngle);\n\n    const x2 = x + radius * Math.cos(endAngle);\n    const y2 = y + radius * Math.sin(endAngle);\n\n    let largeArcFlag = 0;\n    let sweepFlag = 0;\n    if (antiClockwise) {\n      sweepFlag = 1;\n      if (endAngle - startAngle < Math.PI) {\n        largeArcFlag = 1;\n      }\n    } else if (endAngle - startAngle > Math.PI) {\n      largeArcFlag = 1;\n    }\n\n    this.path += 'M' + x1 + ' ' + y1 + ' A' +\n      radius + ' ' + radius + ' 0 ' + largeArcFlag + ' ' + sweepFlag + ' ' +\n      x2 + ' ' + y2;\n    if (!isNaN(this.pen.x) && !isNaN(this.pen.y)) {\n      this.peth += 'M' + this.pen.x + ' ' + this.pen.y;\n    }\n  }\n\n  closePath() {\n    this.path += 'Z';\n\n    return this;\n  }\n\n  // Adapted from the source for Raphael's Element.glow\n  glow() {\n    // Calculate the width & paths of the glow:\n    if (this.shadow_attributes.width > 0) {\n      const sa = this.shadow_attributes;\n      const num_paths = sa.width / 2;\n      // Stroke at varying widths to create effect of gaussian blur:\n      for (let i = 1; i <= num_paths; i++) {\n        const attributes = {\n          stroke: sa.color,\n          'stroke-linejoin': 'round',\n          'stroke-linecap': 'round',\n          'stroke-width': +((sa.width * 0.4) / num_paths * i).toFixed(3),\n          opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3),\n        };\n\n        const path = this.create('path');\n        attributes.d = this.path;\n        this.applyAttributes(path, attributes);\n        this.add(path);\n      }\n    }\n    return this;\n  }\n\n  fill(attributes) {\n    // If our current path is set to glow, make it glow\n    this.glow();\n\n    const path = this.create('path');\n    if (typeof attributes === 'undefined') {\n      attributes = {};\n      Vex.Merge(attributes, this.attributes);\n      attributes.stroke = 'none';\n    }\n\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  stroke() {\n    // If our current path is set to glow, make it glow.\n    this.glow();\n\n    const path = this.create('path');\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.fill = 'none';\n    attributes['stroke-width'] = this.lineWidth;\n    attributes.d = this.path;\n\n    this.applyAttributes(path, attributes);\n    this.add(path);\n    return this;\n  }\n\n  // ## Text Methods:\n  measureText(text) {\n    const txt = this.create('text');\n    if (typeof (txt.getBBox) !== 'function') {\n      return { x: 0, y: 0, width: 0, height: 0 };\n    }\n\n    txt.textContent = text;\n    this.applyAttributes(txt, this.attributes);\n\n    // Temporarily add it to the document for measurement.\n    this.svg.appendChild(txt);\n\n    let bbox = txt.getBBox();\n    if (this.ie && text !== '' && this.attributes['font-style'] === 'italic') {\n      bbox = this.ieMeasureTextFix(bbox, text);\n    }\n\n    this.svg.removeChild(txt);\n    return bbox;\n  }\n\n  ieMeasureTextFix(bbox) {\n    // Internet Explorer over-pads text in italics,\n    // resulting in giant width estimates for measureText.\n    // To fix this, we use this formula, tested against\n    // ie 11:\n    // overestimate (in pixels) = FontSize(in pt) * 1.196 + 1.96\n    // And then subtract the overestimate from calculated width.\n\n    const fontSize = Number(this.fontSize);\n    const m = 1.196;\n    const b = 1.9598;\n    const widthCorrection = (m * fontSize) + b;\n    const width = bbox.width - widthCorrection;\n    const height = bbox.height - 1.5;\n\n    // Get non-protected copy:\n    const box = {\n      x: bbox.x,\n      y: bbox.y,\n      width,\n      height,\n    };\n\n    return box;\n  }\n\n  fillText(text, x, y) {\n    if (!text || text.length <= 0) {\n      return;\n    }\n    const attributes = {};\n    Vex.Merge(attributes, this.attributes);\n    attributes.stroke = 'none';\n    attributes.x = x;\n    attributes.y = y;\n\n    const txt = this.create('text');\n    txt.textContent = text;\n    this.applyAttributes(txt, attributes);\n    this.add(txt);\n  }\n\n  save() {\n    // TODO(mmuthanna): State needs to be deep-copied.\n    this.state_stack.push({\n      state: {\n        'font-family': this.state['font-family'],\n        'font-weight': this.state['font-weight'],\n        'font-style': this.state['font-style'],\n        'font-size': this.state['font-size'],\n      },\n      attributes: {\n        'font-family': this.attributes['font-family'],\n        'font-weight': this.attributes['font-weight'],\n        'font-style': this.attributes['font-style'],\n        'font-size': this.attributes['font-size'],\n        fill: this.attributes.fill,\n        stroke: this.attributes.stroke,\n        'stroke-width': this.attributes['stroke-width'],\n        'stroke-dasharray': this.attributes['stroke-dasharray'],\n      },\n      shadow_attributes: {\n        width: this.shadow_attributes.width,\n        color: this.shadow_attributes.color,\n      },\n      lineWidth: this.lineWidth,\n    });\n    return this;\n  }\n\n  restore() {\n    // TODO(0xfe): State needs to be deep-restored.\n    const state = this.state_stack.pop();\n    this.state['font-family'] = state.state['font-family'];\n    this.state['font-weight'] = state.state['font-weight'];\n    this.state['font-style'] = state.state['font-style'];\n    this.state['font-size'] = state.state['font-size'];\n\n    this.attributes['font-family'] = state.attributes['font-family'];\n    this.attributes['font-weight'] = state.attributes['font-weight'];\n    this.attributes['font-style'] = state.attributes['font-style'];\n    this.attributes['font-size'] = state.attributes['font-size'];\n\n    this.attributes.fill = state.attributes.fill;\n    this.attributes.stroke = state.attributes.stroke;\n    this.attributes['stroke-width'] = state.attributes['stroke-width'];\n    this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n\n    this.shadow_attributes.width = state.shadow_attributes.width;\n    this.shadow_attributes.color = state.shadow_attributes.color;\n\n    this.lineWidth = state.lineWidth;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\n\n/* global document: false */\n\nimport { CanvasContext } from './canvascontext';\nimport { RaphaelContext } from './raphaelcontext';\nimport { SVGContext } from './svgcontext';\nimport { Vex } from './vex';\n\nlet lastContext = null;\n\nexport class Renderer {\n  static get Backends() {\n    return {\n      CANVAS: 1,\n      RAPHAEL: 2,\n      SVG: 3,\n      VML: 4,\n    };\n  }\n\n  // End of line types\n  static get LineEndType() {\n    return {\n      NONE: 1, // No leg\n      UP: 2,   // Upward leg\n      DOWN: 3, // Downward leg\n    };\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY() {\n    return false;\n  }\n\n  static get lastContext() {\n    return lastContext;\n  }\n  static set lastContext(ctx) {\n    lastContext = ctx;\n  }\n\n  static buildContext(elementId, backend, width, height, background) {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) { renderer.resize(width, height); }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || CanvasContext.prototype[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementId, backend) {\n    this.elementId = elementId;\n    if (!this.elementId) {\n      throw new Vex.RERR('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementId);\n    if (!this.element) this.element = elementId;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${elementId}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new Vex.RERR('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width, height) {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new Vex.RERR(\n          'BadElement', `Can't get canvas context from element: ${this.elementId}`\n        );\n      }\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext() { return this.ctx; }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\nfunction L(...args) { if (Stem.DEBUG) Vex.L('Vex.Flow.Stem', args); }\n\nexport class Stem extends Element {\n  static get CATEGORY() { return 'stem'; }\n\n  // Stem directions\n  static get UP() {\n    return 1;\n  }\n  static get DOWN() {\n    return -1;\n  }\n\n  // Theme\n  static get WIDTH() {\n    return Flow.STEM_WIDTH;\n  }\n  static get HEIGHT() {\n    return Flow.STEM_HEIGHT;\n  }\n\n  constructor(options = {}) {\n    super();\n    this.setAttribute('type', 'Stem');\n\n    // Default notehead x bounds\n    this.x_begin = options.x_begin || 0;\n    this.x_end = options.x_end || 0;\n\n    // Y bounds for top/bottom most notehead\n    this.y_top = options.y_top || 0;\n    this.y_bottom = options.y_bottom || 0;\n\n    // Stem top extension\n    this.stem_extension = options.stem_extension || 0;\n\n    // Direction of the stem\n    this.stem_direction = options.stem_direction || 0;\n\n    // Flag to override all draw calls\n    this.hide = options.hide || false;\n\n    this.isStemlet = options.isStemlet || false;\n    this.stemletHeight = options.stemletHeight || 0;\n\n    // Changing where the stem meets the head\n    this.stem_up_y_offset = options.stem_up_y_offset || 0;\n    this.stem_down_y_offset = options.stem_down_y_offset || 0;\n\n    // Use to adjust the rendered height without affecting\n    // the results of `.getExtents()`\n    this.renderHeightAdjustment = 0;\n  }\n\n  // Set the x bounds for the default notehead\n  setNoteHeadXBounds(x_begin, x_end) {\n    this.x_begin = x_begin;\n    this.x_end = x_end;\n    return this;\n  }\n\n  // Set the direction of the stem in relation to the noteheads\n  setDirection(direction) { this.stem_direction = direction; }\n\n  // Set the extension for the stem, generally for flags or beams\n  setExtension(ext) { this.stem_extension = ext; }\n  getExtension() { return this.stem_extension; }\n\n  // The the y bounds for the top and bottom noteheads\n  setYBounds(y_top, y_bottom) {\n    this.y_top = y_top;\n    this.y_bottom = y_bottom;\n  }\n\n  // The category of the object\n  getCategory() { return Stem.CATEGORY; }\n\n  // Gets the entire height for the stem\n  getHeight() {\n    const y_offset = (this.stem_direction === Stem.UP) ? this.stem_up_y_offset : this.stem_down_y_offset; // eslint-disable-line max-len\n    return ((this.y_bottom - this.y_top) * this.stem_direction) +\n           ((Stem.HEIGHT - y_offset + this.stem_extension) * this.stem_direction);\n  }\n  getBoundingBox() {\n    throw new Vex.RERR('NotImplemented', 'getBoundingBox() not implemented.');\n  }\n\n  // Get the y coordinates for the very base of the stem to the top of\n  // the extension\n  getExtents() {\n    const isStemUp = this.stem_direction === Stem.UP;\n    const ys = [this.y_top, this.y_bottom];\n    const stemHeight = Stem.HEIGHT + this.stem_extension;\n    const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n    const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n    const stemTipY = innerMostNoteheadY + (stemHeight * -this.stem_direction);\n\n    return { topY: stemTipY, baseY: outerMostNoteheadY };\n  }\n\n  setVisibility(isVisible) {\n    this.hide = !isVisible;\n    return this;\n  }\n\n  setStemlet(isStemlet, stemletHeight) {\n    this.isStemlet = isStemlet;\n    this.stemletHeight = stemletHeight;\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  draw() {\n    this.setRendered();\n    if (this.hide) return;\n    const ctx = this.checkContext();\n\n    let stem_x;\n    let stem_y;\n    const stem_direction = this.stem_direction;\n\n    if (stem_direction === Stem.DOWN) {\n      // Down stems are rendered to the left of the head.\n      stem_x = this.x_begin;\n      stem_y = this.y_top + this.stem_down_y_offset;\n    } else {\n      // Up stems are rendered to the right of the head.\n      stem_x = this.x_end;\n      stem_y = this.y_bottom - this.stem_up_y_offset;\n    }\n\n    const stemHeight = this.getHeight();\n\n    L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n\n    // The offset from the stem's base which is required fo satisfy the stemlet height\n    const stemletYOffset = this.isStemlet\n      ? stemHeight - this.stemletHeight * this.stem_direction\n      : 0;\n\n    // Draw the stem\n    ctx.save();\n    this.applyStyle(ctx);\n    this.setAttribute('el', this.context.openGroup('stem'));\n    ctx.beginPath();\n    ctx.setLineWidth(Stem.WIDTH);\n    ctx.moveTo(stem_x, stem_y - stemletYOffset);\n    ctx.lineTo(stem_x, stem_y - stemHeight - (this.renderHeightAdjustment * stem_direction));\n    ctx.stroke();\n    this.restoreStyle(ctx);\n    this.context.closeGroup();\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\nexport class Tuplet extends Element {\n  static get LOCATION_TOP() {\n    return 1;\n  }\n  static get LOCATION_BOTTOM() {\n    return -1;\n  }\n  static get NESTING_OFFSET() {\n    return 15;\n  }\n\n  constructor(notes, options) {\n    super();\n    this.setAttribute('type', 'Tuplet');\n    if (!notes || !notes.length) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for tuplet.');\n    }\n\n    this.options = Vex.Merge({}, options);\n    this.notes = notes;\n    this.num_notes = 'num_notes' in this.options ?\n      this.options.num_notes : notes.length;\n\n    // We accept beats_occupied, but warn that it's deprecated:\n    // the preferred property name is now notes_occupied.\n    if (this.options.beats_occupied) {\n      this.beatsOccupiedDeprecationWarning();\n    }\n    this.notes_occupied = this.options.notes_occupied ||\n      this.options.beats_occupied ||\n      2;\n    if ('bracketed' in this.options) {\n      this.bracketed = this.options.bracketed;\n    } else {\n      this.bracketed =\n        notes.some(note => note.beam === null);\n    }\n\n    this.ratioed = 'ratioed' in this.options ?\n      this.options.ratioed :\n      (Math.abs(this.notes_occupied - this.num_notes) > 1);\n    this.point = 28;\n    this.y_pos = 16;\n    this.x_pos = 100;\n    this.width = 200;\n    this.location = this.options.location || Tuplet.LOCATION_TOP;\n\n    Formatter.AlignRestsToNotes(notes, true, true);\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  attach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.setTuplet(this);\n    }\n  }\n\n  detach() {\n    for (let i = 0; i < this.notes.length; i++) {\n      const note = this.notes[i];\n      note.resetTuplet(this);\n    }\n  }\n\n  /**\n   * Set whether or not the bracket is drawn.\n   */\n  setBracketed(bracketed) {\n    this.bracketed = !!bracketed;\n    return this;\n  }\n\n  /**\n   * Set whether or not the ratio is shown.\n   */\n  setRatioed(ratioed) {\n    this.ratioed = !!ratioed;\n    return this;\n  }\n\n  /**\n   * Set the tuplet to be displayed either on the top or bottom of the stave\n   */\n  setTupletLocation(location) {\n    if (!location) {\n      location = Tuplet.LOCATION_TOP;\n    } else if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n      throw new Vex.RERR('BadArgument', 'Invalid tuplet location: ' + location);\n    }\n\n    this.location = location;\n    return this;\n  }\n\n  getNotes() {\n    return this.notes;\n  }\n\n  getNoteCount() {\n    return this.num_notes;\n  }\n\n  beatsOccupiedDeprecationWarning() {\n    const msg = [\n      'beats_occupied has been deprecated as an ',\n      'option for tuplets. Please use notes_occupied ',\n      'instead. Calls to getBeatsOccupied and ',\n      'setBeatsOccupied should now be routed to ',\n      'getNotesOccupied and setNotesOccupied instead',\n    ].join('');\n\n    if (console && console.warn) { // eslint-disable-line no-console\n      console.warn(msg); // eslint-disable-line no-console\n    } else if (console) {\n      console.log(msg); // eslint-disable-line no-console\n    }\n  }\n\n  getBeatsOccupied() {\n    this.beatsOccupiedDeprecationWarning();\n    return this.getNotesOccupied();\n  }\n\n  setBeatsOccupied(beats) {\n    this.beatsOccupiedDeprecationWarning();\n    return this.setNotesOccupied(beats);\n  }\n\n  getNotesOccupied() {\n    return this.notes_occupied;\n  }\n\n  setNotesOccupied(notes) {\n    this.detach();\n    this.notes_occupied = notes;\n    this.resolveGlyphs();\n    this.attach();\n  }\n\n  resolveGlyphs() {\n    this.numerator_glyphs = [];\n    let n = this.num_notes;\n    while (n >= 1) {\n      this.numerator_glyphs.unshift(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n\n    this.denom_glyphs = [];\n    n = this.notes_occupied;\n    while (n >= 1) {\n      this.denom_glyphs.unshift(new Glyph('v' + (n % 10), this.point));\n      n = parseInt(n / 10, 10);\n    }\n  }\n\n  // determine how many tuplets are nested within this tuplet\n  // on the same side (above/below), to calculate a y\n  // offset for this tuplet:\n  getNestedTupletCount() {\n    const location = this.location;\n    const first_note = this.notes[0];\n    let maxTupletCount = countTuplets(first_note, location);\n    let minTupletCount = countTuplets(first_note, location);\n\n    // Count the tuplets that are on the same side (above/below)\n    // as this tuplet:\n    function countTuplets(note, location) {\n      return note.tupletStack.filter(tuplet => tuplet.location === location).length;\n    }\n\n    this.notes.forEach(note => {\n      const tupletCount = countTuplets(note, location);\n      maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n      minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n    });\n\n    return maxTupletCount - minTupletCount;\n  }\n\n  // determine the y position of the tuplet:\n  getYPosition() {\n    // offset the tuplet for any nested tuplets between\n    // it and the notes:\n    const nested_tuplet_y_offset =\n      this.getNestedTupletCount() *\n      Tuplet.NESTING_OFFSET *\n      -this.location;\n\n    // offset the tuplet for any manual y_offset:\n    const y_offset = this.options.y_offset || 0;\n\n    // now iterate through the notes and find our highest\n    // or lowest locations, to form a base y_pos\n    const first_note = this.notes[0];\n    let y_pos;\n    if (this.location === Tuplet.LOCATION_TOP) {\n      y_pos = first_note.getStave().getYForLine(0) - 15;\n      // y_pos = first_note.getStemExtents().topY - 10;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const top_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().topY - 10\n          : this.notes[i].getStemExtents().baseY - 20;\n\n        if (top_y < y_pos) {\n          y_pos = top_y;\n        }\n      }\n    } else {\n      y_pos = first_note.getStave().getYForLine(4) + 20;\n\n      for (let i = 0; i < this.notes.length; ++i) {\n        const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n          ? this.notes[i].getStemExtents().baseY + 20\n          : this.notes[i].getStemExtents().topY + 10;\n        if (bottom_y > y_pos) {\n          y_pos = bottom_y;\n        }\n      }\n    }\n\n    return y_pos + nested_tuplet_y_offset + y_offset;\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    // determine x value of left bound of tuplet\n    const first_note = this.notes[0];\n    const last_note = this.notes[this.notes.length - 1];\n\n    if (!this.bracketed) {\n      this.x_pos = first_note.getStemX();\n      this.width = last_note.getStemX() - this.x_pos;\n    } else {\n      this.x_pos = first_note.getTieLeftX() - 5;\n      this.width = last_note.getTieRightX() - this.x_pos + 5;\n    }\n\n    // determine y value for tuplet\n    this.y_pos = this.getYPosition();\n\n    const addGlyphWidth = (width, glyph) => width + glyph.getMetrics().width;\n\n    // calculate total width of tuplet notation\n    let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n    if (this.ratioed) {\n      width = this.denom_glyphs.reduce(addGlyphWidth, width);\n      width += this.point * 0.32;\n    }\n\n    const notation_center_x = this.x_pos + (this.width / 2);\n    const notation_start_x = notation_center_x - (width / 2);\n\n    // draw bracket if the tuplet is not beamed\n    if (this.bracketed) {\n      const line_width = this.width / 2 - width / 2 - 5;\n\n      // only draw the bracket if it has positive length\n      if (line_width > 0) {\n        this.context.fillRect(this.x_pos, this.y_pos, line_width, 1);\n        this.context.fillRect(\n          this.x_pos + this.width / 2 + width / 2 + 5,\n          this.y_pos,\n          line_width,\n          1\n        );\n        this.context.fillRect(\n          this.x_pos,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n        this.context.fillRect(\n          this.x_pos + this.width,\n          this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM),\n          1,\n          this.location * 10\n        );\n      }\n    }\n\n    // draw numerator glyphs\n    let x_offset = 0;\n    this.numerator_glyphs.forEach(glyph => {\n      glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n      x_offset += glyph.getMetrics().width;\n    });\n\n    // display colon and denominator if the ratio is to be shown\n    if (this.ratioed) {\n      const colon_x = notation_start_x + x_offset + this.point * 0.16;\n      const colon_radius = this.point * 0.06;\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      this.context.beginPath();\n      this.context.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n      this.context.closePath();\n      this.context.fill();\n      x_offset += this.point * 0.32;\n      this.denom_glyphs.forEach(glyph => {\n        glyph.render(this.context, notation_start_x + x_offset, this.y_pos + (this.point / 3) - 2);\n        x_offset += glyph.getMetrics().width;\n      });\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tuplet } from './tuplet';\nimport { Stem } from './stem';\n\nfunction calculateStemDirection(notes) {\n  let lineSum = 0;\n  notes.forEach(note => {\n    if (note.keyProps) {\n      note.keyProps.forEach(keyProp => {\n        lineSum += (keyProp.line - 3);\n      });\n    }\n  });\n\n  if (lineSum >= 0) {\n    return Stem.DOWN;\n  }\n  return Stem.UP;\n}\n\nconst getStemSlope = (firstNote, lastNote) => {\n  const firstStemTipY = firstNote.getStemExtents().topY;\n  const firstStemX = firstNote.getStemX();\n  const lastStemTipY = lastNote.getStemExtents().topY;\n  const lastStemX = lastNote.getStemX();\n  return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n};\n\nconst BEAM_LEFT = 'L';\nconst BEAM_RIGHT = 'R';\nconst BEAM_BOTH = 'B';\n\nexport class Beam extends Element {\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  static getDefaultBeamGroups(time_sig) {\n    if (!time_sig || time_sig === 'c') {\n      time_sig = '4/4';\n    }\n\n    const defaults = {\n      '1/2': ['1/2'],\n      '2/2': ['1/2'],\n      '3/2': ['1/2'],\n      '4/2': ['1/2'],\n\n      '1/4': ['1/4'],\n      '2/4': ['1/4'],\n      '3/4': ['1/4'],\n      '4/4': ['1/4'],\n\n      '1/8': ['1/8'],\n      '2/8': ['2/8'],\n      '3/8': ['3/8'],\n      '4/8': ['2/8'],\n\n      '1/16': ['1/16'],\n      '2/16': ['2/16'],\n      '3/16': ['3/16'],\n      '4/16': ['2/16'],\n    };\n\n    const groups = defaults[time_sig];\n\n    if (groups === undefined) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      const beatTotal = parseInt(time_sig.split('/')[0], 10);\n      const beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      const tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(group => new Fraction().parse(group));\n    }\n\n    return [new Fraction(1, 4)];\n  }\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  static applyAndGetBeams(voice, stem_direction, groups) {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups,\n      stem_direction,\n    });\n  }\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  static generateBeams(notes, config) {\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    const tickGroups = config.groups.map(group => {\n      if (!group.multiply) {\n        throw new Vex.RuntimeError('InvalidBeamGroups',\n          'The beam groups must be an array of Vex.Flow.Fractions');\n      }\n      return group.clone().multiply(Flow.RESOLUTION, 1);\n    });\n\n    const unprocessedNotes = notes;\n    let currentTickGroup = 0;\n    let noteGroups = [];\n    let currentGroup = [];\n\n    function getTotalTicks(vf_notes) {\n      return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups() {\n      let nextGroup = [];\n\n      unprocessedNotes.forEach(unprocessedNote => {\n        nextGroup = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n\n        currentGroup.push(unprocessedNote);\n        const ticksPerGroup = tickGroups[currentTickGroup].clone();\n        const totalTicks = getTotalTicks(currentGroup);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        const unbeamable = Flow.durationToNumber(unprocessedNote.duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes\n      if (currentGroup.length > 0) {\n        noteGroups.push(currentGroup);\n      }\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(group => {\n        if (group.length > 1) {\n          let beamable = true;\n          group.forEach(note => {\n            if (note.getIntrinsicTicks() >= Flow.durationToTicks('4')) {\n              beamable = false;\n            }\n          });\n          return beamable;\n        }\n        return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      const sanitizedGroups = [];\n      noteGroups.forEach(group => {\n        let tempGroup = [];\n        group.forEach((note, index, group) => {\n          const isFirstOrLast = index === 0 || index === group.length - 1;\n          const prevNote = group[index - 1];\n\n          const breaksOnEachRest = !config.beam_rests && note.isRest();\n          const breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          let breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n            !note.isRest() && !prevNote.isRest()) {\n            const prevDirection = prevNote.getStemDirection();\n            const currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          const isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(group => {\n        let stemDirection;\n        if (config.maintain_stem_directions) {\n          const note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction) {\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group) {\n      for (let i = 0; i < group.length; i++) {\n        const note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group, direction) {\n      group.forEach(note => {\n        note.setStemDirection(direction);\n      });\n    }\n\n    // Get all of the tuplets in all of the note groups\n    function getTuplets() {\n      const uniqueTuplets = [];\n\n      // Go through all of the note groups and inspect for tuplets\n      noteGroups.forEach(group => {\n        let tuplet = null;\n        group.forEach(note => {\n          if (note.tuplet && (tuplet !== note.tuplet)) {\n            tuplet = note.tuplet;\n            uniqueTuplets.push(tuplet);\n          }\n        });\n      });\n      return uniqueTuplets;\n    }\n\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    const beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    const allTuplets = getTuplets();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    const beams = [];\n    beamedNoteGroups.forEach(group => {\n      const beam = new Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n      if (config.secondary_breaks) {\n        beam.render_options.secondary_break_ticks = Flow.durationToTicks(config.secondary_breaks);\n      }\n      if (config.flat_beams === true) {\n        beam.render_options.flat_beams = true;\n        beam.render_options.flat_beam_offset = config.flat_beam_offset;\n      }\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    allTuplets.forEach(tuplet => {\n      // Set the tuplet location based on the stem direction\n      const direction = tuplet.notes[0].stem_direction === Stem.DOWN ?\n        Tuplet.LOCATION_BOTTOM : Tuplet.LOCATION_TOP;\n      tuplet.setTupletLocation(direction);\n\n      // If any of the notes in the tuplet are not beamed, draw a bracket.\n      let bracketed = false;\n      for (let i = 0; i < tuplet.notes.length; i++) {\n        const note = tuplet.notes[i];\n        if (note.beam === null) {\n          bracketed = true;\n          break;\n        }\n      }\n      tuplet.setBracketed(bracketed);\n    });\n\n    return beams;\n  }\n\n  constructor(notes, auto_stem) {\n    super();\n    this.setAttribute('type', 'Beam');\n\n    if (!notes || notes === []) {\n      throw new Vex.RuntimeError('BadArguments', 'No notes provided for beam.');\n    }\n\n    if (notes.length === 1) {\n      throw new Vex.RuntimeError('BadArguments', 'Too few notes for beam.');\n    }\n\n    // Validate beam line, direction and ticks.\n    this.ticks = notes[0].getIntrinsicTicks();\n\n    if (this.ticks >= Flow.durationToTicks('4')) {\n      throw new Vex.RuntimeError('BadArguments',\n        'Beams can only be applied to notes shorter than a quarter note.');\n    }\n\n    let i; // shared iterator\n    let note;\n\n    this.stem_direction = Stem.UP;\n\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (note.hasStem()) {\n        this.stem_direction = note.getStemDirection();\n        break;\n      }\n    }\n\n    let stem_direction = this.stem_direction;\n    // Figure out optimal stem direction based on given notes\n    if (auto_stem && notes[0].getCategory() === 'stavenotes') {\n      stem_direction = calculateStemDirection(notes);\n    } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n      // Auto Stem TabNotes\n      const stem_weight = notes.reduce((memo, note) => memo + note.stem_direction, 0);\n\n      stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n    }\n\n    // Apply stem directions and attach beam to notes\n    for (i = 0; i < notes.length; ++i) {\n      note = notes[i];\n      if (auto_stem) {\n        note.setStemDirection(stem_direction);\n        this.stem_direction = stem_direction;\n      }\n      note.setBeam(this);\n    }\n\n    this.postFormatted = false;\n    this.notes = notes;\n    this.beam_count = this.getBeamCount();\n    this.break_on_indices = [];\n    this.render_options = {\n      beam_width: 5,\n      max_slope: 0.25,\n      min_slope: -0.25,\n      slope_iterations: 20,\n      slope_cost: 100,\n      show_stemlets: false,\n      stemlet_extension: 7,\n      partial_beam_length: 10,\n      flat_beams: false,\n      min_flat_beam_offset: 15,\n    };\n  }\n\n  // Get the notes in this beam\n  getNotes() { return this.notes; }\n\n  // Get the max number of beams in the set of notes\n  getBeamCount() {\n    const beamCounts = this.notes.map(note => note.getGlyph().beam_count);\n\n    const maxBeamCount = beamCounts.reduce((max, beamCount) => beamCount > max ? beamCount : max);\n\n    return maxBeamCount;\n  }\n\n  // Set which note `indices` to break the secondary beam at\n  breakSecondaryAt(indices) {\n    this.break_on_indices = indices;\n    return this;\n  }\n\n  // Return the y coordinate for linear function\n  getSlopeY(x, first_x_px, first_y_px, slope) {\n    return first_y_px + ((x - first_x_px) * slope);\n  }\n\n  // Calculate the best possible slope for the provided notes\n  calculateSlope() {\n    const {\n      notes,\n      stem_direction: stemDirection,\n      render_options: { max_slope, min_slope, slope_iterations, slope_cost },\n    } = this;\n\n    const firstNote = notes[0];\n    const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n    const increment = (max_slope - min_slope) / slope_iterations;\n    let minCost = Number.MAX_VALUE;\n    let bestSlope = 0;\n    let yShift = 0;\n\n    // iterate through slope values to find best weighted fit\n    for (let slope = min_slope; slope <= max_slope; slope += increment) {\n      let totalStemExtension = 0;\n      let yShiftTemp = 0;\n\n      // iterate through notes, calculating y shift and stem extension\n      for (let i = 1; i < notes.length; ++i) {\n        const note = notes[i];\n        const adjustedStemTipY = this.getSlopeY(\n          note.getStemX(),\n          firstNote.getStemX(),\n          firstNote.getStemExtents().topY,\n          slope\n        ) + yShiftTemp;\n\n        const stemTipY = note.getStemExtents().topY;\n        // beam needs to be shifted up to accommodate note\n        if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n          const diff = Math.abs(stemTipY - adjustedStemTipY);\n          yShiftTemp += diff * -stemDirection;\n          totalStemExtension += diff * i;\n        } else { // beam overshoots note, account for the difference\n          totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n        }\n      }\n\n      // most engraving books suggest aiming for a slope about half the angle of the\n      // difference between the first and last notes' stem length;\n      const idealSlope = initialSlope / 2;\n      const distanceFromIdeal = Math.abs(idealSlope - slope);\n\n      // This tries to align most beams to something closer to the idealSlope, but\n      // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n      const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n\n      // update state when a more ideal slope is found\n      if (cost < minCost) {\n        minCost = cost;\n        bestSlope = slope;\n        yShift = yShiftTemp;\n      }\n    }\n\n    this.slope = bestSlope;\n    this.y_shift = yShift;\n  }\n\n  // Calculate a slope and y-shift for flat beams\n  calculateFlatSlope() {\n    const {\n      notes, stem_direction,\n      render_options: { beam_width, min_flat_beam_offset, flat_beam_offset },\n    } = this;\n\n    // If a flat beam offset has not yet been supplied or calculated,\n    // generate one based on the notes in this particular note group\n    let total = 0;\n    let extremeY = 0;  // Store the highest or lowest note here\n    let extremeBeamCount = 0;  // The beam count of the extreme note\n    let currentExtreme = 0;\n    for (let i = 0; i < notes.length; i++) {\n      // Total up all of the offsets so we can average them out later\n      const note = notes[i];\n      const stemTipY = note.getStemExtents().topY;\n      total += stemTipY;\n\n      // Store the highest (stems-up) or lowest (stems-down) note so the\n      //  offset can be adjusted in case the average isn't enough\n      if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n        currentExtreme = stemTipY;\n        extremeY = Math.max(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      } else if (\n        stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)\n      ) {\n        currentExtreme = stemTipY;\n        extremeY = Math.min(...note.getYs());\n        extremeBeamCount = note.getBeamCount();\n      }\n    }\n\n    // Average the offsets to try and come up with a reasonable one that\n    //  works for all of the notes in the beam group.\n    let offset = total / notes.length;\n\n    // In case the average isn't long enough, add or subtract some more\n    //  based on the highest or lowest note (again, based on the stem\n    //  direction). This also takes into account the added height due to\n    //  the width of the beams.\n    const beamWidth = beam_width * 1.5;\n    const extremeTest = min_flat_beam_offset + (extremeBeamCount * beamWidth);\n    const newOffset = extremeY + (extremeTest * -stem_direction);\n    if (stem_direction === Stem.DOWN && offset < newOffset) {\n      offset = extremeY + extremeTest;\n    } else if (stem_direction === Stem.UP && offset > newOffset) {\n      offset = extremeY - extremeTest;\n    }\n\n    if (!flat_beam_offset) {\n      // Set the offset for the group based on the calculations above.\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    } else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n      this.render_options.flat_beam_offset = offset;\n    }\n\n    // for flat beams, the slope and y_shift are simply 0\n    this.slope = 0;\n    this.y_shift = 0;\n  }\n\n  getBeamYToDraw() {\n    const firstNote = this.notes[0];\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    let beamY = firstStemTipY;\n\n    // For flat beams, set the first and last Y to the offset, rather than\n    //  using the note's stem extents.\n    if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n      beamY = this.render_options.flat_beam_offset;\n    }\n    return beamY;\n  }\n\n  // Create new stems for the notes in the beam, so that each stem\n  // extends into the beams.\n  applyStemExtensions() {\n    const {\n      notes, slope, y_shift, stem_direction, beam_count,\n      render_options: {\n        show_stemlets,\n        stemlet_extension,\n        beam_width,\n      },\n    } = this;\n\n    const firstNote = notes[0];\n    const firstStemTipY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n\n    for (let i = 0; i < notes.length; ++i) {\n      const note = notes[i];\n      const stemX = note.getStemX();\n      const { topY: stemTipY } = note.getStemExtents();\n      const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n      const preBeamExtension = note.getStem().getExtension();\n      const beamExtension = stem_direction === Stem.UP\n        ? stemTipY - beamedStemTipY\n        : beamedStemTipY - stemTipY;\n\n      note.stem.setExtension(preBeamExtension + beamExtension);\n      note.stem.renderHeightAdjustment = -Stem.WIDTH / 2;\n\n      if (note.isRest() && show_stemlets) {\n        const beamWidth = beam_width;\n        const totalBeamWidth = ((beam_count - 1) * beamWidth * 1.5) + beamWidth;\n        note.stem\n          .setVisibility(true)\n          .setStemlet(true, totalBeamWidth + stemlet_extension);\n      }\n    }\n  }\n\n  // return upper level beam direction.\n  lookupBeamDirection(duration, prev_tick, tick, next_tick) {\n    if (duration === '4') {\n      return BEAM_LEFT;\n    }\n\n    const lookup_duration =  `${Flow.durationToNumber(duration) / 2}`;\n    const prev_note_gets_beam = prev_tick < Flow.durationToTicks(lookup_duration);\n    const next_note_gets_beam = next_tick < Flow.durationToTicks(lookup_duration);\n    const note_gets_beam = tick < Flow.durationToTicks(lookup_duration);\n\n    if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_BOTH;\n    } else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n      return BEAM_LEFT;\n    } else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n      return BEAM_RIGHT;\n    }\n\n    return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick);\n  }\n\n  // Get the x coordinates for the beam lines of specific `duration`\n  getBeamLines(duration) {\n    const tick_of_duration = Flow.durationToTicks(duration);\n    const beam_lines = [];\n    let beam_started = false;\n    let current_beam = null;\n    const partial_beam_length = this.render_options.partial_beam_length;\n    let previous_should_break = false;\n    let tick_tally = 0;\n    for (let i = 0; i < this.notes.length; ++i) {\n      const note = this.notes[i];\n\n      // See if we need to break secondary beams on this note.\n      const ticks = note.ticks.value();\n      tick_tally += ticks;\n      let should_break = false;\n\n      // 8th note beams are always drawn.\n      if (parseInt(duration, 10) >= 8) {\n        // First, check to see if any indices were set up through breakSecondaryAt()\n        should_break = this.break_on_indices.indexOf(i) !== -1;\n\n        // If the secondary breaks were auto-configured in the render options,\n        //  handle that as well.\n        if (this.render_options.secondary_break_ticks && tick_tally >=\n          this.render_options.secondary_break_ticks) {\n          tick_tally = 0;\n          should_break = true;\n        }\n      }\n      const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n\n      const stem_x = note.getStemX() - (Stem.WIDTH / 2);\n\n      // Check to see if the next note in the group will get a beam at this\n      //  level. This will help to inform the partial beam logic below.\n      const prev_note = this.notes[i - 1];\n      const next_note = this.notes[i + 1];\n      const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n      const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n      const beam_alone = prev_note && next_note &&\n      note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n      if (note_gets_beam) {\n        // This note gets a beam at the current level\n        if (beam_started) {\n          // We're currently in the middle of a beam. Just continue it on to\n          //  the stem X of the current note.\n          current_beam = beam_lines[beam_lines.length - 1];\n          current_beam.end = stem_x;\n\n          // If a secondary beam break is set up, end the beam right now.\n          if (should_break) {\n            beam_started = false;\n            if (next_note && !next_note_gets_beam && current_beam.end === null) {\n              // This note gets a beam,.but the next one does not. This means\n              //  we need a partial pointing right.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          }\n        } else {\n          // No beam started yet. Start a new one.\n          current_beam = { start: stem_x, end: null };\n          beam_started = true;\n\n          if (beam_alone) {\n            // previous and next beam exists and does not get a beam but current gets it.\n            const prev_tick = prev_note.getIntrinsicTicks();\n            const next_tick = next_note.getIntrinsicTicks();\n            const tick = note.getIntrinsicTicks();\n            const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick);\n\n            if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n              current_beam.end = current_beam.start - partial_beam_length;\n            } else {\n              current_beam.end = current_beam.start + partial_beam_length;\n            }\n          } else if (!next_note_gets_beam) {\n            // The next note doesn't get a beam. Draw a partial.\n            if ((previous_should_break || i === 0) && next_note) {\n              // This is the first note (but not the last one), or it is\n              //  following a secondary break. Draw a partial to the right.\n              current_beam.end = current_beam.start + partial_beam_length;\n            } else {\n              // By default, draw a partial to the left.\n              current_beam.end = current_beam.start - partial_beam_length;\n            }\n          } else if (should_break) {\n            // This note should have a secondary break after it. Even though\n            //  we just started a beam, it needs to end immediately.\n            current_beam.end = current_beam.start - partial_beam_length;\n            beam_started = false;\n          }\n          beam_lines.push(current_beam);\n        }\n      } else {\n        // The current note does not get a beam.\n        beam_started = false;\n      }\n\n      // Store the secondary break flag to inform the partial beam logic in\n      //  the next iteration of the loop.\n      previous_should_break = should_break;\n    }\n\n    // Add a partial beam pointing left if this is the last note in the group\n    const last_beam = beam_lines[beam_lines.length - 1];\n    if (last_beam && last_beam.end === null) {\n      last_beam.end = last_beam.start - partial_beam_length;\n    }\n    return beam_lines;\n  }\n\n  // Render the stems for each notes\n  drawStems() {\n    this.notes.forEach(note => {\n      if (note.getStem()) {\n        note.getStem().setContext(this.context).draw();\n      }\n    }, this);\n  }\n\n  // Render the beam lines\n  drawBeamLines() {\n    this.checkContext();\n\n    const valid_beam_durations = ['4', '8', '16', '32', '64'];\n\n    const firstNote = this.notes[0];\n    let beamY = this.getBeamYToDraw();\n    const firstStemX = firstNote.getStemX();\n    const beamThickness = this.render_options.beam_width * this.stem_direction;\n\n    // Draw the beams.\n    for (let i = 0; i < valid_beam_durations.length; ++i) {\n      const duration = valid_beam_durations[i];\n      const beamLines = this.getBeamLines(duration);\n\n      for (let j = 0; j < beamLines.length; ++j) {\n        const beam_line = beamLines[j];\n        const startBeamX = beam_line.start;\n\n        const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n        const lastBeamX = beam_line.end;\n        const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n\n        this.context.beginPath();\n        this.context.moveTo(startBeamX, startBeamY);\n        this.context.lineTo(startBeamX, startBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n        this.context.lineTo(lastBeamX + 1, lastBeamY);\n        this.context.closePath();\n        this.context.fill();\n      }\n\n      beamY += beamThickness * 1.5;\n    }\n  }\n\n  // Pre-format the beam\n  preFormat() { return this; }\n\n  // Post-format the beam. This can only be called after\n  // the notes in the beam have both `x` and `y` values. ie: they've\n  // been formatted and have staves\n  postFormat() {\n    if (this.postFormatted) return;\n\n    // Calculate a smart slope if we're not forcing the beams to be flat.\n    if (this.notes[0].getCategory() === 'tabnotes' || this.render_options.flat_beams) {\n      this.calculateFlatSlope();\n    } else {\n      this.calculateSlope();\n    }\n    this.applyStemExtensions();\n\n    this.postFormatted = true;\n  }\n\n  // Render the beam to the canvas context\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    if (this.unbeamable) return;\n\n    if (!this.postFormatted) {\n      this.postFormat();\n    }\n\n    this.drawStems();\n    this.applyStyle();\n    this.drawBeamLines();\n    this.restoreStyle();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Voice extends Element {\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  static get Mode() {\n    return {\n      STRICT: 1,\n      SOFT: 2,\n      FULL: 3,\n    };\n  }\n\n  constructor(time) {\n    super();\n    this.setAttribute('type', 'Voice');\n\n    // Time signature shortcut: \"4/4\", \"3/8\", etc.\n    if (typeof(time) === 'string') {\n      const match = time.match(/(\\d+)\\/(\\d+)/);\n      if (match) {\n        time = {\n          num_beats: match[1],\n          beat_value: match[2],\n          resolution: Flow.RESOLUTION,\n        };\n      }\n    }\n\n    // Default time sig is 4/4\n    this.time = Vex.Merge({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }, time);\n\n    // Recalculate total ticks.\n    this.totalTicks = new Fraction(\n      this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n    this.resolutionMultiplier = 1;\n\n    // Set defaults\n    this.tickables = [];\n    this.ticksUsed = new Fraction(0, 1);\n    this.smallestTickCount = this.totalTicks.clone();\n    this.largestTickWidth = 0;\n    this.stave = null;\n    // Do we care about strictly timed notes\n    this.mode = Voice.Mode.STRICT;\n\n    // This must belong to a VoiceGroup\n    this.voiceGroup = null;\n  }\n\n  // Get the total ticks in the voice\n  getTotalTicks() { return this.totalTicks; }\n\n  // Get the total ticks used in the voice by all the tickables\n  getTicksUsed() { return this.ticksUsed; }\n\n  // Get the largest width of all the tickables\n  getLargestTickWidth() { return this.largestTickWidth; }\n\n  // Get the tick count for the shortest tickable\n  getSmallestTickCount() { return this.smallestTickCount; }\n\n  // Get the tickables in the voice\n  getTickables() { return this.tickables; }\n\n  // Get/set the voice mode, use a value from `Voice.Mode`\n  getMode() { return this.mode; }\n  setMode(mode) { this.mode = mode; return this; }\n\n  // Get the resolution multiplier for the voice\n  getResolutionMultiplier() { return this.resolutionMultiplier; }\n\n  // Get the actual tick resolution for the voice\n  getActualResolution() { return this.resolutionMultiplier * this.time.resolution; }\n\n  // Set the voice's stave\n  setStave(stave) {\n    this.stave = stave;\n    this.boundingBox = null; // Reset bounding box so we can reformat\n    return this;\n  }\n\n  // Get the bounding box for the voice\n  getBoundingBox() {\n    let stave;\n    let boundingBox;\n    let bb;\n    let i;\n\n    if (!this.boundingBox) {\n      if (!this.stave) throw new Vex.RERR('NoStave', \"Can't get bounding box without stave.\");\n      stave = this.stave;\n      boundingBox = null;\n\n      for (i = 0; i < this.tickables.length; ++i) {\n        this.tickables[i].setStave(stave);\n\n        bb = this.tickables[i].getBoundingBox();\n        if (!bb) continue;\n\n        boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n      }\n\n      this.boundingBox = boundingBox;\n    }\n    return this.boundingBox;\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoiceGroup() {\n    if (!this.voiceGroup) {\n      throw new Vex.RERR('NoVoiceGroup', 'No voice group for voice.');\n    }\n\n    return this.voiceGroup;\n  }\n\n  // Set the voice group\n  setVoiceGroup(g) { this.voiceGroup = g; return this; }\n\n  // Set the voice mode to strict or soft\n  setStrict(strict) {\n    this.mode = strict ? Voice.Mode.STRICT : Voice.Mode.SOFT;\n    return this;\n  }\n\n  // Determine if the voice is complete according to the voice mode\n  isComplete() {\n    if (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) {\n      return this.ticksUsed.equals(this.totalTicks);\n    } else {\n      return true;\n    }\n  }\n\n  // Add a tickable to the voice\n  addTickable(tickable) {\n    if (!tickable.shouldIgnoreTicks()) {\n      const ticks = tickable.getTicks();\n\n      // Update the total ticks for this line.\n      this.ticksUsed.add(ticks);\n\n      if (\n        (this.mode === Voice.Mode.STRICT || this.mode === Voice.Mode.FULL) &&\n        this.ticksUsed.greaterThan(this.totalTicks)\n      ) {\n        this.ticksUsed.subtract(ticks);\n        throw new Vex.RERR('BadArgument', 'Too many ticks.');\n      }\n\n      // Track the smallest tickable for formatting.\n      if (ticks.lessThan(this.smallestTickCount)) {\n        this.smallestTickCount = ticks.clone();\n      }\n\n      this.resolutionMultiplier = this.ticksUsed.denominator;\n\n      // Expand total ticks using denominator from ticks used.\n      this.totalTicks.add(0, this.ticksUsed.denominator);\n    }\n\n    // Add the tickable to the line.\n    this.tickables.push(tickable);\n    tickable.setVoice(this);\n    return this;\n  }\n\n  // Add an array of tickables to the voice.\n  addTickables(tickables) {\n    for (let i = 0; i < tickables.length; ++i) {\n      this.addTickable(tickables[i]);\n    }\n\n    return this;\n  }\n\n  // Preformats the voice by applying the voice's stave to each note.\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    this.tickables.forEach((tickable) => {\n      if (!tickable.getStave()) {\n        tickable.setStave(this.stave);\n      }\n    });\n\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Render the voice onto the canvas `context` and an optional `stave`.\n  // If `stave` is omitted, it is expected that the notes have staves\n  // already set.\n  draw(context = this.context, stave = this.stave) {\n    this.setRendered();\n    let boundingBox = null;\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n\n      // Set the stave if provided\n      if (stave) tickable.setStave(stave);\n\n      if (!tickable.getStave()) {\n        throw new Vex.RuntimeError(\n          'MissingStave', 'The voice cannot draw tickables without staves.'\n        );\n      }\n\n      if (i === 0) boundingBox = tickable.getBoundingBox();\n\n      if (i > 0 && boundingBox) {\n        const tickable_bb = tickable.getBoundingBox();\n        if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n      }\n\n      tickable.setContext(context);\n      tickable.drawWithStyle();\n    }\n\n    this.boundingBox = boundingBox;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Glyph } from './glyph';\n\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n  if (\n    type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n    type !== StaveConnector.type.BOLD_DOUBLE_RIGHT\n  ) {\n    throw new Vex.RERR(\n      'InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.'\n    );\n  }\n\n  let x_shift = 3;\n  let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n  const thickLineOffset = 2; // For aesthetics\n\n  if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n    x_shift = -5; // Flips the side of the thin line\n    variableWidth = 3;\n  }\n\n  // Thin line\n  ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n  // Thick line\n  ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n\nexport class StaveConnector extends Element {\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  static get type() {\n    return {\n      SINGLE_RIGHT: 0,\n      SINGLE_LEFT: 1,\n      SINGLE: 1,\n      DOUBLE: 2,\n      BRACE: 3,\n      BRACKET: 4,\n      BOLD_DOUBLE_LEFT: 5,\n      BOLD_DOUBLE_RIGHT: 6,\n      THIN_DOUBLE: 7,\n      NONE: 8,\n    };\n  }\n\n  static get typeString() {\n    return {\n      singleRight: StaveConnector.type.SINGLE_RIGHT,\n      singleLeft: StaveConnector.type.SINGLE_LEFT,\n      single: StaveConnector.type.SINGLE,\n      double: StaveConnector.type.DOUBLE,\n      brace: StaveConnector.type.BRACE,\n      bracket: StaveConnector.type.BRACKET,\n      boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n      boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n      thinDouble: StaveConnector.type.THIN_DOUBLE,\n      none: StaveConnector.type.NONE,\n    };\n  }\n\n  constructor(top_stave, bottom_stave) {\n    super();\n    this.setAttribute('type', 'StaveConnector');\n\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n    this.width = 3;\n    this.top_stave = top_stave;\n    this.bottom_stave = bottom_stave;\n    this.type = StaveConnector.type.DOUBLE;\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n    // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n    // 2. Offset BRACE type not to overlap with another StaveConnector\n    this.x_shift = 0;\n    this.texts = [];\n  }\n\n  setType(type) {\n    type = typeof(type) === 'string'\n      ? StaveConnector.typeString[type]\n      : type;\n\n    if (type >= StaveConnector.type.SINGLE_RIGHT && type <= StaveConnector.type.NONE) {\n      this.type = type;\n    }\n    return this;\n  }\n\n  setText(text, options) {\n    this.texts.push({\n      content: text,\n      options: Vex.Merge({ shift_x: 0, shift_y: 0 }, options),\n    });\n    return this;\n  }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setXShift(x_shift) {\n    if (typeof x_shift !== 'number') {\n      throw Vex.RERR('InvalidType', 'x_shift must be a Number');\n    }\n\n    this.x_shift = x_shift;\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n    ctx.openGroup('stave-connector');\n    \n    this.setRendered();\n\n    let topY = this.top_stave.getYForLine(0);\n    let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n      this.thickness;\n    let width = this.width;\n    let topX = this.top_stave.getX();\n\n    const isRightSidedConnector = (\n      this.type === StaveConnector.type.SINGLE_RIGHT ||\n      this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n      this.type === StaveConnector.type.THIN_DOUBLE\n    );\n\n    if (isRightSidedConnector) {\n      topX = this.top_stave.getX() + this.top_stave.width;\n    }\n\n    let attachment_height = botY - topY;\n    switch (this.type) {\n      case StaveConnector.type.SINGLE:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_LEFT:\n        width = 1;\n        break;\n      case StaveConnector.type.SINGLE_RIGHT:\n        width = 1;\n        break;\n      case StaveConnector.type.DOUBLE:\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BRACE: {\n        width = 12;\n        // May need additional code to draw brace\n        const x1 = this.top_stave.getX() - 2 + this.x_shift;\n        const y1 = topY;\n        const x3 = x1;\n        const y3 = botY;\n        const x2 = x1 - width;\n        const y2 = y1 + attachment_height / 2.0;\n        const cpx1 = x2 - (0.90 * width);\n        const cpy1 = y1 + (0.2 * attachment_height);\n        const cpx2 = x1 + (1.10 * width);\n        const cpy2 = y2 - (0.135 * attachment_height);\n        const cpx3 = cpx2;\n        const cpy3 = y2 + (0.135 * attachment_height);\n        const cpx4 = cpx1;\n        const cpy4 = y3 - (0.2 * attachment_height);\n        const cpx5 = x2 - width;\n        const cpy5 = cpy4;\n        const cpx6 = x1 + (0.40 * width);\n        const cpy6 = y2 + (0.135 * attachment_height);\n        const cpx7 = cpx6;\n        const cpy7 = y2 - (0.135 * attachment_height);\n        const cpx8 = cpx5;\n        const cpy8 = cpy1;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n        ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n        ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n        ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n        ctx.fill();\n        ctx.stroke();\n        break;\n      } case StaveConnector.type.BRACKET:\n        topY -= 4;\n        botY += 4;\n        attachment_height = botY - topY;\n        Glyph.renderGlyph(ctx, topX - 5, topY - 3, 40, 'v1b', true);\n        Glyph.renderGlyph(ctx, topX - 5, botY + 3, 40, 'v10', true);\n        topX -= (this.width + 2);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_LEFT:\n        drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY);\n        break;\n      case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n        drawBoldDoubleLine(ctx, this.type, topX, topY, botY);\n        break;\n      case StaveConnector.type.THIN_DOUBLE:\n        width = 1;\n        break;\n      case StaveConnector.type.NONE:\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidType', `The provided StaveConnector.type (${this.type}) is invalid`\n        );\n    }\n\n    if (\n      this.type !== StaveConnector.type.BRACE &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n      this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n      this.type !== StaveConnector.type.NONE\n    ) {\n      ctx.fillRect(topX, topY, width, attachment_height);\n    }\n\n    // If the connector is a thin double barline, draw the paralell line\n    if (this.type === StaveConnector.type.THIN_DOUBLE) {\n      ctx.fillRect(topX - 3, topY, width, attachment_height);\n    }\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Add stave connector text\n    for (let i = 0; i < this.texts.length; i++) {\n      const text = this.texts[i];\n      const text_width = ctx.measureText('' + text.content).width;\n      const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n      const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n        text.options.shift_y;\n\n      ctx.fillText('' + text.content, x, y + 4);\n    }\n    ctx.restore();\n    ctx.closeGroup();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\n\nexport class Tickable extends Element {\n  constructor() {\n    super();\n    this.setAttribute('type', 'Tickable');\n\n    // These properties represent the duration of\n    // this tickable element.\n    this.ticks = new Fraction(0, 1); // 分数\n    this.intrinsicTicks = 0;\n    this.tickMultiplier = new Fraction(1, 1);\n\n    this.width = 0;\n    this.x_shift = 0; // Shift from tick context\n    this.voice = null;\n    this.tickContext = null;\n    this.modifierContext = null;\n    this.modifiers = [];\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.tuplet = null;\n    this.tupletStack = [];\n\n    this.align_center = false;\n    this.center_x_shift = 0; // Shift from tick context if center aligned\n\n    // This flag tells the formatter to ignore this tickable during\n    // formatting and justification. It is set by tickables such as BarNote.\n    this.ignore_ticks = false;\n\n    // This is a space for an external formatting class or function to maintain\n    // metrics.\n    this.formatterMetrics = {\n      // The freedom of a tickable is the distance it can move without colliding\n      // with neighboring elements. A formatter can set these values during its\n      // formatting pass, which a different formatter can then use to fine tune.\n      freedom: { left: 0, right: 0 },\n\n      // The simplified rational duration of this tick as a string. It can be\n      // used as an index to a map or hashtable.\n      duration: '',\n\n      // The number of formatting iterations undergone.\n      iterations: 0,\n\n      // The space in pixels allocated by this formatter, along with the mean space\n      // for tickables of this duration, and the deviation from the mean.\n      space: {\n        used: 0,\n        mean: 0,\n        deviation: 0,\n      },\n    };\n  }\n\n  reset() { return this; }\n  getTicks() { return this.ticks; }\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n  getWidth() { return this.width; }\n\n  getFormatterMetrics() { return this.formatterMetrics; }\n\n  setXShift(x) { this.x_shift = x; }\n  getCenterXShift() {\n    if (this.isCenterAligned()) {\n      return this.center_x_shift;\n    }\n\n    return 0;\n  }\n  isCenterAligned() { return this.align_center; }\n  setCenterAlignment(align_center) {\n    this.align_center = align_center;\n    return this;\n  }\n\n  // Every tickable must be associated with a voice. This allows formatters\n  // and preFormatter to associate them with the right modifierContexts.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Tickable has no voice.');\n    return this.voice;\n  }\n  setVoice(voice) { this.voice = voice; }\n  getTuplet() { return this.tuplet; }\n\n  /*\n   * resetTuplet\n   * @param tuplet -- the specific tuplet to reset\n   *   if this is not provided, all tuplets are reset.\n   * @returns this\n   *\n   * Removes any prior tuplets from the tick calculation and\n   * resets the intrinsic tick value to\n   */\n  resetTuplet(tuplet) {\n    let noteCount;\n    let notesOccupied;\n    if (tuplet) {\n      const i = this.tupletStack.indexOf(tuplet);\n      if (i !== -1) {\n        this.tupletStack.splice(i, 1);\n        noteCount = tuplet.getNoteCount();\n        notesOccupied = tuplet.getNotesOccupied();\n\n        // Revert old multiplier by inverting numerator & denom.:\n        this.applyTickMultiplier(noteCount, notesOccupied);\n      }\n      return this;\n    }\n\n    while (this.tupletStack.length) {\n      tuplet = this.tupletStack.pop();\n      noteCount = tuplet.getNoteCount();\n      notesOccupied = tuplet.getNotesOccupied();\n\n      // Revert old multiplier by inverting numerator & denom.:\n      this.applyTickMultiplier(noteCount, notesOccupied);\n    }\n    return this;\n  }\n\n  setTuplet(tuplet) {\n    // Attach to new tuplet\n\n    if (tuplet) {\n      this.tupletStack.push(tuplet);\n\n      const noteCount = tuplet.getNoteCount();\n      const notesOccupied = tuplet.getNotesOccupied();\n\n      this.applyTickMultiplier(notesOccupied, noteCount);\n    }\n\n    this.tuplet = tuplet;\n\n    return this;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addToModifierContext(mc) {\n    this.modifierContext = mc;\n    // Add modifiers to modifier context (if any)\n    this.preFormatted = false;\n  }\n\n  /** optional, if tickable has modifiers **/\n  addModifier(mod) {\n    this.modifiers.push(mod);\n    this.preFormatted = false;\n    return this;\n  }\n  getModifiers() {\n    return this.modifiers;\n  }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n  }\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.width = 0;\n    if (this.modifierContext) {\n      this.modifierContext.preFormat();\n      this.width += this.modifierContext.getWidth();\n    }\n  }\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n  getIntrinsicTicks() {\n    return this.intrinsicTicks;\n  }\n  setIntrinsicTicks(intrinsicTicks) {\n    this.intrinsicTicks = intrinsicTicks;\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  getTickMultiplier() {\n    return this.tickMultiplier;\n  }\n  applyTickMultiplier(numerator, denominator) {\n    this.tickMultiplier.multiply(numerator, denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n  }\n  setDuration(duration) {\n    const ticks = duration.numerator * (Flow.RESOLUTION / duration.denominator);\n    this.ticks = this.tickMultiplier.clone().multiply(ticks);\n    this.intrinsicTicks = this.ticks.value();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Tickable } from './tickable';\n\nexport class Note extends Tickable {\n  static get CATEGORY() { return 'note'; }\n  static get STAVEPADDING() { return 12; }\n\n  // Debug helper. Displays various note metrics for the given\n  // note.\n  static plotMetrics(ctx, note, yPos) {\n    const metrics = note.getMetrics();\n    const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n    const xPre1 = note.getAbsoluteX() - metrics.extraLeftPx;\n    const xAbs = note.getAbsoluteX();\n    const xPost1 = note.getAbsoluteX() + metrics.noteWidth;\n    const xPost2 = note.getAbsoluteX() + metrics.noteWidth + metrics.extraRightPx;\n    const xEnd = note.getAbsoluteX()\n      + metrics.noteWidth\n      + metrics.extraRightPx\n      + metrics.modRightPx;\n    const xFreedomRight = xEnd + note.getFormatterMetrics().freedom.right;\n\n    const xWidth = xEnd - xStart;\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n    ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n\n    const y = (yPos + 7);\n    function stroke(x1, x2, color, yy = y) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(3);\n      ctx.moveTo(x1 + note.getXShift(), yy);\n      ctx.lineTo(x2 + note.getXShift(), yy);\n      ctx.stroke();\n    }\n\n    stroke(xStart, xPre1, 'red');\n    stroke(xPre1, xAbs, '#999');\n    stroke(xAbs, xPost1, 'green');\n    stroke(xPost1, xPost2, '#999');\n    stroke(xPost2, xEnd, 'red');\n    stroke(xEnd, xFreedomRight, '#DD0');\n    stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n    Vex.drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n\n    const formatterMetrics = note.getFormatterMetrics();\n    if (formatterMetrics.iterations > 0) {\n      const spaceDeviation = formatterMetrics.space.deviation;\n      const prefix = spaceDeviation >= 0 ? '+' : '';\n      ctx.setFillStyle('red');\n      ctx.fillText(prefix + Math.round(spaceDeviation),\n        xAbs + note.getXShift(), yPos - 10);\n    }\n    ctx.restore();\n  }\n\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  // To create a new note you need to provide a `note_struct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  constructor(note_struct) {\n    super();\n    this.setAttribute('type', 'Note');\n\n    if (!note_struct) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Note must have valid initialization data to identify duration and type.'\n      );\n    }\n\n    // Parse `note_struct` and get note properties.\n    const initData = Flow.parseNoteData(note_struct);\n    if (!initData) {\n      throw new Vex.RuntimeError(\n        'BadArguments', `Invalid note initialization object: ${JSON.stringify(note_struct)}`\n      );\n    }\n\n    // Set note properties from parameters.\n    this.duration = initData.duration;\n    this.dots = initData.dots;\n    this.noteType = initData.type;\n\n    if (note_struct.duration_override) {\n      // Custom duration\n      this.setDuration(note_struct.duration_override);\n    } else {\n      // Default duration\n      this.setIntrinsicTicks(initData.ticks);\n    }\n\n    this.modifiers = [];\n\n    // Get the glyph code for this note from the font.\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (this.positions && (typeof (this.positions) !== 'object' || !this.positions.length)) {\n      throw new Vex.RuntimeError('BadArguments', 'Note keys must be array type.');\n    }\n\n    // Note to play for audio players.\n    this.playNote = null;\n\n    // Positioning contexts used by the Formatter.\n    this.tickContext = null;    // The current tick context.\n    this.modifierContext = null;\n    this.ignore_ticks = false;\n\n    // Positioning variables\n    this.width = 0;             // Width in pixels calculated after preFormat\n    this.extraLeftPx = 0;       // Extra room on left for offset note head\n    this.extraRightPx = 0;      // Extra room on right for offset note head\n    this.x_shift = 0;           // X shift from tick context X\n    this.left_modPx = 0;        // Max width of left modifiers\n    this.right_modPx = 0;       // Max width of right modifiers\n    this.voice = null;          // The voice that this note is in\n    this.preFormatted = false;  // Is this note preFormatted?\n    this.ys = [];               // list of y coordinates for each note\n    // we need to hold on to these for ties and beams.\n\n    if (note_struct.align_center) {\n      this.setCenterAlignment(note_struct.align_center);\n    }\n\n    // The render surface.\n    this.stave = null;\n    this.render_options = {\n      annotation_spacing: 5,\n      stave_padding: Note.STAVEPADDING,\n    };\n  }\n\n  // Get and set the play note, which is arbitrary data that can be used by an\n  // audio player.\n  getPlayNote() { return this.playNote; }\n  setPlayNote(note) { this.playNote = note; return this; }\n\n  // Don't play notes by default, call them rests. This is also used by things like\n  // beams and dots for positioning.\n  isRest() { return false; }\n\n  // TODO(0xfe): Why is this method here?\n  addStroke(index, stroke) {\n    stroke.setNote(this);\n    stroke.setIndex(index);\n    this.modifiers.push(stroke);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get and set the target stave.\n  getStave() { return this.stave; }\n  setStave(stave) {\n    this.stave = stave;\n    this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // `Note` is not really a modifier, but is used in\n  // a `ModifierContext`.\n  getCategory() { return Note.CATEGORY; }\n\n  // Set the rendering context for the note.\n  setContext(context) { this.context = context; return this; }\n\n  // Get and set spacing to the left and right of the notes.\n  getExtraLeftPx() { return this.extraLeftPx; }\n  getExtraRightPx() { return this.extraRightPx; }\n  setExtraLeftPx(x) { this.extraLeftPx = x; return this; }\n  setExtraRightPx(x) { this.extraRightPx = x; return this; }\n\n  // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n  shouldIgnoreTicks() { return this.ignore_ticks; }\n\n  // Get the stave line number for the note.\n  getLineNumber() { return 0; }\n\n  // Get the stave line number for rest.\n  getLineForRest() { return 0; }\n\n  // Get the glyph associated with this note.\n  getGlyph() { return this.glyph; }\n\n  getGlyphWidth() {\n    return this.glyph.getWidth(this.render_options.glyph_font_scale);\n  }\n\n  // Set and get Y positions for this note. Each Y value is associated with\n  // an individual pitch/key within the note/chord.\n  setYs(ys) { this.ys = ys; return this; }\n  getYs() {\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-values calculated for this note.');\n    }\n\n    return this.ys;\n  }\n\n  // Get the Y position of the space above the stave onto which text can\n  // be rendered.\n  getYForTopText(text_line) {\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', 'No stave attached to this note.');\n    }\n\n    return this.stave.getYForTopText(text_line);\n  }\n\n  // Get a `BoundingBox` for this note.\n  getBoundingBox() { return null; }\n\n  // Returns the voice that this note belongs in.\n  getVoice() {\n    if (!this.voice) throw new Vex.RERR('NoVoice', 'Note has no voice.');\n    return this.voice;\n  }\n\n  // Attach this note to `voice`.\n  setVoice(voice) {\n    this.voice = voice;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get and set the `TickContext` for this note.\n  getTickContext() { return this.tickContext; }\n  setTickContext(tc) {\n    this.tickContext = tc;\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Accessors for the note type.\n  getDuration() { return this.duration; }\n  isDotted() { return (this.dots > 0); }\n  hasStem() { return false; }\n  getDots() { return this.dots; }\n  getNoteType() { return this.noteType; }\n  setBeam() { return this; } // ignore parameters\n\n  // Attach this note to a modifier context.\n  setModifierContext(mc) { this.modifierContext = mc; return this; }\n\n  // Attach a modifier to this note.\n  addModifier(modifier, index = 0) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Get the coordinates for where modifiers begin.\n  getModifierStartXY() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    return {\n      x: this.getAbsoluteX(),\n      y: this.ys[0],\n    };\n  }\n\n  // Get bounds and metrics for this note.\n  //\n  // Returns a struct with fields:\n  // `width`: The total width of the note (including modifiers.)\n  // `noteWidth`: The width of the note head only.\n  // `left_shift`: The horizontal displacement of the note.\n  // `modLeftPx`: Start `X` for left modifiers.\n  // `modRightPx`: Start `X` for right modifiers.\n  // `extraLeftPx`: Extra space on left of note.\n  // `extraRightPx`: Extra space on right of note.\n  getMetrics() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n    }\n\n    let modLeftPx = 0;\n    let modRightPx = 0;\n    if (this.modifierContext != null) {\n      modLeftPx = this.modifierContext.state.left_shift;\n      modRightPx = this.modifierContext.state.right_shift;\n    }\n\n    const width = this.getWidth();\n    return {\n      width,\n      noteWidth: width - modLeftPx - modRightPx - this.extraLeftPx - this.extraRightPx,\n      left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n\n      // Modifiers, accidentals etc.\n      modLeftPx,\n      modRightPx,\n\n      // Displaced note head on left or right.\n      extraLeftPx: this.extraLeftPx,\n      extraRightPx: this.extraRightPx,\n    };\n  }\n\n  // Get and set width of note. Used by the formatter for positioning.\n  setWidth(width) { this.width = width; }\n  getWidth() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n    }\n\n    return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n  }\n\n  // Displace note by `x` pixels. Used by the formatter.\n  setXShift(x) { this.x_shift = x; return this; }\n  getXShift() { return this.x_shift; }\n\n  // Get `X` position of this tick context.\n  getX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    return this.tickContext.getX() + this.x_shift;\n  }\n\n  // Get the absolute `X` position of this note's tick context. This\n  // excludes x_shift, so you'll need to factor it in if you're\n  // looking for the post-formatted x-position.\n  getAbsoluteX() {\n    if (!this.tickContext) {\n      throw new Vex.RERR('NoTickContext', 'Note needs a TickContext assigned for an X-Value');\n    }\n\n    // Position note to left edge of tick context.\n    let x = this.tickContext.getX();\n    if (this.stave) {\n      x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n    }\n\n    if (this.isCenterAligned()) {\n      x += this.getCenterXShift();\n    }\n\n    return x;\n  }\n  setPreFormatted(value) {\n    this.preFormatted = value;\n\n    // Maintain the width of left and right modifiers in pixels.\n    if (this.preFormatted) {\n      const extra = this.tickContext.getExtraPx();\n      this.left_modPx = Math.max(this.left_modPx, extra.left);\n      this.right_modPx = Math.max(this.right_modPx, extra.right);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\nfunction L(...args) { if (NoteHead.DEBUG) Vex.L('Vex.Flow.NoteHead', args); }\n\n// Draw slashnote head manually. No glyph exists for this.\n//\n// Parameters:\n// * `ctx`: the Canvas context\n// * `duration`: the duration of the note. ex: \"4\"\n// * `x`: the x coordinate to draw at\n// * `y`: the y coordinate to draw at\n// * `stem_direction`: the direction of the stem\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n  const width = Flow.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Flow.STEM_WIDTH);\n\n  let fill = false;\n\n  if (Flow.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n\n  if (!fill) x -= (Flow.STEM_WIDTH / 2) * stem_direction;\n\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n\n  if (Flow.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n\n  ctx.restore();\n}\n\nexport class NoteHead extends Note {\n  static get CATEGORY() { return 'notehead'; }\n\n  constructor(head_options) {\n    super(head_options);\n    this.setAttribute('type', 'NoteHead');\n\n    this.index = head_options.index;\n    this.x = head_options.x || 0;\n    this.y = head_options.y || 0;\n    this.note_type = head_options.note_type;\n    this.duration = head_options.duration;\n    this.displaced = head_options.displaced || false;\n    this.stem_direction = head_options.stem_direction || StaveNote.STEM_UP;\n    this.line = head_options.line;\n\n    // Get glyph code based on duration and note type. This could be\n    // regular notes, rests, or other custom codes.\n    this.glyph = Flow.durationToGlyph(this.duration, this.note_type);\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `No glyph found for duration '${this.duration}' and type '${this.note_type}'`);\n    }\n\n    this.glyph_code = this.glyph.code_head;\n    this.x_shift = head_options.x_shift;\n    if (head_options.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = head_options.custom_glyph_code;\n    }\n\n    this.style = head_options.style;\n    this.slashed = head_options.slashed;\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads\n      glyph_font_scale: head_options.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: 3,\n    });\n\n    this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n  }\n\n  getCategory() { return NoteHead.CATEGORY; }\n\n  // Get the width of the notehead\n  getWidth() { return this.width; }\n\n  // Determine if the notehead is displaced\n  isDisplaced() { return this.displaced === true; }\n\n  // Get the glyph data\n  getGlyph() { return this.glyph; }\n\n  // Set the X coordinate\n  setX(x) { this.x = x; return this; }\n\n  // get/set the Y coordinate\n  getY() { return this.y; }\n  setY(y) { this.y = y;  return this; }\n\n  // Get/set the stave line the notehead is placed on\n  getLine() { return this.line; }\n  setLine(line) { this.line = line; return this; }\n\n  // Get the canvas `x` coordinate position of the notehead.\n  getAbsoluteX() {\n    // If the note has not been preformatted, then get the static x value\n    // Otherwise, it's been formatted and we should use it's x value relative\n    // to its tick context\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n\n    // For a more natural displaced notehead, we adjust the displacement amount\n    // by half the stem width in order to maintain a slight overlap with the stem\n    const displacementStemAdjustment = (Stem.WIDTH / 2);\n\n    return x + (this.displaced\n      ? (this.width - displacementStemAdjustment) * this.stem_direction\n      : 0\n    );\n  }\n\n  // Get the `BoundingBox` for the `NoteHead`\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const spacing = this.stave.getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n\n    return new Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n\n  // Set notehead to a provided `stave`\n  setStave(stave) {\n    const line = this.getLine();\n\n    this.stave = stave;\n    this.setY(stave.getYForNote(line));\n    this.context = this.stave.context;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    const width = this.getWidth() + this.extraLeftPx + this.extraRightPx;\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Draw the notehead\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const head_x = this.getAbsoluteX();\n    const y = this.y;\n\n    L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n    // Begin and end positions for head.\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n\n    if (this.style) {\n      this.applyStyle(ctx);\n    }\n\n    if (this.note_type === 's') {\n      const staveSpace = this.stave.getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n    }\n\n    if (this.style) {\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Stem } from './stem';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\n\nexport class StemmableNote extends Note {\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'StemmableNote');\n\n    this.stem = null;\n    this.stemExtensionOverride = null;\n    this.beam = null;\n  }\n\n  // Get and set the note's `Stem`\n  getStem() { return this.stem; }\n  setStem(stem) { this.stem = stem; return this; }\n\n  // Builds and sets a new stem\n  buildStem() {\n    const stem = new Stem();\n    this.setStem(stem);\n    return this;\n  }\n\n  buildFlag() {\n    const { glyph, beam } = this;\n    const shouldRenderFlag = beam === null;\n\n    if (glyph && glyph.flag && shouldRenderFlag) {\n      const flagCode = this.getStemDirection() === Stem.DOWN\n        ? glyph.code_flag_downstem\n        : glyph.code_flag_upstem;\n\n      this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale);\n    }\n  }\n\n  // Get the full length of stem\n  getStemLength() {\n    return Stem.HEIGHT + this.getStemExtension();\n  }\n\n  // Get the number of beams for this duration\n  getBeamCount() {\n    const glyph = this.getGlyph();\n\n    if (glyph) {\n      return glyph.beam_count;\n    } else {\n      return 0;\n    }\n  }\n\n  // Get the minimum length of stem\n  getStemMinumumLength() {\n    const frac = Flow.durationToFraction(this.duration);\n    let length = frac.value() <= 1 ? 0 : 20;\n    // if note is flagged, cannot shorten beam\n    switch (this.duration) {\n      case '8':\n        if (this.beam == null) length = 35;\n        break;\n      case '16':\n        length = this.beam == null ? 35 : 25;\n        break;\n      case '32':\n        length = this.beam == null ? 45 : 35;\n        break;\n      case '64':\n        length = this.beam == null ? 50 : 40;\n        break;\n      case '128':\n        length = this.beam == null ? 55 : 45;\n        break;\n      default:\n        break;\n    }\n    return length;\n  }\n\n  // Get/set the direction of the stem\n  getStemDirection() { return this.stem_direction; }\n  setStemDirection(direction) {\n    if (!direction) direction = Stem.UP;\n    if (direction !== Stem.UP && direction !== Stem.DOWN) {\n      throw new Vex.RERR('BadArgument', `Invalid stem direction: ${direction}`);\n    }\n\n    this.stem_direction = direction;\n    if (this.stem) {\n      this.stem.setDirection(direction);\n      this.stem.setExtension(this.getStemExtension());\n    }\n\n    this.reset();\n    if (this.flag) {\n      this.buildFlag();\n    }\n\n    this.beam = null;\n    if (this.preFormatted) {\n      this.preFormat();\n    }\n    return this;\n  }\n\n  // Get the `x` coordinate of the stem\n  getStemX() {\n    const x_begin = this.getAbsoluteX() + this.x_shift;\n    const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n    const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n    return stem_x;\n  }\n\n  // Get the `x` coordinate for the center of the glyph.\n  // Used for `TabNote` stems and stemlets over rests\n  getCenterGlyphX() {\n    return this.getAbsoluteX() + this.x_shift + (this.getGlyphWidth() / 2);\n  }\n\n  // Get the stem extension for the current duration\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stemExtensionOverride != null) {\n      return this.stemExtensionOverride;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.stem_up_extension\n        : glyph.stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Set the stem length to a specific. Will override the default length.\n  setStemLength(height) {\n    this.stemExtensionOverride = (height - Stem.HEIGHT);\n    return this;\n  }\n\n  // Get the top and bottom `y` values of the stem.\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Sets the current note's beam\n  setBeam(beam) { this.beam = beam; return this; }\n\n  // Get the `y` value for the top/bottom modifiers at a specific `textLine`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.min(\n        this.stave.getYForTopText(textLine),\n        extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n      );\n    } else {\n      return this.stave.getYForTopText(textLine);\n    }\n  }\n\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    if (this.hasStem()) {\n      return Math.max(\n        this.stave.getYForTopText(textLine),\n        extents.baseY + (this.render_options.annotation_spacing * (textLine))\n      );\n    } else {\n      return this.stave.getYForBottomText(textLine);\n    }\n  }\n\n  hasFlag() {\n    return Flow.durationToGlyph(this.duration).flag && !this.beam;\n  }\n\n  // Post format the note\n  postFormat() {\n    if (this.beam) this.beam.postFormat();\n\n    this.postFormatted = true;\n\n    return this;\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stem_struct) {\n    this.checkContext();\n    this.setRendered();\n\n    this.setStem(new Stem(stem_struct));\n    this.stem.setContext(this.context).draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) Vex.L('Vex.Flow.Modifier', args); }\n\nexport class Modifier extends Element {\n  static get CATEGORY() { return 'none'; }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      above: Modifier.Position.ABOVE,\n      below: Modifier.Position.BELOW,\n      left: Modifier.Position.LEFT,\n      right: Modifier.Position.RIGHT,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'Modifier');\n\n    this.width = 0;\n\n    // Modifiers are attached to a note and an index. An index is a\n    // specific head in a chord.\n    this.note = null;\n    this.index = null;\n\n    // The `text_line` is reserved space above or below a stave.\n    this.text_line = 0;\n    this.position = Modifier.Position.LEFT;\n    this.modifier_context = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.spacingFromNextModifier = 0;\n  }\n\n  // Every modifier has a category. The `ModifierContext` uses this to determine\n  // the type and order of the modifiers.\n  getCategory() { return Modifier.CATEGORY; }\n\n  // Get and set modifier widths.\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n\n  // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n\n  // Get and set note index, which is a specific note in a chord.\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  // Every modifier must be part of a `ModifierContext`.\n  getModifierContext() { return this.modifier_context; }\n  setModifierContext(c) { this.modifier_context = c; return this; }\n\n  // Get and set articulation position.\n  getPosition() { return this.position; }\n  setPosition(position) {\n    this.position = typeof(position) === 'string'\n      ? Modifier.PositionString[position]\n      : position;\n    return this;\n  }\n\n  // Set the `text_line` for the modifier.\n  setTextLine(line) { this.text_line = line; return this; }\n\n  // Shift modifier down `y` pixels. Negative values shift up.\n  setYShift(y) { this.y_shift = y; return this; }\n\n  setSpacingFromNextModifier(x) {\n    this.spacingFromNextModifier = x;\n  }\n\n  getSpacingFromNextModifier() { return this.spacingFromNextModifier; }\n\n  // Shift modifier `x` pixels in the direction of the modifier. Negative values\n  // shift reverse.\n  setXShift(x) {\n    this.x_shift = 0;\n    if (this.position === Modifier.Position.LEFT) {\n      this.x_shift -= x;\n    } else {\n      this.x_shift += x;\n    }\n  }\n  getXShift() { return this.x_shift; }\n\n  // Render the modifier onto the canvas.\n  draw() {\n    this.checkContext();\n    throw new Vex.RERR('MethodNotImplemented', 'draw() not implemented for this modifier.');\n  }\n\n  // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n  alignSubNotesWithNote(subNotes, note) {\n    // Shift over the tick contexts of each note\n    const tickContext = note.getTickContext();\n    const extraPx = tickContext.getExtraPx();\n    const subNoteXOffset = tickContext.getX() - extraPx.left - extraPx.extraLeft\n      + this.getSpacingFromNextModifier();\n\n    subNotes.forEach((subNote) => {\n      const subTickContext = subNote.getTickContext();\n      subNote.setStave(note.stave);\n      subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n    });\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\n\nexport class Dot extends Modifier {\n  static get CATEGORY() { return 'dots'; }\n\n  // Arrange dots inside a ModifierContext.\n  static format(dots, state) {\n    const right_shift = state.right_shift;\n    const dot_spacing = 1;\n\n    if (!dots || dots.length === 0) return false;\n\n    const dot_list = [];\n    const max_shift_map = {};\n    for (let i = 0; i < dots.length; ++i) {\n      const dot = dots[i];\n      const note = dot.getNote();\n\n      let props;\n      let shift;\n      // Only StaveNote has .getKeyProps()\n      if (typeof note.getKeyProps === 'function') {\n        props = note.getKeyProps()[dot.getIndex()];\n        shift = (props.displaced ? note.getExtraRightPx() : 0);\n      } else { // Else it's a TabNote\n        props = { line: 0.5 }; // Shim key props for dot placement\n        shift = 0;\n      }\n\n      const note_id = note.getAttribute('id');\n      dot_list.push({ line: props.line, note, note_id, dot });\n      max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n    }\n\n    // Sort dots by line number.\n    dot_list.sort((a, b) => b.line - a.line);\n\n    let dot_shift = right_shift;\n    let x_width = 0;\n    let last_line = null;\n    let last_note = null;\n    let prev_dotted_space = null;\n    let half_shiftY = 0;\n\n    for (let i = 0; i < dot_list.length; ++i) {\n      const { dot, note, note_id, line } = dot_list[i];\n\n      // Reset the position of the dot every line.\n      if (line !== last_line || note !== last_note) {\n        dot_shift = max_shift_map[note_id];\n      }\n\n      if (!note.isRest() && line !== last_line) {\n        if (Math.abs(line % 1) === 0.5) {\n          // note is on a space, so no dot shift\n          half_shiftY = 0;\n        } else {\n          // note is on a line, so shift dot to space above the line\n          half_shiftY = 0.5;\n          if (last_note != null &&\n              !last_note.isRest() && last_line - line === 0.5) {\n            // previous note on a space, so shift dot to space below the line\n            half_shiftY = -0.5;\n          } else if (line + half_shiftY === prev_dotted_space) {\n            // previous space is dotted, so shift dot to space below the line\n            half_shiftY = -0.5;\n          }\n        }\n      }\n\n      // convert half_shiftY to a multiplier for dots.draw()\n      if (note.isRest()) {\n        dot.dot_shiftY += -half_shiftY;\n      } else {\n        dot.dot_shiftY = -half_shiftY;\n      }\n      prev_dotted_space = line + half_shiftY;\n\n      dot.setXShift(dot_shift);\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\n      last_line = line;\n      last_note = note;\n    }\n\n    // Update state.\n    state.right_shift += x_width;\n    return true;\n  }\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.setAttribute('type', 'Dot');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.RIGHT;\n\n    this.radius = 2;\n    this.setWidth(5);\n    this.dot_shiftY = 0;\n  }\n\n  getCategory() { return Dot.CATEGORY; }\n\n  setNote(note) {\n    this.note = note;\n\n    if (this.note.getCategory() === 'gracenotes') {\n      this.radius *= 0.50;\n      this.setWidth(3);\n    }\n  }\n\n  setDotShiftY(y) { this.dot_shiftY = y; return this; }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.note || this.index === null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw dot without a note and index.\");\n    }\n\n    const lineSpace = this.note.stave.options.spacing_between_lines_px;\n\n    const start = this.note.getModifierStartXY(this.position, this.index,\n      { forceFlagRight: true });\n\n    // Set the starting y coordinate to the base of the stem for TabNotes\n    if (this.note.getCategory() === 'tabnotes') {\n      start.y = this.note.getStemExtents().baseY;\n    }\n\n    const x = (start.x + this.x_shift) + this.width - this.radius;\n    const y = start.y + this.y_shift + (this.dot_shiftY * lineSpace);\n    const ctx = this.context;\n\n    ctx.beginPath();\n    ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n    ctx.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { BoundingBox } from './boundingbox';\nimport { Stem } from './stem';\nimport { NoteHead } from './notehead';\nimport { StemmableNote } from './stemmablenote';\nimport { Modifier } from './modifier';\nimport { Dot } from './dot';\n\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\nfunction L(...args) { if (StaveNote.DEBUG) Vex.L('Vex.Flow.StaveNote', args); }\n\nconst getStemAdjustment = (note) => Stem.WIDTH / (2 * -note.getStemDirection());\n\nconst isInnerNoteIndex = (note, index) =>\n  index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n  const delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n  rest.line += delta;\n  rest.maxLine += delta;\n  rest.minLine += delta;\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n}\n\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n  const delta = rest.line - Vex.MidLine(noteU.minLine, noteL.maxLine);\n  rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n  rest.line -= delta;\n  rest.maxLine -= delta;\n  rest.minLine -= delta;\n}\n\nexport class StaveNote extends StemmableNote {\n  static get CATEGORY() { return 'stavenotes'; }\n  static get STEM_UP() { return Stem.UP; }\n  static get STEM_DOWN() { return Stem.DOWN; }\n  static get DEFAULT_LEDGER_LINE_OFFSET() { return 3; }\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  static format(notes, state) {\n    if (!notes || notes.length < 2) return false;\n\n    // FIXME: VexFlow will soon require that a stave be set before formatting.\n    // Which, according to the below condition, means that following branch will\n    // always be taken and the rest of this function is dead code.\n    //\n    // Problematically, `Formatter#formatByY` was not designed to work for more\n    // than 2 voices (although, doesn't throw on this condition, just tries\n    // to power through).\n    //\n    // Based on the above:\n    //   * 2 voices can be formatted *with or without* a stave being set but\n    //     the output will be different\n    //   * 3 voices can only be formatted *without* a stave\n    if (notes[0].getStave()) {\n      return StaveNote.formatByY(notes, state);\n    }\n\n    const notesList = [];\n\n    for (let i = 0; i < notes.length; i++) {\n      const props = notes[i].getKeyProps();\n      const line = props[0].line;\n      let minL = props[props.length - 1].line;\n      const stemDirection = notes[i].getStemDirection();\n      const stemMax = notes[i].getStemLength() / 10;\n      const stemMin = notes[i].getStemMinumumLength() / 10;\n\n      let maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stemDirection === 1\n          ? props[props.length - 1].line + stemMax\n          : props[props.length - 1].line;\n\n        minL = stemDirection === 1\n          ? props[0].line\n          : props[0].line - stemMax;\n      }\n\n      notesList.push({\n        line: props[0].line, // note/rest base line\n        maxLine: maxL, // note/rest upper bounds line\n        minLine: minL, // note/rest lower bounds line\n        isrest: notes[i].isRest(),\n        stemDirection,\n        stemMax, // Maximum (default) note stem length;\n        stemMin, // minimum note stem length\n        voice_shift: notes[i].getVoiceShiftWidth(),\n        is_displaced: notes[i].isDisplaced(), // note manually displaced\n        note: notes[i],\n      });\n    }\n\n    const voices = notesList.length;\n\n    let noteU = notesList[0];\n    const noteM = voices > 2 ? notesList[1] : null;\n    let noteL = voices > 2 ? notesList[2] : notesList[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n      noteU = notesList[1];\n      noteL = notesList[0];\n    }\n\n    const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    let xShift = 0;\n    let stemDelta;\n\n    // Test for two voice note intersection\n    if (voices === 2) {\n      const lineSpacing = noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stemDirection === noteL.stemDirection &&\n        noteU.minLine <= noteL.maxLine) {\n        if (!noteU.isrest) {\n          stemDelta = Math.abs(noteU.line - (noteL.maxLine + 0.5));\n          stemDelta = Math.max(stemDelta, noteU.stemMin);\n          noteU.minLine = noteU.line - stemDelta;\n          noteU.note.setStemLength(stemDelta * 10);\n        }\n      }\n      if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          xShift = voiceXShift;\n          if (noteU.stemDirection === noteL.stemDirection) {\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(xShift + 3);\n          } else {\n            // shift lower voice right\n            noteL.note.setXShift(xShift);\n          }\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM !== null && noteM.minLine < noteL.maxLine + 0.5) {\n      if (!noteM.isrest) {\n        stemDelta = Math.abs(noteM.line - (noteL.maxLine + 0.5));\n        stemDelta = Math.max(stemDelta, noteM.stemMin);\n        noteM.minLine = noteM.line - stemDelta;\n        noteM.note.setStemLength(stemDelta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n        const restHeight = noteM.maxLine - noteM.minLine;\n        const space = noteU.minLine - noteL.maxLine;\n        if (restHeight < space) {\n          // center middle voice rest between the upper and lower voices\n          centerRest(noteM, noteU, noteL);\n        } else {\n          xShift = voiceXShift + 3;    // shift middle rest right\n          noteM.note.setXShift(xShift);\n        }\n        // format complete\n        return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    }\n    if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    }\n    if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    }\n    if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n    }\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.minLine <= noteM.maxLine + 0.5) ||\n      (!noteM.isrest && !noteL.isrest && noteM.minLine <= noteL.maxLine)) {\n      xShift = voiceXShift + 3;      // shift middle note right\n      noteM.note.setXShift(xShift);\n    }\n\n    return true;\n  }\n\n  static formatByY(notes, state) {\n    // NOTE: this function does not support more than two voices per stave\n    // use with care.\n    let hasStave = true;\n\n    for (let i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) {\n      throw new Vex.RERR(\n        'Stave Missing',\n        'All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!'\n      );\n    }\n\n    let xShift = 0;\n\n    for (let i = 0; i < notes.length - 1; i++) {\n      let topNote = notes[i];\n      let bottomNote = notes[i + 1];\n\n      if (topNote.getStemDirection() === Stem.DOWN) {\n        topNote = notes[i + 1];\n        bottomNote = notes[i];\n      }\n\n      const topKeys = topNote.getKeyProps();\n      const bottomKeys = bottomNote.getKeyProps();\n\n      const HALF_NOTEHEAD_HEIGHT = 0.5;\n\n      // `keyProps` and `stave.getYForLine` have different notions of a `line`\n      // so we have to convert the keyProps value by subtracting 5.\n      // See https://github.com/0xfe/vexflow/wiki/Development-Gotchas\n      //\n      // We also extend the y for each note by a half notehead because the\n      // notehead's origin is centered\n      const topNotBottomY = topNote\n        .getStave()\n        .getYForLine(5 - topKeys[0].line + HALF_NOTEHEAD_HEIGHT);\n\n      const bottomNoteTopY = bottomNote\n        .getStave()\n        .getYForLine(5 - bottomKeys[bottomKeys.length - 1].line - HALF_NOTEHEAD_HEIGHT);\n\n      const areNotesColliding = bottomNoteTopY - topNotBottomY < 0;\n\n      if (areNotesColliding) {\n        xShift = topNote.getVoiceShiftWidth() + 2;\n        bottomNote.setXShift(xShift);\n      }\n    }\n\n    state.right_shift += xShift;\n  }\n\n  static postFormat(notes) {\n    if (!notes) return false;\n\n    notes.forEach(note => note.postFormat());\n\n    return true;\n  }\n\n  constructor(noteStruct) {\n    super(noteStruct);\n    this.setAttribute('type', 'StaveNote');\n\n    this.keys = noteStruct.keys;\n    this.clef = noteStruct.clef;\n    this.octave_shift = noteStruct.octave_shift;\n    this.beam = null;\n    this.mv_headtype = noteStruct.mv_headtype;\n\n    let durationNum = parseInt(this.duration);\n    if (!isNaN(durationNum)) {\n      if (durationNum > 128) this.duration = '128'\n    }\n\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(noteStruct)}`\n      );\n    }\n\n    // if true, displace note to right\n    this.displaced = false;\n    this.dot_shiftY = 0;\n    // per-pitch properties\n    this.keyProps = [];\n    // for displaced ledger lines\n    this.use_default_head_x = false;\n\n    // Drawing\n    this.note_heads = [];\n    this.modifiers = [];\n\n    // for dot get covered by other notehead\n    this.voice2Note;\n    this.isNearNote; //is two notehead only diff one key\n\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: noteStruct.glyph_font_scale || Flow.DEFAULT_NOTATION_FONT_SCALE,\n      // number of stroke px to the left and right of head\n      stroke_px: noteStruct.stroke_px || StaveNote.DEFAULT_LEDGER_LINE_OFFSET,\n    });\n\n    this.calculateKeyProps();\n    this.buildStem();\n\n    // Set the stem direction\n    if (noteStruct.auto_stem) {\n      this.autoStem();\n    } else {\n      this.setStemDirection(noteStruct.stem_direction);\n    }\n    this.reset();\n    this.buildFlag();\n  }\n\n  reset() {\n    super.reset();\n\n    // Save prior noteHead styles & reapply them after making new noteheads.\n    const noteHeadStyles = this.note_heads.map(noteHead => noteHead.getStyle());\n    this.buildNoteHeads();\n    this.note_heads.forEach((noteHead, index) => noteHead.setStyle(noteHeadStyles[index]));\n\n    if (this.stave) {\n      this.note_heads.forEach(head => head.setStave(this.stave));\n    }\n    this.calcExtraPx();\n  }\n\n  setBeam(beam) {\n    this.beam = beam;\n    this.calcExtraPx();\n    return this;\n  }\n\n  getCategory() { return StaveNote.CATEGORY; }\n\n  // Builds a `Stem` for the note\n  buildStem() {\n    const glyph = this.getGlyph();\n\n    this.setStem(new Stem({\n      stem_up_y_offset: glyph.stem_up_y_offset,\n      stem_down_y_offset: glyph.stem_down_y_offset,\n      hide: !!this.isRest(),\n    }));\n  }\n\n  // Builds a `NoteHead` for each key in the note\n  buildNoteHeads() {\n    this.note_heads = [];\n    const stemDirection = this.getStemDirection();\n    const keys = this.getKeys();\n\n    let lastLine = null;\n    let lineDiff = null;\n    let displaced = false;\n\n    // Draw notes from bottom to top.\n\n    // For down-stem notes, we draw from top to bottom.\n    let start;\n    let end;\n    let step;\n    if (stemDirection === Stem.UP) {\n      start = 0;\n      end = keys.length;\n      step = 1;\n    } else if (stemDirection === Stem.DOWN) {\n      start = keys.length - 1;\n      end = -1;\n      step = -1;\n    }\n\n    for (let i = start; i !== end; i += step) {\n      const noteProps = this.keyProps[i];\n      const line = noteProps.line;\n\n      // Keep track of last line with a note head, so that consecutive heads\n      // are correctly displaced.\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        lineDiff = Math.abs(lastLine - line);\n        if (lineDiff === 0 || lineDiff === 0.5) {\n          displaced = !displaced;\n        } else {\n          displaced = false;\n          this.use_default_head_x = true;\n        }\n      }\n      lastLine = line;\n\n      const notehead = new NoteHead({\n        duration: this.duration,\n        note_type: this.noteType,\n        displaced,\n        stem_direction: stemDirection,\n        custom_glyph_code: noteProps.code,\n        glyph_font_scale: this.render_options.glyph_font_scale,\n        x_shift: noteProps.shift_right,\n        line: noteProps.line,\n      });\n\n      this.note_heads[i] = notehead;\n    }\n  }\n\n  // Automatically sets the stem direction based on the keys in the note\n  autoStem() {\n    // Figure out optimal stem direction based on given notes\n    this.minLine = this.keyProps[0].line;\n    this.maxLine = this.keyProps[this.keyProps.length - 1].line;\n\n    const MIDDLE_LINE = 3;\n    const decider = (this.minLine + this.maxLine) / 2;\n    const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n\n    this.setStemDirection(stemDirection);\n  }\n\n  // Calculates and stores the properties for each key in the note\n  calculateKeyProps() {\n    let lastLine = null;\n    for (let i = 0; i < this.keys.length; ++i) {\n      const key = this.keys[i];\n\n      // All rests use the same position on the line.\n      // if (this.glyph.rest) key = this.glyph.position;\n      if (this.glyph.rest) this.glyph.position = key;\n\n      const options = { octave_shift: this.octave_shift || 0 };\n      const props = Flow.keyProperties(key, this.clef, options);\n\n      if (!props) {\n        throw new Vex.RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n      }\n\n      // Override line placement for default rests\n      if (props.key === 'R') {\n        if (this.duration === '1' || this.duration === 'w') {\n          props.line = 4;\n        } else {\n          props.line = 3;\n        }\n      }\n\n      // Calculate displacement of this note\n      const line = props.line;\n      if (lastLine === null) {\n        lastLine = line;\n      } else {\n        if (Math.abs(lastLine - line) === 0.5) {\n          this.displaced = true;\n          props.displaced = true;\n\n          // Have to mark the previous note as\n          // displaced as well, for modifier placement\n          if (this.keyProps.length > 0) {\n            this.keyProps[i - 1].displaced = true;\n          }\n        }\n      }\n\n      lastLine = line;\n      this.keyProps.push(props);\n    }\n\n    // Sort the notes from lowest line to highest line\n    lastLine = -Infinity;\n    this.keyProps.forEach(key => {\n      if (key.line < lastLine) {\n        Vex.W(\n          'Unsorted keys in note will be sorted. ' +\n          'See https://github.com/0xfe/vexflow/issues/104 for details.'\n        );\n      }\n      lastLine = key.line;\n    });\n    this.keyProps.sort((a, b) => a.line - b.line);\n  }\n\n  // Get the `BoundingBox` for the entire note\n  getBoundingBox() {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n    }\n\n    const { width: w, modLeftPx, extraLeftPx } = this.getMetrics();\n    const x = this.getAbsoluteX() - modLeftPx - extraLeftPx;\n\n    let minY = 0;\n    let maxY = 0;\n    const halfLineSpacing = this.getStave().getSpacingBetweenLines() / 2;\n    const lineSpacing = halfLineSpacing * 2;\n\n    if (this.isRest()) {\n      const y = this.ys[0];\n      const frac = Flow.durationToFraction(this.duration);\n      if (frac.equals(1) || frac.equals(2)) {\n        minY = y - halfLineSpacing;\n        maxY = y + halfLineSpacing;\n      } else {\n        minY = y - (this.glyph.line_above * lineSpacing);\n        maxY = y + (this.glyph.line_below * lineSpacing);\n      }\n    } else if (this.glyph.stem) {\n      const ys = this.getStemExtents();\n      ys.baseY += halfLineSpacing * this.stem_direction;\n      minY = Math.min(ys.topY, ys.baseY);\n      maxY = Math.max(ys.topY, ys.baseY);\n    } else {\n      minY = null;\n      maxY = null;\n\n      for (let i = 0; i < this.ys.length; ++i) {\n        const yy = this.ys[i];\n        if (i === 0) {\n          minY = yy;\n          maxY = yy;\n        } else {\n          minY = Math.min(yy, minY);\n          maxY = Math.max(yy, maxY);\n        }\n      }\n      minY -= halfLineSpacing;\n      maxY += halfLineSpacing;\n    }\n\n    return new BoundingBox(x, minY, w, maxY - minY);\n  }\n\n  // Gets the line number of the top or bottom note in the chord.\n  // If `isTopNote` is `true` then get the top note\n  getLineNumber(isTopNote) {\n    if (!this.keyProps.length) {\n      throw new Vex.RERR(\n        'NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\"\n      );\n    }\n\n    let resultLine = this.keyProps[0].line;\n\n    // No precondition assumed for sortedness of keyProps array\n    for (let i = 0; i < this.keyProps.length; i++) {\n      const thisLine = this.keyProps[i].line;\n      if (isTopNote) {\n        if (thisLine > resultLine) resultLine = thisLine;\n      } else {\n        if (thisLine < resultLine) resultLine = thisLine;\n      }\n    }\n\n    return resultLine;\n  }\n\n  // Determine if current note is a rest\n  isRest() { return this.glyph.rest; }\n\n  // Determine if the current note is a chord\n  isChord() { return !this.isRest() && this.keys.length > 1; }\n\n  // Determine if the `StaveNote` has a stem\n  hasStem() { return this.glyph.stem; }\n\n  hasFlag() {\n    return super.hasFlag() && !this.isRest();\n  }\n\n  getStemX() {\n    if (this.noteType === 'r') {\n      return this.getCenterGlyphX();\n    } else {\n      // We adjust the origin of the stem because we want the stem left-aligned\n      // with the notehead if stemmed-down, and right-aligned if stemmed-up\n      return super.getStemX() + getStemAdjustment(this);\n    }\n  }\n\n  // Get the `y` coordinate for text placed on the top/bottom of a\n  // note at a desired `text_line`\n  getYForTopText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.min(\n      this.stave.getYForTopText(textLine),\n      extents.topY - (this.render_options.annotation_spacing * (textLine + 1))\n    );\n  }\n  getYForBottomText(textLine) {\n    const extents = this.getStemExtents();\n    return Math.max(\n      this.stave.getYForTopText(textLine),\n      extents.baseY + (this.render_options.annotation_spacing * (textLine))\n    );\n  }\n\n  // Sets the current note to the provided `stave`. This applies\n  // `y` values to the `NoteHeads`.\n  setStave(stave) {\n    super.setStave(stave);\n\n    const ys = this.note_heads.map(notehead => {\n      notehead.setStave(stave);\n      return notehead.getY();\n    });\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      this.stem.setYBounds(y_top, y_bottom);\n    }\n\n    return this;\n  }\n\n  // Get the pitches in the note\n  getKeys() { return this.keys; }\n\n  // Get the properties for all the keys in the note\n  getKeyProps() {\n    return this.keyProps;\n  }\n\n  // Check if note is shifted to the right\n  isDisplaced() {\n    return this.displaced;\n  }\n\n  // Sets whether shift note to the right. `displaced` is a `boolean`\n  setNoteDisplaced(displaced) {\n    this.displaced = displaced;\n    return this;\n  }\n\n  // Get the starting `x` coordinate for a `StaveTie`\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    tieStartX += this.getGlyphWidth() + this.x_shift + this.extraRightPx;\n    if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n    return tieStartX;\n  }\n\n  // Get the ending `x` coordinate for a `StaveTie`\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    tieEndX += this.x_shift - this.extraLeftPx;\n    return tieEndX;\n  }\n\n  // Get the stave line on which to place a rest\n  getLineForRest() {\n    let restLine = this.keyProps[0].line;\n    if (this.keyProps.length > 1) {\n      const lastLine = this.keyProps[this.keyProps.length - 1].line;\n      const top = Math.max(restLine, lastLine);\n      const bot = Math.min(restLine, lastLine);\n      restLine = Vex.MidLine(top, bot);\n    }\n\n    return restLine;\n  }\n\n  // Get the default `x` and `y` coordinates for the provided `position`\n  // and key `index`\n  getModifierStartXY(position, index, options) {\n    options = options || {};\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n    let x = 0;\n    if (position === LEFT) {\n      // extra_left_px\n      // FIXME: What are these magic numbers?\n      x = -1 * 2;\n    } else if (position === RIGHT) {\n      // extra_right_px\n      // FIXME: What is this magical +2?\n      x = this.getGlyphWidth() + this.x_shift + 2;\n\n      if (this.stem_direction === Stem.UP && this.hasFlag() &&\n        (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n        x += this.flag.getMetrics().width;\n      }\n    } else if (position === BELOW || position === ABOVE) {\n      x = this.getGlyphWidth() / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Sets the style of the complete StaveNote, including all keys\n  // and the stem.\n  setStyle(style) {\n    super.setStyle(style);\n    this.note_heads.forEach(notehead => notehead.setStyle(style));\n    this.stem.setStyle(style);\n  }\n\n  setStemStyle(style) {\n    const stem = this.getStem();\n    stem.setStyle(style);\n  }\n  getStemStyle() { return this.stem.getStyle(); }\n\n  setLedgerLineStyle(style) { this.ledgerLineStyle = style; }\n  getLedgerLineStyle() { return this.ledgerLineStyle; }\n\n  setFlagStyle(style) { this.flagStyle = style; }\n  getFlagStyle() { return this.flagStyle; }\n\n  // Sets the notehead at `index` to the provided coloring `style`.\n  //\n  // `style` is an `object` with the following properties: `shadowColor`,\n  // `shadowBlur`, `fillStyle`, `strokeStyle`\n  setKeyStyle(index, style) {\n    this.note_heads[index].setStyle(style);\n    return this;\n  }\n\n  setKeyLine(index, line) {\n    this.keyProps[index].line = line;\n    this.reset();\n    return this;\n  }\n\n  getKeyLine(index) {\n    return this.keyProps[index].line;\n  }\n\n  // Add self to modifier context. `mContext` is the `ModifierContext`\n  // to be added to.\n  addToModifierContext(mContext) {\n    this.setModifierContext(mContext);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Generic function to add modifiers to a note\n  //\n  // Parameters:\n  // * `index`: The index of the key that we're modifying\n  // * `modifier`: The modifier to add\n  addModifier(index, modifier) {\n    modifier.setNote(this);\n    modifier.setIndex(index);\n    this.modifiers.push(modifier);\n    this.setPreFormatted(false);\n    return this;\n  }\n\n  // Helper function to add an accidental to a key\n  addAccidental(index, accidental) {\n    return this.addModifier(index, accidental);\n  }\n\n  // Helper function to add an articulation to a key\n  addArticulation(index, articulation) {\n    return this.addModifier(index, articulation);\n  }\n\n  // Helper function to add an annotation to a key\n  addAnnotation(index, annotation) {\n    return this.addModifier(index, annotation);\n  }\n\n  // Helper function to add a dot on a specific key\n  addDot(index) {\n    const dot = new Dot();\n    dot.setDotShiftY(this.glyph.dot_shiftY);\n    this.dots++;\n    return this.addModifier(index, dot);\n  }\n\n  // Convenience method to add dot to all keys in note\n  addDotToAll() {\n    for (let i = 0; i < this.keys.length; ++i) {\n      this.addDot(i);\n    }\n    return this;\n  }\n\n  // Get all accidentals in the `ModifierContext`\n  getAccidentals() {\n    return this.modifierContext.getModifiers('accidentals');\n  }\n\n  // Get all dots in the `ModifierContext`\n  getDots() {\n    return this.modifierContext.getModifiers('dots');\n  }\n\n  // Get the width of the note if it is displaced. Used for `Voice`\n  // formatting\n  getVoiceShiftWidth() {\n    // TODO: may need to accomodate for dot here.\n    return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n  }\n\n  // Calculates and sets the extra pixels to the left or right\n  // if the note is displaced.\n  calcExtraPx() {\n    this.setExtraLeftPx(\n      this.displaced && this.stem_direction === Stem.DOWN\n        ? this.getGlyphWidth()\n        : 0\n    );\n\n    // For upstems with flags, the extra space is unnecessary, since it's taken\n    // up by the flag.\n    this.setExtraRightPx(\n      !this.hasFlag() && this.displaced && this.stem_direction === Stem.UP\n        ? this.getGlyphWidth()\n        : 0\n    );\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n\n    let width = this.getGlyphWidth() + this.extraLeftPx + this.extraRightPx;\n\n    // For upward flagged notes, the width of the flag needs to be added\n    if (this.glyph.flag && this.beam === null && this.stem_direction === Stem.UP) {\n      width += this.getGlyphWidth();\n    }\n\n    this.setWidth(width);\n    this.setPreFormatted(true);\n  }\n\n  /**\n   * @typedef {Object} noteHeadBounds\n   * @property {number} y_top the highest notehead bound\n   * @property {number} y_bottom the lowest notehead bound\n   * @property {number|Null} displaced_x the starting x for displaced noteheads\n   * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n   * @property {number} highest_line the highest notehead line in traditional music line\n   *  numbering (bottom line = 1, top line = 5)\n   * @property {number} lowest_line the lowest notehead line\n   * @property {number|false} highest_displaced_line the highest staff line number\n   *   for a displaced notehead\n   * @property {number|false} lowest_displaced_line\n   * @property {number} highest_non_displaced_line\n   * @property {number} lowest_non_displaced_line\n   */\n\n  /**\n   * Get the staff line and y value for the highest & lowest noteheads\n   * @returns {noteHeadBounds}\n   */\n  getNoteHeadBounds() {\n    // Top and bottom Y values for stem.\n    let yTop = null;\n    let yBottom = null;\n    let nonDisplacedX = null;\n    let displacedX = null;\n\n    let highestLine = this.stave.getNumLines();\n    let lowestLine = 1;\n    let highestDisplacedLine = false;\n    let lowestDisplacedLine = false;\n    let highestNonDisplacedLine = highestLine;\n    let lowestNonDisplacedLine = lowestLine;\n\n    this.note_heads.forEach(notehead => {\n      const line = notehead.getLine();\n      const y = notehead.getY();\n\n      if (yTop === null || y < yTop) {\n        yTop = y;\n      }\n\n      if (yBottom === null || y > yBottom) {\n        yBottom = y;\n      }\n\n      if (displacedX === null && notehead.isDisplaced()) {\n        displacedX = notehead.getAbsoluteX();\n      }\n\n      if (nonDisplacedX === null && !notehead.isDisplaced()) {\n        nonDisplacedX = notehead.getAbsoluteX();\n      }\n\n      highestLine = line > highestLine ? line : highestLine;\n      lowestLine = line < lowestLine ? line : lowestLine;\n\n      if (notehead.isDisplaced()) {\n        highestDisplacedLine = (highestDisplacedLine === false) ?\n          line : Math.max(line, highestDisplacedLine);\n        lowestDisplacedLine = (lowestDisplacedLine === false) ?\n          line : Math.min(line, lowestDisplacedLine);\n      } else {\n        highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n        lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n      }\n    }, this);\n\n    return {\n      y_top: yTop,\n      y_bottom: yBottom,\n      displaced_x: displacedX,\n      non_displaced_x: nonDisplacedX,\n      highest_line: highestLine,\n      lowest_line: lowestLine,\n      highest_displaced_line: highestDisplacedLine,\n      lowest_displaced_line: lowestDisplacedLine,\n      highest_non_displaced_line: highestNonDisplacedLine,\n      lowest_non_displaced_line: lowestNonDisplacedLine,\n    };\n  }\n\n  // Get the starting `x` coordinate for the noteheads\n  getNoteHeadBeginX() {\n    return this.getAbsoluteX() + this.x_shift;\n  }\n\n  // Get the ending `x` coordinate for the noteheads\n  getNoteHeadEndX() {\n    const xBegin = this.getNoteHeadBeginX();\n    return xBegin + this.getGlyphWidth();\n  }\n\n  // Draw the ledger lines between the stave and the highest/lowest keys\n  drawLedgerLines() {\n    const {\n      stave, glyph,\n      render_options: { stroke_px },\n      context: ctx,\n    } = this;\n\n    const width = glyph.getWidth() + (stroke_px * 2);\n    const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - (Stem.WIDTH / 2);\n\n    if (this.isRest()) return;\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const {\n      highest_line,\n      lowest_line,\n      highest_displaced_line,\n      highest_non_displaced_line,\n      lowest_displaced_line,\n      lowest_non_displaced_line,\n      displaced_x,\n      non_displaced_x,\n    } = this.getNoteHeadBounds();\n\n    const min_x = Math.min(displaced_x, non_displaced_x);\n\n    const drawLedgerLine = (y, normal, displaced) => {\n      let x;\n      if (displaced && normal) x = min_x - stroke_px;\n      else if (normal) x = non_displaced_x - stroke_px;\n      else x = displaced_x - stroke_px;\n      const ledgerWidth = (normal && displaced) ? doubleWidth : width;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + ledgerWidth, y);\n      ctx.stroke();\n    };\n\n    const style = Object.assign({}, stave.getStyle() || {}, this.getLedgerLineStyle() || {});\n    this.applyStyle(ctx, style);\n\n    // Draw ledger lines below the staff:\n    for (let line = 6; line <= highest_line; ++line) {\n      const normal = (non_displaced_x !== null) && (line <= highest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line <= highest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    // Draw ledger lines above the staff:\n    for (let line = 0; line >= lowest_line; --line) {\n      const normal = (non_displaced_x !== null) && (line >= lowest_non_displaced_line);\n      const displaced = (displaced_x !== null) && (line >= lowest_displaced_line);\n      drawLedgerLine(stave.getYForNote(line), normal, displaced);\n    }\n\n    this.restoreStyle(ctx, style);\n  }\n\n  // Draw all key modifiers\n  drawModifiers() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const ctx = this.context;\n    ctx.openGroup('modifiers');\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const modifier = this.modifiers[i];\n      const notehead = this.note_heads[modifier.getIndex()];\n      const noteheadStyle = notehead.getStyle();\n      notehead.applyStyle(ctx, noteheadStyle);\n      modifier.setContext(ctx);\n      modifier.drawWithStyle();\n      notehead.restoreStyle(ctx, noteheadStyle);\n    }\n    ctx.closeGroup();\n  }\n\n  // Draw the flag for the note\n  drawFlag() {\n    const { stem, beam, context: ctx } = this;\n\n    if (!ctx) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    const shouldRenderFlag = beam === null;\n    const glyph = this.getGlyph();\n\n    if (glyph.flag && shouldRenderFlag) {\n      const { y_top, y_bottom } = this.getNoteHeadBounds();\n      const noteStemHeight = stem.getHeight();\n      const flagX = this.getStemX();\n      // FIXME: What's with the magic +/- 2\n      const flagY = this.getStemDirection() === Stem.DOWN\n        // Down stems have flags on the left\n        ? y_top - noteStemHeight + 2\n        // Up stems have flags on the eft.\n        : y_bottom - noteStemHeight - 2;\n\n      // Draw the Flag\n      ctx.openGroup('flag', null, { pointerBBox: true });\n      this.applyStyle(ctx, this.getFlagStyle() || false);\n      this.flag.render(ctx, flagX, flagY);\n      this.restoreStyle(ctx, this.getFlagStyle() || false);\n      ctx.closeGroup();\n    }\n  }\n\n  // Draw the NoteHeads\n  drawNoteHeads() {\n    this.note_heads.forEach(notehead => {\n      this.context.openGroup('notehead', null, { pointerBBox: true });\n      notehead.setContext(this.context).draw();\n      this.context.closeGroup();\n    });\n  }\n\n  // Render the stem onto the canvas\n  drawStem(stemStruct) {\n    // GCR TODO: I can't find any context in which this is called with the stemStruct\n    // argument in the codebase or tests. Nor can I find a case where super.drawStem\n    // is called at all. Perhaps these should be removed?\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n\n    if (stemStruct) {\n      this.setStem(new Stem(stemStruct));\n    }\n\n    this.context.openGroup('stem', null, { pointerBBox: true });\n    this.stem.setContext(this.context).draw();\n    this.context.closeGroup();\n  }\n\n  // Draws all the `StaveNote` parts. This is the main drawing method.\n  draw() {\n    if (!this.context) {\n      throw new Vex.RERR('NoCanvasContext', \"Can't draw without a canvas context.\");\n    }\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    const xBegin = this.getNoteHeadBeginX();\n    const shouldRenderStem = this.hasStem() && !this.beam;\n\n    // Format note head x positions\n    this.note_heads.forEach(notehead => notehead.setX(xBegin));\n\n    // Format stem x positions\n    const stemX = this.getStemX();\n    this.stem.setNoteHeadXBounds(stemX, stemX);\n\n    L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n\n    // Draw each part of the note\n    this.drawLedgerLines();\n\n    // Apply the overall style -- may be contradicted by local settings:\n    this.applyStyle();\n    this.setAttribute('el', this.context.openGroup('stavenote', this.getAttribute('id')));\n    this.context.openGroup('note', null, { pointerBBox: true });\n    if (shouldRenderStem) this.drawStem();\n    this.drawNoteHeads();\n    this.drawFlag();\n    this.context.closeGroup();\n    this.drawModifiers();\n    this.context.closeGroup();\n    this.restoreStyle();\n    this.setRendered();\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\n\n/**\n * @constructor\n */\nexport class FretHandFinger extends Modifier {\n  static get CATEGORY() { return 'frethandfinger'; }\n\n  // Arrange fingerings inside a ModifierContext.\n  static format(nums, state) {\n    const { left_shift, right_shift } = state;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return false;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shiftLeft = 0;\n    let shiftRight = 0;\n\n    for (let i = 0; i < nums.length; ++i) {\n      const num = nums[i];\n      const note = num.getNote();\n      const pos = num.getPosition();\n      const props = note.getKeyProps()[num.getIndex()];\n      if (note !== prev_note) {\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          if (left_shift === 0) {\n            shiftLeft = props_tmp.displaced ? note.getExtraLeftPx() : shiftLeft;\n          }\n          if (right_shift === 0) {\n            shiftRight = props_tmp.displaced ? note.getExtraRightPx() : shiftRight;\n          }\n        }\n        prev_note = note;\n      }\n\n      nums_list.push({\n        note,\n        num,\n        pos,\n        line: props.line,\n        shiftL: shiftLeft,\n        shiftR: shiftRight,\n      });\n    }\n\n    // Sort fingernumbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    let numShiftL = 0;\n    let numShiftR = 0;\n    let xWidthL = 0;\n    let xWidthR = 0;\n    let lastLine = null;\n    let lastNote = null;\n\n    for (let i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n\n      // Reset the position of the string number every line.\n      if (line !== lastLine || note !== lastNote) {\n        numShiftL = left_shift + shiftL;\n        numShiftR = right_shift + shiftR;\n      }\n\n      const numWidth = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift + numShiftL);\n        num_shift = left_shift + numWidth; // spacing\n        xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(numShiftR);\n        num_shift = shiftRight + numWidth; // spacing\n        xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n      }\n      lastLine = line;\n      lastNote = note;\n    }\n\n    state.left_shift += xWidthL;\n    state.right_shift += xWidthR;\n\n    return true;\n  }\n\n  constructor(number) {\n    super();\n    this.setAttribute('type', 'FretHandFinger');\n\n    this.note = null;\n    this.index = null;\n    this.finger = number;\n    this.width = 7;\n    this.position = Modifier.Position.LEFT;  // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0;       // Horizontal offset from default\n    this.y_offset = 0;       // Vertical offset from default\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n  getCategory() { return FretHandFinger.CATEGORY; }\n  setFretHandFinger(number) { this.finger = number; return this; }\n  setOffsetX(x) { this.x_offset = x; return this; }\n  setOffsetY(y) { this.y_offset = y; return this; }\n\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let dot_x = start.x + this.x_shift + this.x_offset;\n    let dot_y = start.y + this.y_shift + this.y_offset + 5;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n        dot_x -= 4;\n        dot_y -= 12;\n        break;\n      case Modifier.Position.BELOW:\n        dot_x -= 2;\n        dot_y += 10;\n        break;\n      case Modifier.Position.LEFT:\n        dot_x -= this.width;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += 1;\n        break;\n      default:\n        throw new Vex.RERR('InvalidPostion', `The position ${this.position} does not exist`);\n    }\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    ctx.fillText('' + this.finger, dot_x, dot_y);\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements some standard music theory routines.\n\nimport { Vex } from './vex';\n\nexport class Music {\n  static get NUM_TONES() {\n    return 12;\n  }\n\n  static get roots() {\n    return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n  }\n\n  static get root_values() {\n    return [0, 2, 4, 5, 7, 9, 11];\n  }\n\n  static get root_indices() {\n    return {\n      'c': 0,\n      'd': 1,\n      'e': 2,\n      'f': 3,\n      'g': 4,\n      'a': 5,\n      'b': 6,\n    };\n  }\n\n  static get canonical_notes() {\n    return [\n      'c', 'c#', 'd', 'd#',\n      'e', 'f', 'f#', 'g',\n      'g#', 'a', 'a#', 'b',\n    ];\n  }\n\n  static get diatonic_intervals() {\n    return [\n      'unison', 'm2', 'M2', 'm3', 'M3',\n      'p4', 'dim5', 'p5', 'm6', 'M6',\n      'b7', 'M7', 'octave',\n    ];\n  }\n\n  static get diatonic_accidentals() {\n    return {\n      'unison': { note: 0, accidental: 0 },\n      'm2': { note: 1, accidental: -1 },\n      'M2': { note: 1, accidental: 0 },\n      'm3': { note: 2, accidental: -1 },\n      'M3': { note: 2, accidental: 0 },\n      'p4': { note: 3, accidental: 0 },\n      'dim5': { note: 4, accidental: -1 },\n      'p5': { note: 4, accidental: 0 },\n      'm6': { note: 5, accidental: -1 },\n      'M6': { note: 5, accidental: 0 },\n      'b7': { note: 6, accidental: -1 },\n      'M7': { note: 6, accidental: 0 },\n      'octave': { note: 7, accidental: 0 },\n    };\n  }\n\n  static get intervals() {\n    return {\n      'u': 0, 'unison': 0,\n      'm2': 1, 'b2': 1, 'min2': 1, 'S': 1, 'H': 1,\n      '2': 2, 'M2': 2, 'maj2': 2, 'T': 2, 'W': 2,\n      'm3': 3, 'b3': 3, 'min3': 3,\n      'M3': 4, '3': 4, 'maj3': 4,\n      '4': 5, 'p4': 5,\n      '#4': 6, 'b5': 6, 'aug4': 6, 'dim5': 6,\n      '5': 7, 'p5': 7,\n      '#5': 8, 'b6': 8, 'aug5': 8,\n      '6': 9, 'M6': 9, 'maj6': 9,\n      'b7': 10, 'm7': 10, 'min7': 10, 'dom7': 10,\n      'M7': 11, 'maj7': 11,\n      '8': 12, 'octave': 12,\n    };\n  }\n\n  static get scales() {\n    return {\n      major: [2, 2, 1, 2, 2, 2, 1],\n      dorian: [2, 1, 2, 2, 2, 1, 2],\n      mixolydian: [2, 2, 1, 2, 2, 1, 2],\n      minor: [2, 1, 2, 2, 1, 2, 2],\n    };\n  }\n\n  static get scaleTypes() {\n    return {\n      'M': Music.scales.major,\n      'm': Music.scales.minor,\n    };\n  }\n\n  static get accidentals() {\n    return ['bb', 'b', 'n', '#', '##'];\n  }\n\n  static get noteValues() {\n    return {\n      'c': { root_index: 0, int_val: 0 },\n      'cn': { root_index: 0, int_val: 0 },\n      'c#': { root_index: 0, int_val: 1 },\n      'c##': { root_index: 0, int_val: 2 },\n      'cb': { root_index: 0, int_val: 11 },\n      'cbb': { root_index: 0, int_val: 10 },\n      'd': { root_index: 1, int_val: 2 },\n      'dn': { root_index: 1, int_val: 2 },\n      'd#': { root_index: 1, int_val: 3 },\n      'd##': { root_index: 1, int_val: 4 },\n      'db': { root_index: 1, int_val: 1 },\n      'dbb': { root_index: 1, int_val: 0 },\n      'e': { root_index: 2, int_val: 4 },\n      'en': { root_index: 2, int_val: 4 },\n      'e#': { root_index: 2, int_val: 5 },\n      'e##': { root_index: 2, int_val: 6 },\n      'eb': { root_index: 2, int_val: 3 },\n      'ebb': { root_index: 2, int_val: 2 },\n      'f': { root_index: 3, int_val: 5 },\n      'fn': { root_index: 3, int_val: 5 },\n      'f#': { root_index: 3, int_val: 6 },\n      'f##': { root_index: 3, int_val: 7 },\n      'fb': { root_index: 3, int_val: 4 },\n      'fbb': { root_index: 3, int_val: 3 },\n      'g': { root_index: 4, int_val: 7 },\n      'gn': { root_index: 4, int_val: 7 },\n      'g#': { root_index: 4, int_val: 8 },\n      'g##': { root_index: 4, int_val: 9 },\n      'gb': { root_index: 4, int_val: 6 },\n      'gbb': { root_index: 4, int_val: 5 },\n      'a': { root_index: 5, int_val: 9 },\n      'an': { root_index: 5, int_val: 9 },\n      'a#': { root_index: 5, int_val: 10 },\n      'a##': { root_index: 5, int_val: 11 },\n      'ab': { root_index: 5, int_val: 8 },\n      'abb': { root_index: 5, int_val: 7 },\n      'b': { root_index: 6, int_val: 11 },\n      'bn': { root_index: 6, int_val: 11 },\n      'b#': { root_index: 6, int_val: 0 },\n      'b##': { root_index: 6, int_val: 1 },\n      'bb': { root_index: 6, int_val: 10 },\n      'bbb': { root_index: 6, int_val: 9 },\n    };\n  }\n\n  isValidNoteValue(note) {\n    if (note == null || note < 0 || note >= Music.NUM_TONES) {\n      return false;\n    }\n    return true;\n  }\n\n  isValidIntervalValue(interval) {\n    return this.isValidNoteValue(interval);\n  }\n\n  getNoteParts(noteString) {\n    if (!noteString || noteString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    if (noteString.length > 3) {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n\n    const note = noteString.toLowerCase();\n\n    const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n    const match = regex.exec(note);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n\n      return {\n        root,\n        accidental,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', 'Invalid note name: ' + noteString);\n    }\n  }\n\n  getKeyParts(keyString) {\n    if (!keyString || keyString.length < 1) {\n      throw new Vex.RERR('BadArguments', 'Invalid key: ' + keyString);\n    }\n\n    const key = keyString.toLowerCase();\n\n    // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n    const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n    const match = regex.exec(key);\n\n    if (match != null) {\n      const root = match[1];\n      const accidental = match[2];\n      let type = match[3];\n\n      // Unspecified type implies major\n      if (!type) type = 'M';\n\n      return {\n        root,\n        accidental,\n        type,\n      };\n    } else {\n      throw new Vex.RERR('BadArguments', `Invalid key: ${keyString}`);\n    }\n  }\n\n  getNoteValue(noteString) {\n    const value = Music.noteValues[noteString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid note name: ${noteString}`);\n    }\n\n    return value.int_val;\n  }\n\n  getIntervalValue(intervalString) {\n    const value = Music.intervals[intervalString];\n    if (value == null) {\n      throw new Vex.RERR('BadArguments', `Invalid interval name: ${intervalString}`);\n    }\n\n    return value;\n  }\n\n  getCanonicalNoteName(noteValue) {\n    if (!this.isValidNoteValue(noteValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid note value: ${noteValue}`);\n    }\n\n    return Music.canonical_notes[noteValue];\n  }\n\n  getCanonicalIntervalName(intervalValue) {\n    if (!this.isValidIntervalValue(intervalValue)) {\n      throw new Vex.RERR('BadArguments', `Invalid interval value: ${intervalValue}`);\n    }\n\n    return Music.diatonic_intervals[intervalValue];\n  }\n\n  /* Given a note, interval, and interval direction, product the\n   * relative note.\n   */\n  getRelativeNoteValue(noteValue, intervalValue, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    let sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n    if (sum < 0) sum += Music.NUM_TONES;\n\n    return sum;\n  }\n\n  getRelativeNoteName(root, noteValue) {\n    const parts = this.getNoteParts(root);\n    const rootValue = this.getNoteValue(parts.root);\n    let interval = noteValue - rootValue;\n\n    if (Math.abs(interval) > Music.NUM_TONES - 3) {\n      let multiplier = 1;\n      if (interval > 0) multiplier = -1;\n\n      // Possibly wrap around. (Add +1 for modulo operator)\n      const reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n        Music.NUM_TONES) * multiplier;\n\n      if (Math.abs(reverse_interval) > 2) {\n        throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n      } else {\n        interval = reverse_interval;\n      }\n    }\n\n    if (Math.abs(interval) > 2) {\n      throw new Vex.RERR('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n    }\n\n    let relativeNoteName = parts.root;\n    if (interval > 0) {\n      for (let i = 1; i <= interval; ++i) {\n        relativeNoteName += '#';\n      }\n    } else if (interval < 0) {\n      for (let i = -1; i >= interval; --i) {\n        relativeNoteName += 'b';\n      }\n    }\n\n    return relativeNoteName;\n  }\n\n  /* Return scale tones, given intervals. Each successive interval is\n   * relative to the previous one, e.g., Major Scale:\n   *\n   *   TTSTTTS = [2,2,1,2,2,2,1]\n   *\n   * When used with key = 0, returns C scale (which is isomorphic to\n   * interval list).\n   */\n  getScaleTones(key, intervals) {\n    const tones = [key];\n\n    let nextNote = key;\n    for (let i = 0; i < intervals.length; i += 1) {\n      nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n      if (nextNote !== key) tones.push(nextNote);\n    }\n\n    return tones;\n  }\n\n  /* Returns the interval of a note, given a diatonic scale.\n   *\n   * E.g., Given the scale C, and the note E, returns M3\n   */\n  getIntervalBetween(note1, note2, direction) {\n    if (direction == null) direction = 1;\n\n    if (direction !== 1 && direction !== -1) {\n      throw new Vex.RERR('BadArguments', `Invalid direction: ${direction}`);\n    }\n\n    if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n      throw new Vex.RERR('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n    }\n\n    let difference = direction === 1\n      ? note2 - note1\n      : note1 - note2;\n\n    if (difference < 0) difference += Music.NUM_TONES;\n\n    return difference;\n  }\n\n  // Create a scale map that represents the pitch state for a\n  // `keySignature`. For example, passing a `G` to `keySignature` would\n  // return a scale map with every note naturalized except for `F` which\n  // has an `F#` state.\n  createScaleMap(keySignature) {\n    const keySigParts = this.getKeyParts(keySignature);\n    const scaleName = Music.scaleTypes[keySigParts.type];\n\n    let keySigString = keySigParts.root;\n    if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n    if (!scaleName) throw new Vex.RERR('BadArguments', 'Unsupported key type: ' + keySignature);\n\n    const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n    const noteLocation = Music.root_indices[keySigParts.root];\n\n    const scaleMap = {};\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n      let noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n      if (noteName.length === 1) {\n        noteName += 'n';\n      }\n\n      scaleMap[rootName] = noteName;\n    }\n\n    return scaleMap;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Fraction } from './fraction';\nimport { Flow } from './tables';\nimport { Music } from './music';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\nfunction L(...args) { if (Accidental.DEBUG) Vex.L('Vex.Flow.Accidental', args); }\n\nconst getGlyphWidth = glyph => glyph.getMetrics().width;\n\n// An `Accidental` inherits from `Modifier`, and is formatted within a\n// `ModifierContext`.\nexport class Accidental extends Modifier {\n  static get CATEGORY() { return 'accidentals'; }\n\n  // Arrange accidentals inside a ModifierContext.\n  static format(accidentals, state) {\n    const noteheadAccidentalPadding = 1;\n    const leftShift = state.left_shift + noteheadAccidentalPadding;\n    const accidentalSpacing = 3;\n\n    // If there are no accidentals, we needn't format their positions\n    if (!accidentals || accidentals.length === 0) return;\n\n    const accList = [];\n    let prevNote = null;\n    let shiftL = 0;\n\n    // First determine the accidentals' Y positions from the note.keys\n    let propsTemp;\n    for (let i = 0; i < accidentals.length; ++i) {\n      const acc = accidentals[i];\n      const note = acc.getNote();\n      const stave = note.getStave();\n      const props = note.getKeyProps()[acc.getIndex()];\n      if (note !== prevNote) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          propsTemp = note.getKeyProps()[n];\n          shiftL = propsTemp.displaced ? note.getExtraLeftPx() : shiftL;\n        }\n        prevNote = note;\n      }\n      if (stave !== null) {\n        const lineSpace = stave.options.spacing_between_lines_px;\n        const y = stave.getYForLine(props.line);\n        const accLine = Math.round(y / lineSpace * 2) / 2;\n        accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n      } else {\n        accList.push({ line: props.line, shift: shiftL, acc });\n      }\n    }\n\n    // Sort accidentals by line number.\n    accList.sort((a, b) => b.line - a.line);\n\n    // FIXME: Confusing name. Each object in this array has a property called `line`.\n    // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n    const lineList = [];\n\n    // amount by which all accidentals must be shifted right or left for\n    // stem flipping, notehead shifting concerns.\n    let accShift = 0;\n    let previousLine = null;\n\n    // Create an array of unique line numbers (lineList) from accList\n    for (let i = 0; i < accList.length; i++) {\n      const acc = accList[i];\n\n      // if this is the first line, or a new line, add a lineList\n      if (previousLine === null || previousLine !== acc.line) {\n        lineList.push({\n          line: acc.line,\n          flatLine: true,\n          dblSharpLine: true,\n          numAcc: 0,\n          width: 0,\n        });\n      }\n      // if this accidental is not a flat, the accidental needs 3.0 lines lower\n      // clearance instead of 2.5 lines for b or bb.\n      // FIXME: Naming could use work. acc.acc is very awkward\n      if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n        lineList[lineList.length - 1].flatLine = false;\n      }\n\n      // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n      if (acc.acc.type !== '##') {\n        lineList[lineList.length - 1].dblSharpLine = false;\n      }\n\n      // Track how many accidentals are on this line:\n      lineList[lineList.length - 1].numAcc++;\n\n      // Track the total x_offset needed for this line which will be needed\n      // for formatting lines w/ multiple accidentals:\n\n      // width = accidental width + universal spacing between accidentals\n      lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n\n      // if this accShift is larger, use it to keep first column accidentals in the same line\n      accShift = acc.shift > accShift ? acc.shift : accShift;\n\n      previousLine = acc.line;\n    }\n\n    // ### Place Accidentals in Columns\n    //\n    // Default to a classic triangular layout (middle accidental farthest left),\n    // but follow exceptions as outlined in G. Read's _Music Notation_ and\n    // Elaine Gould's _Behind Bars_.\n    //\n    // Additionally, this implements different vertical collision rules for\n    // flats (only need 2.5 lines clearance below) and double sharps (only\n    // need 2.5 lines of clearance above or below).\n    //\n    // Classic layouts and exception patterns are found in the 'tables.js'\n    // in 'Vex.Flow.accidentalColumnsTable'\n    //\n    // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n    // using as few columns as possible for the verticle structure.\n    //\n    // TODO (?): Allow column to be specified for an accidental at run-time?\n\n    let totalColumns = 0;\n\n    // establish the boundaries for a group of notes with clashing accidentals:\n    for (let i = 0; i < lineList.length; i++) {\n      let noFurtherConflicts = false;\n      const groupStart = i;\n      let groupEnd = i;\n\n      while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n        // if this note conflicts with the next:\n        if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n          // include the next note in the group:\n          groupEnd++;\n        } else {\n          noFurtherConflicts = true;\n        }\n      }\n\n      // Gets an a line from the `lineList`, relative to the current group\n      const getGroupLine = (index) => lineList[groupStart + index];\n      const getGroupLines = (indexes) => indexes.map(getGroupLine);\n      const lineDifference = (indexA, indexB) => {\n        const [a, b] = getGroupLines([indexA, indexB]).map(item => item.line);\n        return a - b;\n      };\n\n      const notColliding = (...indexPairs) =>\n        indexPairs\n          .map(getGroupLines)\n          .every(lines => !this.checkCollision(...lines));\n\n      // Set columns for the lines in this group:\n      const groupLength = groupEnd - groupStart + 1;\n\n      // Set the accidental column for each line of the group\n      let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n\n      switch (groupLength) {\n        case 3:\n          if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n            endCase = 'second_on_bottom';\n          }\n          break;\n        case 4:\n          if (notColliding([0, 2], [1, 3])) {\n            endCase = 'spaced_out_tetrachord';\n          }\n          break;\n        case 5:\n          if (endCase === 'b' && notColliding([1, 3])) {\n            endCase = 'spaced_out_pentachord';\n            if (notColliding([0, 2], [2, 4])) {\n              endCase = 'very_spaced_out_pentachord';\n            }\n          }\n          break;\n        case 6:\n          if (notColliding([0, 3], [1, 4], [2, 5])) {\n            endCase = 'spaced_out_hexachord';\n          }\n          if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n            endCase = 'very_spaced_out_hexachord';\n          }\n          break;\n        default:\n          break;\n      }\n\n      let groupMember;\n      let column;\n      // If the group contains more than seven members, use ascending parallel lines\n      // of accidentals, using as few columns as possible while avoiding collisions.\n      if (groupLength >= 7) {\n        // First, determine how many columns to use:\n        let patternLength = 2;\n        let collisionDetected = true;\n        while (collisionDetected === true) {\n          collisionDetected = false;\n          for (let line = 0; line + patternLength < lineList.length; line++) {\n            if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n              collisionDetected = true;\n              patternLength++;\n              break;\n            }\n          }\n        }\n        // Then, assign a column to each line of accidentals\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = ((groupMember - i) % patternLength) + 1;\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n\n        // Otherwise, if the group contains fewer than seven members, use the layouts from\n        // the accidentalsColumnsTable housed in tables.js.\n      } else {\n        for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n          column = Flow.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n          lineList[groupMember].column = column;\n          totalColumns = (totalColumns > column) ? totalColumns : column;\n        }\n      }\n\n      // Increment i to the last note that was set, so that if a lower set of notes\n      // does not conflict at all with this group, it can have its own classic shape.\n      i = groupEnd;\n    }\n\n    // ### Convert Columns to x_offsets\n    //\n    // This keeps columns aligned, even if they have different accidentals within them\n    // which sometimes results in a larger x_offset than is an accidental might need\n    // to preserve the symmetry of the accidental shape.\n    //\n    // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n    // music with complex chord clusters.\n    //\n    // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n    // parallel columns.\n\n    // track each column's max width, which will be used as initial shift of later columns:\n    const columnWidths = [];\n    const columnXOffsets = [];\n    for (let i = 0; i <= totalColumns; i++) {\n      columnWidths[i] = 0;\n      columnXOffsets[i] = 0;\n    }\n\n    columnWidths[0] = accShift + leftShift;\n    columnXOffsets[0] = accShift + leftShift;\n\n    // Fill columnWidths with widest needed x-space;\n    // this is what keeps the columns parallel.\n    lineList.forEach(line => {\n      if (line.width > columnWidths[line.column]) columnWidths[line.column] = line.width;\n    });\n\n    for (let i = 1; i < columnWidths.length; i++) {\n      // this column's offset = this column's width + previous column's offset\n      columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n    }\n\n    const totalShift = columnXOffsets[columnXOffsets.length - 1];\n    // Set the xShift for each accidental according to column offsets:\n    let accCount = 0;\n    lineList.forEach(line => {\n      let lineWidth = 0;\n      const lastAccOnLine = accCount + line.numAcc;\n      // handle all of the accidentals on a given line:\n      for (accCount; accCount < lastAccOnLine; accCount++) {\n        const xShift = (columnXOffsets[line.column - 1] + lineWidth);\n        accList[accCount].acc.setXShift(xShift);\n        // keep track of the width of accidentals we've added so far, so that when\n        // we loop, we add space for them.\n        lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n        L('Line, accCount, shift: ', line.line, accCount, xShift);\n      }\n    });\n\n    // update the overall layout with the full width of the accidental shapes:\n    state.left_shift += totalShift;\n  }\n\n  // Helper function to determine whether two lines of accidentals collide vertically\n  static checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) { // then line 2 is on top\n      clearanceRequired = (line2.flatLine || line2.dblSharpLine) ? 2.5 : 3.0;\n      if (line1.dblSharpLine) clearance -= 0.5;\n    } else { // line 1 is on top\n      clearanceRequired = (line1.flatLine || line1.dblSharpLine) ? 2.5 : 3.0;\n      if (line2.dblSharpLine) clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n  }\n\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  static applyAccidentals(voices, keySignature) {\n    const tickPositions = [];\n    const tickNoteMap = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(voice => {\n      const tickPosition = new Fraction(0, 1);\n      const notes = voice.getTickables();\n      notes.forEach(note => {\n        if (note.shouldIgnoreTicks()) return;\n\n        const notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    const music = new Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = 'C';\n\n    // Get the scale map, which represents the current state of each pitch\n    const scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(tick => {\n      const notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      const modifiedPitches = [];\n\n      const processNote = (note) => {\n        if (note.isRest() || note.shouldIgnoreTicks()) return;\n\n        // Go through each key and determine if an accidental should be\n        // applied\n        note.keys.forEach((keyString, keyIndex) => {\n          const key = music.getNoteParts(keyString.split('/')[0]);\n\n          // Force a natural for every key without an accidental\n          const accidentalString = key.accidental || 'n';\n          const pitch = key.root + accidentalString;\n\n          // Determine if the current pitch has the same accidental\n          // as the scale state\n          const sameAccidental = scaleMap[key.root] === pitch;\n\n          // Determine if an identical pitch in the chord already\n          // modified the accidental state\n          const previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n          // Add the accidental to the StaveNote\n          if (!sameAccidental || (sameAccidental && previouslyModified)) {\n            // Modify the scale map so that the root pitch has an\n            // updated state\n            scaleMap[key.root] = pitch;\n\n            // Create the accidental\n            const accidental = new Accidental(accidentalString);\n\n            // Attach the accidental to the StaveNote\n            note.addAccidental(keyIndex, accidental);\n\n            // Add the pitch to list of pitches that modified accidentals\n            modifiedPitches.push(pitch);\n          }\n        });\n\n        // process grace notes\n        note.getModifiers().forEach(modifier => {\n          if (modifier.getCategory() === 'gracenotegroups') {\n            modifier.getGraceNotes().forEach(processNote);\n          }\n        });\n      };\n\n      notes.forEach(processNote);\n    });\n  }\n\n  // Create accidental. `type` can be a value from the\n  // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n  // example: `#`, `##`, `b`, `n`, etc.\n  constructor(type = null) {\n    super();\n    this.setAttribute('type', 'Accidental');\n\n    L('New accidental: ', type);\n\n    this.note = null;\n    // The `index` points to a specific note in a chord.\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      // Font size for glyphs\n      font_scale: 38,\n\n      // Length of stroke across heads above or below the stave.\n      stroke_px: 3,\n\n      // Padding between accidental and parentheses on each side\n      parenLeftPadding: 2,\n      parenRightPadding: 2,\n    };\n\n    this.accidental = Flow.accidentalCodes(this.type);\n    if (!this.accidental) {\n      throw new Vex.RERR('ArgumentError', `Unknown accidental type: ${type}`);\n    }\n\n    // Cautionary accidentals have parentheses around them\n    this.cautionary = false;\n    this.parenLeft = null;\n    this.parenRight = null;\n\n    this.reset();\n  }\n\n  reset() {\n    const fontScale = this.render_options.font_scale;\n    this.glyph = new Glyph(this.accidental.code, fontScale);\n    this.glyph.setOriginX(1.0);\n\n    if (this.cautionary) {\n      this.parenLeft = new Glyph(Flow.accidentalCodes('{').code, fontScale);\n      this.parenRight = new Glyph(Flow.accidentalCodes('}').code, fontScale);\n      this.parenLeft.setOriginX(1.0);\n      this.parenRight.setOriginX(1.0);\n    }\n  }\n\n  getCategory() { return Accidental.CATEGORY; }\n\n  getWidth() {\n    const parenWidth = this.cautionary\n      ? (\n        getGlyphWidth(this.parenLeft) +\n        getGlyphWidth(this.parenRight) +\n        this.render_options.parenLeftPadding +\n        this.render_options.parenRightPadding\n      )\n      : 0;\n\n    return getGlyphWidth(this.glyph) + parenWidth;\n  }\n\n  // Attach this accidental to `note`, which must be a `StaveNote`.\n  setNote(note) {\n    if (!note) {\n      throw new Vex.RERR('ArgumentError', `Bad note value: ${note}`);\n    }\n\n    this.note = note;\n\n    // Accidentals attached to grace notes are rendered smaller.\n    if (this.note.getCategory() === 'gracenotes') {\n      this.render_options.font_scale = 25;\n      this.reset();\n    }\n  }\n\n  // If called, draws parenthesis around accidental.\n  setAsCautionary() {\n    this.cautionary = true;\n    this.render_options.font_scale = 28;\n    this.reset();\n    return this;\n  }\n\n  // Render accidental onto canvas.\n  draw() {\n    const {\n      context,\n      type, position, note, index, cautionary,\n      x_shift, y_shift,\n      glyph, parenLeft, parenRight,\n      render_options: { parenLeftPadding, parenRightPadding },\n    } = this;\n\n    this.checkContext();\n\n    if (!(note && (index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw accidental without a note and index.\");\n    }\n\n    // Figure out the start `x` and `y` coordinates for note and index.\n    const start = note.getModifierStartXY(position, index);\n    let accX = start.x + x_shift;\n    const accY = start.y + y_shift;\n    L('Rendering: ', type, accX, accY);\n\n    if (!cautionary) {\n      glyph.render(context, accX, accY);\n    } else {\n      // Render the accidental in parentheses.\n      parenRight.render(context, accX, accY);\n      accX -= getGlyphWidth(parenRight);\n      accX -= parenRightPadding;\n      accX -= this.accidental.parenRightPaddingAdjustment;\n      glyph.render(context, accX, accY);\n      accX -= getGlyphWidth(glyph);\n      accX -= parenLeftPadding;\n      parenLeft.render(context, accX, accY);\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\n\nexport class NoteSubGroup extends Modifier {\n  static get CATEGORY() { return 'notesubgroup'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(groups, state) {\n    if (!groups || groups.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < groups.length; ++i) {\n      const group = groups[i];\n      group.preFormat();\n      width += group.getWidth();\n    }\n\n    state.left_shift += width;\n    return true;\n  }\n\n  constructor(subNotes) {\n    super();\n    this.setAttribute('type', 'NoteSubGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.subNotes = subNotes;\n    this.subNotes.forEach(subNote => { subNote.ignore_ticks = false; });\n    this.width = 0;\n    this.preFormatted = false;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.voice.addTickables(this.subNotes);\n\n    return this;\n  }\n\n  getCategory() { return NoteSubGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw notes without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n\n    // Draw notes\n    this.subNotes.forEach(subNote => subNote.setContext(this.context).drawWithStyle());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class StaveTie extends Element {\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, style: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font) { this.font = font; return this; }\n  setDirection(direction) { this.direction = direction; return this; }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2; cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n          (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px, last_x_px) {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// / [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { StaveTie } from './stavetie';\n\nexport class TabTie extends StaveTie {\n  static createHammeron(notes) {\n    return new TabTie(notes, 'H');\n  }\n\n  static createPulloff(notes) {\n    return new TabTie(notes, 'P');\n  }\n\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, text);\n    this.setAttribute('type', 'TabTie');\n\n    this.render_options.cp1 = 9;\n    this.render_options.cp2 = 11;\n    this.render_options.y_shift = 3;\n\n    this.setNotes(notes);\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: -1, // Tab tie's are always face up.\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Formatter } from './formatter';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabTie } from './tabtie';\nimport { StaveNote } from './stavenote';\n\n// To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\nfunction L(...args) { if (GraceNoteGroup.DEBUG) Vex.L('Vex.Flow.GraceNoteGroup', args); }\n\nexport class GraceNoteGroup extends Modifier {\n  static get CATEGORY() { return 'gracenotegroups'; }\n\n  // Arrange groups inside a `ModifierContext`\n  static format(gracenote_groups, state) {\n    const group_spacing_stave = 4;\n    const group_spacing_tab = 0;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    const group_list = [];\n    let prev_note = null;\n    let shiftL = 0;\n\n    for (let i = 0; i < gracenote_groups.length; ++i) {\n      const gracenote_group = gracenote_groups[i];\n      const note = gracenote_group.getNote();\n      const is_stavenote = (note.getCategory() === StaveNote.CATEGORY);\n      const spacing = (is_stavenote ? group_spacing_stave : group_spacing_tab);\n\n      if (is_stavenote && note !== prev_note) {\n        // Iterate through all notes to get the displaced pixels\n        for (let n = 0; n < note.keys.length; ++n) {\n          const props_tmp = note.getKeyProps()[n];\n          shiftL = (props_tmp.displaced ? note.getExtraLeftPx() : shiftL);\n        }\n        prev_note = note;\n      }\n\n      group_list.push({ shift: shiftL, gracenote_group, spacing });\n    }\n\n    // If first note left shift in case it is displaced\n    let group_shift = group_list[0].shift;\n    let formatWidth;\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      group_shift = Math.max(formatWidth, group_shift);\n    }\n\n    for (let i = 0; i < group_list.length; ++i) {\n      const gracenote_group = group_list[i].gracenote_group;\n      formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n      gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift));\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  constructor(grace_notes, show_slur) {\n    super();\n    this.setAttribute('type', 'GraceNoteGroup');\n\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.LEFT;\n    this.grace_notes = grace_notes;\n    this.width = 0;\n\n    this.preFormatted = false;\n\n    this.show_slur = show_slur;\n    this.slur = null;\n\n    this.formatter = new Formatter();\n    this.voice = new Voice({\n      num_beats: 4,\n      beat_value: 4,\n      resolution: Flow.RESOLUTION,\n    }).setStrict(false);\n\n    this.render_options = {\n      slur_y_shift: 0,\n    };\n\n    this.beams = [];\n\n    this.voice.addTickables(this.grace_notes);\n\n    return this;\n  }\n\n  getCategory() { return GraceNoteGroup.CATEGORY; }\n\n  preFormat() {\n    if (this.preFormatted) return;\n\n    this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n    this.setWidth(this.formatter.getMinTotalWidth());\n    this.preFormatted = true;\n  }\n\n  beamNotes(grace_notes) {\n    grace_notes = grace_notes || this.grace_notes;\n    if (grace_notes.length > 1) {\n      const beam = new Beam(grace_notes);\n\n      beam.render_options.beam_width = 3;\n      beam.render_options.partial_beam_length = 4;\n\n      this.beams.push(beam);\n    }\n\n    return this;\n  }\n\n  setNote(note) {\n    this.note = note;\n  }\n  setWidth(width) {\n    this.width = width;\n  }\n  getWidth() {\n    return this.width;\n  }\n  getGraceNotes() {\n    return this.grace_notes;\n  }\n  draw() {\n    this.checkContext();\n\n    const note = this.getNote();\n\n    L('Drawing grace note group for:', note);\n\n    if (!(note && (this.index !== null))) {\n      throw new Vex.RuntimeError('NoAttachedNote',\n        \"Can't draw grace note without a parent note and parent note index.\");\n    }\n\n    this.setRendered();\n    this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n\n    // Draw notes\n    this.grace_notes.forEach(graceNote => {\n      graceNote.setContext(this.context).draw();\n    });\n\n    // Draw beam\n    this.beams.forEach(beam => {\n      beam.setContext(this.context).draw();\n    });\n\n    if (this.show_slur) {\n      // Create and draw slur\n      const is_stavenote = (this.getNote().getCategory() === StaveNote.CATEGORY);\n      const TieClass = (is_stavenote ? StaveTie : TabTie);\n\n      this.slur = new TieClass({\n        last_note: this.grace_notes[0],\n        first_note: note,\n        first_indices: [0],\n        last_indices: [0],\n      });\n\n      this.slur.render_options.cp2 = 12;\n      this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n      this.slur.setContext(this.context).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\nexport class Stroke extends Modifier {\n  static get CATEGORY() { return 'strokes'; }\n  static get Type() {\n    return {\n      BRUSH_DOWN: 1,\n      BRUSH_UP: 2,\n      ROLL_DOWN: 3, // Arpeggiated chord\n      ROLL_UP: 4,   // Arpeggiated chord\n      RASQUEDO_DOWN: 5,\n      RASQUEDO_UP: 6,\n      ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n    };\n  }\n\n  // Arrange strokes inside `ModifierContext`\n  static format(strokes, state) {\n    const left_shift = state.left_shift;\n    const stroke_spacing = 0;\n\n    if (!strokes || strokes.length === 0) return this;\n\n    const strokeList = strokes.map((stroke) => {\n      const note = stroke.getNote();\n      if (note instanceof StaveNote) {\n        const { line, displaced } = note.getKeyProps()[stroke.getIndex()];\n        const shift = displaced ? note.getExtraLeftPx() : 0;\n        return { line, shift, stroke };\n      } else {\n        const { str: string } = note.getPositions()[stroke.getIndex()];\n        return { line: string, shift: 0, stroke };\n      }\n    });\n\n    const strokeShift = left_shift;\n\n    // There can only be one stroke .. if more than one, they overlay each other\n    const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n      stroke.setXShift(strokeShift + shift);\n      return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n    }, 0);\n\n    state.left_shift += xShift;\n    return true;\n  }\n\n  constructor(type, options) {\n    super();\n    this.setAttribute('type', 'Stroke');\n\n    this.note = null;\n    this.options = Vex.Merge({}, options);\n\n    // multi voice - span stroke across all voices if true\n    this.all_voices = 'all_voices' in this.options ? this.options.all_voices : true;\n\n    // multi voice - end note of stroke, set in draw()\n    this.note_end = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.LEFT;\n\n    this.render_options = {\n      font_scale: 38,\n      stroke_px: 3,\n      stroke_spacing: 10,\n    };\n\n    this.font = {\n      family: 'serif',\n      size: 10,\n      weight: 'bold italic',\n    };\n\n    this.setXShift(0);\n    this.setWidth(10);\n  }\n\n  getCategory() { return Stroke.CATEGORY; }\n  getPosition() { return this.position; }\n  addEndNote(note) { this.note_end = note; return this; }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw stroke without a note and index.\");\n    }\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let ys = this.note.getYs();\n    let topY = start.y;\n    let botY = start.y;\n    const x = start.x - 5;\n    const line_space = this.note.stave.options.spacing_between_lines_px;\n\n    const notes = this.getModifierContext().getModifiers(this.note.getCategory());\n    for (let i = 0; i < notes.length; i++) {\n      ys = notes[i].getYs();\n      for (let n = 0; n < ys.length; n++) {\n        if (this.note === notes[i] || this.all_voices) {\n          topY = Vex.Min(topY, ys[n]);\n          botY = Vex.Max(botY, ys[n]);\n        }\n      }\n    }\n\n    let arrow;\n    let arrow_shift_x;\n    let arrow_y;\n    let text_shift_x;\n    let text_y;\n    switch (this.type) {\n      case Stroke.Type.BRUSH_DOWN:\n        arrow = 'vc3';\n        arrow_shift_x = -3;\n        arrow_y = topY - (line_space / 2) + 10;\n        botY += (line_space / 2);\n        break;\n      case Stroke.Type.BRUSH_UP:\n        arrow = 'v11';\n        arrow_shift_x = 0.5;\n        arrow_y = botY + (line_space / 2);\n        topY -= (line_space / 2);\n        break;\n      case Stroke.Type.ROLL_DOWN:\n      case Stroke.Type.RASQUEDO_DOWN:\n        arrow = 'vc3';\n        arrow_shift_x = -3;\n        text_shift_x = this.x_shift + arrow_shift_x - 2;\n        if (this.note instanceof StaveNote) {\n          topY += 1.5 * line_space;\n          if ((botY - topY) % 2 !== 0) {\n            botY += 0.5 * line_space;\n          } else {\n            botY += line_space;\n          }\n          arrow_y = topY - line_space;\n          text_y = botY + line_space + 2;\n        } else {\n          topY += 1.5 * line_space;\n          botY += line_space;\n          arrow_y = topY - 0.75 * line_space;\n          text_y = botY + 0.25 * line_space;\n        }\n        break;\n      case Stroke.Type.ROLL_UP:\n      case Stroke.Type.RASQUEDO_UP:\n        arrow = 'v52';\n        arrow_shift_x = -4;\n        text_shift_x = this.x_shift + arrow_shift_x - 1;\n        if (this.note instanceof StaveNote) {\n          arrow_y = line_space / 2;\n          topY += 0.5 * line_space;\n          if ((botY - topY) % 2 === 0) {\n            botY += line_space / 2;\n          }\n          arrow_y = botY + 0.5 * line_space;\n          text_y = topY - 1.25 * line_space;\n        } else {\n          topY += 0.25 * line_space;\n          botY += 0.5 * line_space;\n          arrow_y = botY + 0.25 * line_space;\n          text_y = topY - line_space;\n        }\n        break;\n      case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n        topY += 0.5 * line_space;\n        botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n        break;\n      default:\n        throw new Vex.RERR('InvalidType', `The stroke type ${this.type} does not exist`);\n    }\n\n    // Draw the stroke\n    if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n      this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\n    } else {\n      if (this.note instanceof StaveNote) {\n        for (let i = topY; i <= botY; i += line_space) {\n          Glyph.renderGlyph(\n            this.context,\n            x + this.x_shift - 4,\n            i,\n            this.render_options.font_scale,\n            'va3'\n          );\n        }\n      } else {\n        let i;\n        for (i = topY; i <= botY; i += 10) {\n          Glyph.renderGlyph(\n            this.context,\n            x + this.x_shift - 4,\n            i,\n            this.render_options.font_scale,\n            'va3'\n          );\n        }\n        if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n          text_y = i + 0.25 * line_space;\n        }\n      }\n    }\n\n    if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n      return; // skip drawing arrow heads or text\n    }\n\n    // Draw the arrow head\n    Glyph.renderGlyph(\n      this.context,\n      x + this.x_shift + arrow_shift_x,\n      arrow_y,\n      this.render_options.font_scale,\n      arrow\n    );\n\n    // Draw the rasquedo \"R\"\n    if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      this.context.fillText('R', x + text_shift_x, text_y);\n      this.context.restore();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Renderer } from './renderer';\nimport { StaveNote } from './stavenote';\n\nexport class StringNumber extends Modifier {\n  static get CATEGORY() { return 'stringnumber'; }\n\n  // ## Static Methods\n  // Arrange string numbers inside a `ModifierContext`\n  static format(nums, state) {\n    const left_shift = state.left_shift;\n    const right_shift = state.right_shift;\n    const num_spacing = 1;\n\n    if (!nums || nums.length === 0) return this;\n\n    const nums_list = [];\n    let prev_note = null;\n    let shift_left = 0;\n    let shift_right = 0;\n\n    let i;\n    let num;\n    let note;\n    let pos;\n    let props_tmp;\n    for (i = 0; i < nums.length; ++i) {\n      num = nums[i];\n      note = num.getNote();\n\n      for (i = 0; i < nums.length; ++i) {\n        num = nums[i];\n        note = num.getNote();\n        pos = num.getPosition();\n        const props = note.getKeyProps()[num.getIndex()];\n\n        if (note !== prev_note) {\n          for (let n = 0; n < note.keys.length; ++n) {\n            props_tmp = note.getKeyProps()[n];\n            if (left_shift === 0) {\n              shift_left = props_tmp.displaced ? note.getExtraLeftPx() : shift_left;\n            }\n            if (right_shift === 0) {\n              shift_right = props_tmp.displaced ? note.getExtraRightPx() : shift_right;\n            }\n          }\n          prev_note = note;\n        }\n\n        nums_list.push({\n          pos,\n          note,\n          num,\n          line: props.line,\n          shiftL: shift_left,\n          shiftR: shift_right,\n        });\n      }\n    }\n\n    // Sort string numbers by line number.\n    nums_list.sort((a, b) => b.line - a.line);\n\n    // TODO: This variable never gets assigned to anything. Is that a bug or can this be removed?\n    let num_shiftL = 0; // eslint-disable-line\n    let num_shiftR = 0;\n    let x_widthL = 0;\n    let x_widthR = 0;\n    let last_line = null;\n    let last_note = null;\n    for (i = 0; i < nums_list.length; ++i) {\n      let num_shift = 0;\n      note = nums_list[i].note;\n      pos = nums_list[i].pos;\n      num = nums_list[i].num;\n      const line = nums_list[i].line;\n      const shiftL = nums_list[i].shiftL;\n      const shiftR = nums_list[i].shiftR;\n\n      // Reset the position of the string number every line.\n      if (line !== last_line || note !== last_note) {\n        num_shiftL = left_shift + shiftL;\n        num_shiftR = right_shift + shiftR;\n      }\n\n      const num_width = num.getWidth() + num_spacing;\n      if (pos === Modifier.Position.LEFT) {\n        num.setXShift(left_shift);\n        num_shift = shift_left + num_width; // spacing\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\n      } else if (pos === Modifier.Position.RIGHT) {\n        num.setXShift(num_shiftR);\n        num_shift += num_width; // spacing\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\n      }\n      last_line = line;\n      last_note = note;\n    }\n\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n    return true;\n  }\n\n  constructor(number) {\n    super();\n    this.setAttribute('type', 'StringNumber');\n\n    this.note = null;\n    this.last_note = null;\n    this.index = null;\n    this.string_number = number;\n    this.setWidth(20); // ???\n    this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n    this.x_shift = 0;\n    this.y_shift = 0;\n    this.x_offset = 0; // Horizontal offset from default\n    this.y_offset = 0; // Vertical offset from default\n    this.dashed = true; // true - draw dashed extension  false - no extension\n    this.leg = Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\n    this.radius = 8;\n    this.font = {\n      family: 'sans-serif',\n      size: 10,\n      weight: 'bold',\n    };\n  }\n  getCategory() { return StringNumber.CATEGORY; }\n  getNote() { return this.note; }\n  setNote(note) { this.note = note; return this; }\n  getIndex() { return this.index; }\n  setIndex(index) { this.index = index; return this; }\n\n  setLineEndType(leg) {\n    if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n      this.leg = leg;\n    }\n    return this;\n  }\n\n  setStringNumber(number) { this.string_number = number; return this; }\n  setOffsetX(x) { this.x_offset = x; return this; }\n  setOffsetY(y) { this.y_offset = y; return this; }\n  setLastNote(note) { this.last_note = note; return this; }\n  setDashed(dashed) { this.dashed = dashed; return this; }\n\n  draw() {\n    const ctx = this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw string number without a note and index.\");\n    }\n    this.setRendered();\n\n    const line_space = this.note.stave.options.spacing_between_lines_px;\n\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let dot_x = (start.x + this.x_shift + this.x_offset);\n    let dot_y = start.y + this.y_shift + this.y_offset;\n\n    switch (this.position) {\n      case Modifier.Position.ABOVE:\n      case Modifier.Position.BELOW: {\n        const stem_ext = this.note.getStemExtents();\n        let top = stem_ext.topY;\n        let bottom = stem_ext.baseY + 2;\n\n        if (this.note.stem_direction === StaveNote.STEM_DOWN) {\n          top = stem_ext.baseY;\n          bottom = stem_ext.topY - 2;\n        }\n\n        if (this.position === Modifier.Position.ABOVE) {\n          dot_y = this.note.hasStem()\n            ? top - (line_space * 1.75)\n            : start.y - (line_space * 1.75);\n        } else {\n          dot_y = this.note.hasStem()\n            ? bottom + (line_space * 1.5)\n            : start.y + (line_space * 1.75);\n        }\n\n        dot_y += this.y_shift + this.y_offset;\n\n        break;\n      } case Modifier.Position.LEFT:\n        dot_x -= (this.radius / 2) + 5;\n        break;\n      case Modifier.Position.RIGHT:\n        dot_x += (this.radius / 2) + 6;\n        break;\n      default:\n        throw new Vex.RERR(\n          'InvalidPosition', `The position ${this.position} is invalid`\n        );\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n    ctx.lineWidth = 1.5;\n    ctx.stroke();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const x = dot_x - ctx.measureText(this.string_number).width / 2;\n    ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n\n    if (this.last_note != null) {\n      const end = this.last_note.getStemX() - this.note.getX() + 5;\n      ctx.strokeStyle = '#000000';\n      ctx.lineCap = 'round';\n      ctx.lineWidth = 0.6;\n      if (this.dashed) {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n      } else {\n        Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n      }\n\n      let len;\n      let pattern;\n      switch (this.leg) {\n        case Renderer.LineEndType.UP:\n          len = -10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        case Renderer.LineEndType.DOWN:\n          len = 10;\n          pattern = this.dashed ? [3, 3] : [3, 0];\n          Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n          break;\n        default:\n          break;\n      }\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\n\n// To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\nfunction L(...args) { if (Articulation.DEBUG) Vex.L('Vex.Flow.Articulation', args); }\n\nconst { ABOVE, BELOW } = Modifier.Position;\n\nconst roundToNearestHalf = (mathFn, value) => mathFn(value / 0.5) * 0.5;\n\n// This includes both staff and ledger lines\nconst isWithinLines = (line, position) => position === ABOVE ? line <= 5 : line >= 1;\n\nconst getRoundingFunction = (line, position) => {\n  if (isWithinLines(line, position)) {\n    if (position === ABOVE) {\n      return Math.ceil;\n    } else {\n      return Math.floor;\n    }\n  } else {\n    return Math.round;\n  }\n};\n\nconst snapLineToStaff = (canSitBetweenLines, line, position, offsetDirection) => {\n  // Initially, snap to nearest staff line or space\n  const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n  const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n  const onStaffLine = snappedLine % 1 === 0;\n\n  if (canSnapToStaffSpace && onStaffLine) {\n    const HALF_STAFF_SPACE = 0.5;\n    return snappedLine + (HALF_STAFF_SPACE * -offsetDirection);\n  } else {\n    return snappedLine;\n  }\n};\n\nconst isStaveNote = (note) => {\n  const noteCategory = note.getCategory();\n  return noteCategory === 'stavenotes' || noteCategory === 'gracenotes';\n};\n\nconst getTopY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stemBaseY;\n      }\n    } else {\n      return Math.min(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemTipY;\n      } else {\n        return stave.getYForTopText(textLine);\n      }\n    } else {\n      return stave.getYForTopText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\nconst getBottomY = (note, textLine) => {\n  const stave = note.getStave();\n  const stemDirection = note.getStemDirection();\n  const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n\n  if (isStaveNote(note)) {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stemBaseY;\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return Math.max(...note.getYs());\n    }\n  } else if (note.getCategory() === 'tabnotes') {\n    if (note.hasStem()) {\n      if (stemDirection === Stem.UP) {\n        return stave.getYForBottomText(textLine);\n      } else {\n        return stemTipY;\n      }\n    } else {\n      return stave.getYForBottomText(textLine);\n    }\n  } else {\n    throw new Vex.RERR(\n      'UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes'\n    );\n  }\n};\n\n// Gets the initial offset of the articulation from the y value of the starting position.\n// This is required because the top/bottom text positions already have spacing applied to\n// provide a \"visually pleasent\" default position. However the y values provided from\n// the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n// normalizes this asymmetry.\nconst getInitialOffset = (note, position) => {\n  const isOnStemTip = (\n    (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n    (position === BELOW && note.getStemDirection() === Stem.DOWN)\n  );\n\n  if (isStaveNote(note)) {\n    if (note.hasStem() && isOnStemTip) {\n      return 0.5;\n    } else {\n      // this amount is larger than the stem-tip offset because we start from\n      // the center of the notehead\n      return 1;\n    }\n  } else {\n    if (note.hasStem() && isOnStemTip) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\n\nexport class Articulation extends Modifier {\n  static get CATEGORY() { return 'articulations'; }\n  static get INITIAL_OFFSET() { return -0.5; }\n\n  // FIXME:\n  // Most of the complex formatting logic (ie: snapping to space) is\n  // actually done in .render(). But that logic belongs in this method.\n  //\n  // Unfortunately, this isn't possible because, by this point, stem lengths\n  // have not yet been finalized. Finalized stem lengths are required to determine the\n  // initial position of any stem-side articulation.\n  //\n  // This indicates that all objects should have their stave set before being\n  // formatted. It can't be an optional if you want accurate vertical positioning.\n  // Consistently positioned articulations that play nice with other modifiers\n  // won't be possible until we stop relying on render-time formatting.\n  //\n  // Ideally, when this function has completed, the vertical articulation positions\n  // should be ready to render without further adjustment. But the current state\n  // is far from this ideal.\n  static format(articulations, state) {\n    if (!articulations || articulations.length === 0) return false;\n\n    const isAbove = artic => artic.getPosition() === ABOVE;\n    const isBelow = artic => artic.getPosition() === BELOW;\n    const margin = 0.5;\n    const getIncrement = (articulation, line, position) =>\n      roundToNearestHalf(\n        getRoundingFunction(line, position),\n        (articulation.glyph.getMetrics().height / 10) + margin\n      );\n\n    articulations\n      .filter(isAbove)\n      .forEach(articulation => {\n        articulation.setTextLine(state.top_text_line);\n        state.top_text_line += getIncrement(articulation, state.top_text_line, ABOVE);\n      });\n\n    articulations\n      .filter(isBelow)\n      .forEach(articulation => {\n        articulation.setTextLine(state.text_line);\n        state.text_line += getIncrement(articulation, state.text_line, BELOW);\n      });\n\n    const width = articulations\n      .map(articulation => articulation.getWidth())\n      .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  static easyScoreHook({ articulations }, note, builder) {\n    if (!articulations) return;\n\n    const articNameToCode = {\n      staccato: 'a.',\n      tenuto: 'a-',\n    };\n\n    articulations\n      .split(',')\n      .map(articString => articString.trim().split('.'))\n      .map(([name, position]) => {\n        const artic = { type: articNameToCode[name] };\n        if (position) artic.position = Modifier.PositionString[position];\n        return builder.getFactory().Articulation(artic);\n      })\n      .map(artic => note.addModifier(0, artic));\n  }\n\n  // Create a new articulation of type `type`, which is an entry in\n  // `Vex.Flow.articulationCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Articulation');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = BELOW;\n    this.render_options = {\n      font_scale: 38,\n    };\n\n    this.articulation = Flow.articulationCodes(this.type);\n    if (!this.articulation) {\n      throw new Vex.RERR('ArgumentError', `Articulation not found: ${this.type}`);\n    }\n\n    this.glyph = new Glyph(this.articulation.code, this.render_options.font_scale);\n\n    this.setWidth(this.glyph.getMetrics().width);\n  }\n\n  getCategory() { return Articulation.CATEGORY; }\n\n  // Render articulation in position next to note.\n  draw() {\n    const {\n      note, index, position, glyph,\n      articulation: { between_lines: canSitBetweenLines },\n      text_line: textLine,\n      context: ctx,\n    } = this;\n\n    this.checkContext();\n\n    if (!note || index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Articulation without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const stave = note.getStave();\n    const staffSpace = stave.getSpacingBetweenLines();\n    const isTab = note.getCategory() === 'tabnotes';\n\n    // Articulations are centered over/under the note head.\n    const { x } = note.getModifierStartXY(position, index);\n    const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n\n    const initialOffset = getInitialOffset(note, position);\n\n    let y = {\n      [ABOVE]: () => {\n        glyph.setOrigin(0.5, 1);\n        const y = getTopY(note, textLine) - ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n      [BELOW]: () => {\n        glyph.setOrigin(0.5, 0);\n        const y = getBottomY(note, textLine) + ((textLine + initialOffset) * staffSpace);\n        return shouldSitOutsideStaff\n          ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y)\n          : y;\n      },\n    }[position]();\n\n    if (!isTab) {\n      const offsetDirection = position === ABOVE ? -1 : +1;\n      const noteLine = isTab ? note.positions[index].str : note.getKeyProps()[index].line;\n      const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n      const articLine = distanceFromNote + noteLine;\n      const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n\n      if (isWithinLines(snappedLine, position)) glyph.setOrigin(0.5, 0.5);\n\n      y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n    }\n\n    L(`Rendering articulation at (x: ${x}, y: ${y})`);\n\n    glyph.render(ctx, x, y);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\nimport { Vex } from './vex';\nimport { Tickable } from './tickable';\nimport { Fraction } from './fraction';\n\nexport class TickContext extends Tickable {\n  static getNextContext(tContext) {\n    const contexts = tContext.tContexts;\n    const index = contexts.indexOf(tContext);\n\n    return contexts[index + 1];\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'TickContext');\n    this.currentTick = new Fraction(0, 1);\n    this.maxTicks = new Fraction(0, 1);\n    this.minTicks = null;\n    this.padding = 3;     // padding on each side (width += padding * 2)\n    this.x = 0;\n    this.xBase = 0;        // base x position without xOffset\n    this.xOffset = 0;      // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n    this.tickables = [];   // Notes, tabs, chords, lyrics.\n    this.notePx = 0;       // width of widest note in this context\n    this.extraLeftPx = 0;  // Extra left pixels for modifers & displace notes\n    this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n    this.tContexts = [];   // Parent array of tick contexts\n  }\n\n  getX() { return this.x; }\n  setX(x) { this.x = x; this.xBase = x; this.xOffset = 0; return this; }\n  getXBase() { return this.xBase; } // use of xBase and xOffset is optional, avoids offset creep\n  setXBase(xBase) { this.xBase = xBase; this.x = xBase + this.xOffset; }\n  getXOffset() { return this.xOffset; }\n  setXOffset(xOffset) { this.xOffset = xOffset; this.x = this.xBase + xOffset; }\n  getWidth() { return this.width + (this.padding * 2); }\n  setPadding(padding) { this.padding = padding; return this; }\n  getMaxTicks() { return this.maxTicks; }\n  getMinTicks() { return this.minTicks; }\n  getTickables() { return this.tickables; }\n\n  getCenterAlignedTickables() {\n    return this.tickables.filter(tickable => tickable.isCenterAligned());\n  }\n\n  // Get widths context, note and left/right modifiers for formatting\n  getMetrics() {\n    const { width, notePx, extraLeftPx, extraRightPx } = this;\n    return { width, notePx, extraLeftPx, extraRightPx };\n  }\n\n  getCurrentTick() { return this.currentTick; }\n  setCurrentTick(tick) {\n    this.currentTick = tick;\n    this.preFormatted = false;\n  }\n\n  // ### DEPRECATED ###\n  // Get left & right pixels used for modifiers. THIS METHOD IS DEPRECATED. Use\n  // the getMetrics() method instead!\n  getExtraPx() {\n    let left_shift = 0;\n    let right_shift = 0;\n    let extraLeftPx = 0;\n    let extraRightPx = 0;\n    for (let i = 0; i < this.tickables.length; i++) {\n      extraLeftPx = Math.max(this.tickables[i].extraLeftPx || 0, extraLeftPx);\n      extraRightPx = Math.max(this.tickables[i].extraRightPx || 0, extraRightPx);\n      const mContext = this.tickables[i].modifierContext;\n      if (mContext && mContext != null) {\n        left_shift = Math.max(left_shift, mContext.state.left_shift);\n        right_shift = Math.max(right_shift, mContext.state.right_shift);\n      }\n    }\n    return {\n      left: left_shift,\n      right: right_shift,\n      extraLeft: extraLeftPx,\n      extraRight: extraRightPx,\n    };\n  }\n\n  addTickable(tickable) {\n    if (!tickable) {\n      throw new Vex.RERR('BadArgument', 'Invalid tickable added.');\n    }\n\n    if (!tickable.shouldIgnoreTicks()) {\n      this.ignore_ticks = false;\n\n      const ticks = tickable.getTicks();\n\n      if (ticks.greaterThan(this.maxTicks)) {\n        this.maxTicks = ticks.clone();\n      }\n\n      if (this.minTicks == null) {\n        this.minTicks = ticks.clone();\n      } else if (ticks.lessThan(this.minTicks)) {\n        this.minTicks = ticks.clone();\n      }\n    }\n\n    tickable.setTickContext(this);\n    this.tickables.push(tickable);\n    this.preFormatted = false;\n    return this;\n  }\n\n  preFormat() {\n    if (this.preFormatted) return this;\n\n    for (let i = 0; i < this.tickables.length; ++i) {\n      const tickable = this.tickables[i];\n      tickable.preFormat();\n      const metrics = tickable.getMetrics();\n\n      // Maintain max extra pixels from all tickables in the context\n      this.extraLeftPx = Math.max(this.extraLeftPx, metrics.extraLeftPx + metrics.modLeftPx);\n      this.extraRightPx = Math.max(this.extraRightPx, metrics.extraRightPx + metrics.modRightPx);\n\n      // Maintain the widest note for all tickables in the context\n      this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\n      // Recalculate the tick context total width\n      this.width = this.notePx + this.extraLeftPx + this.extraRightPx;\n    }\n\n    return this;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return this;\n    this.postFormatted = true;\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { TickContext } from './tickcontext';\nimport { StaveNote } from './stavenote';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\nfunction L(...args) { if (Ornament.DEBUG) Vex.L('Vex.Flow.Ornament', args); }\n\nexport class Ornament extends Modifier {\n  static get CATEGORY() { return 'ornaments'; }\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  static format(ornaments, state) {\n    if (!ornaments || ornaments.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < ornaments.length; ++i) {\n      const ornament = ornaments[i];\n      const increment = 2;\n\n      width = Math.max(ornament.getWidth(), width);\n\n      if (ornament.getPosition() === Modifier.Position.ABOVE) {\n        ornament.setTextLine(state.top_text_line);\n        state.top_text_line += increment;\n      } else {\n        ornament.setTextLine(state.text_line);\n        state.text_line += increment;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // Create a new ornament of type `type`, which is an entry in\n  // `Vex.Flow.ornamentCodes` in `tables.js`.\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Ornament');\n\n    this.note = null;\n    this.index = null;\n    this.type = type;\n    this.position = Modifier.Position.ABOVE;\n    this.delayed = false;\n\n    this.accidentalUpper = null;\n    this.accidentalLower = null;\n\n    this.render_options = {\n      font_scale: 38,\n      accidentalLowerPadding: 3,\n      accidentalUpperPadding: 3,\n    };\n\n    this.ornament = Flow.ornamentCodes(this.type);\n    if (!this.ornament) {\n      throw new Vex.RERR('ArgumentError', `Ornament not found: '${this.type}'`);\n    }\n\n    this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale);\n    this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n  }\n\n  getCategory() { return Ornament.CATEGORY; }\n\n  // Set whether the ornament is to be delayed\n  setDelayed(delayed) { this.delayed = delayed; return this; }\n\n  // Set the upper accidental for the ornament\n  setUpperAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalUpper = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalUpper.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Set the lower accidental for the ornament\n  setLowerAccidental(accid) {\n    const scale = this.render_options.font_scale / 1.3;\n    this.accidentalLower = new Glyph(Flow.accidentalCodes(accid).code, scale);\n    this.accidentalLower.setOrigin(0.5, 1.0);\n    return this;\n  }\n\n  // Render ornament in position next to note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note || this.index == null) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Ornament without a note and index.\");\n    }\n\n    this.setRendered();\n\n    const ctx = this.context;\n    const stemDir = this.note.getStemDirection();\n    const stave = this.note.getStave();\n\n    // Get stem extents\n    const stemExtents = this.note.getStem().getExtents();\n    let y = stemDir === StaveNote.STEM_DOWN ? stemExtents.baseY : stemExtents.topY;\n\n    // TabNotes don't have stems attached to them. Tab stems are rendered\n    // outside the stave.\n    if (this.note.getCategory() === 'tabnotes') {\n      if (this.note.hasStem()) {\n        if (stemDir === StaveNote.STEM_DOWN) {\n          y = stave.getYForTopText(this.text_line);\n        }\n      } else { // Without a stem\n        y = stave.getYForTopText(this.text_line);\n      }\n    }\n\n    const isPlacedOnNoteheadSide = stemDir === StaveNote.STEM_DOWN;\n    const spacing = stave.getSpacingBetweenLines();\n    let lineSpacing = 1;\n\n    // Beamed stems are longer than quarter note stems, adjust accordingly\n    if (!isPlacedOnNoteheadSide && this.note.beam) {\n      lineSpacing += 0.5;\n    }\n\n    const totalSpacing = spacing * (this.text_line + lineSpacing);\n    const glyphYBetweenLines = y - totalSpacing;\n\n    // Get initial coordinates for the modifier position\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let glyphX = start.x;\n    let glyphY = Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n    glyphY += this.y_shift;\n\n    // Ajdust x position if ornament is delayed\n    if (this.delayed) {\n      let delayXShift = 0;\n      if (this.delayXShift !== undefined) {\n        delayXShift = this.delayXShift;\n      } else {\n        delayXShift += this.glyph.getMetrics().width / 2;\n        const nextContext = TickContext.getNextContext(this.note.getTickContext());\n        if (nextContext) {\n          delayXShift += (nextContext.getX() - glyphX) * 0.5;\n        } else {\n          delayXShift += (stave.x + stave.width - glyphX) * 0.5;\n        }\n        this.delayXShift = delayXShift;\n      }\n      glyphX += delayXShift;\n    }\n\n    L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n\n    if (this.accidentalLower) {\n      this.accidentalLower.render(ctx, glyphX, glyphY);\n      glyphY -= this.accidentalLower.getMetrics().height;\n      glyphY -= this.render_options.accidentalLowerPadding;\n    }\n\n    this.glyph.render(ctx, glyphX, glyphY);\n    glyphY -= this.glyph.getMetrics().height;\n\n    if (this.accidentalUpper) {\n      glyphY -= this.render_options.accidentalUpperPadding;\n      this.accidentalUpper.render(ctx, glyphX, glyphY);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n\n// To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\nfunction L(...args) { if (Annotation.DEBUG) Vex.L('Vex.Flow.Annotation', args); }\n\nexport class Annotation extends Modifier {\n  static get CATEGORY() { return 'annotations'; }\n\n  // Text annotations can be positioned and justified relative to the note.\n  static get Justify() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get JustifyString() {\n    return {\n      left: Annotation.Justify.LEFT,\n      right: Annotation.Justify.RIGHT,\n      center: Annotation.Justify.CENTER,\n      centerStem: Annotation.Justify.CENTER_STEM,\n    };\n  }\n\n  static get VerticalJustify() {\n    return {\n      TOP: 1,\n      CENTER: 2,\n      BOTTOM: 3,\n      CENTER_STEM: 4,\n    };\n  }\n\n  static get VerticalJustifyString() {\n    return {\n      above: Annotation.VerticalJustify.TOP,\n      top: Annotation.VerticalJustify.TOP,\n      below: Annotation.VerticalJustify.BOTTOM,\n      bottom: Annotation.VerticalJustify.BOTTOM,\n      center: Annotation.VerticalJustify.CENTER,\n      centerStem: Annotation.VerticalJustify.CENTER_STEM,\n    };\n  }\n\n  // Arrange annotations within a `ModifierContext`\n  static format(annotations, state) {\n    if (!annotations || annotations.length === 0) return false;\n\n    let width = 0;\n    for (let i = 0; i < annotations.length; ++i) {\n      const annotation = annotations[i];\n      width = Math.max(annotation.getWidth(), width);\n      if (annotation.getPosition() === Modifier.Position.ABOVE) {\n        annotation.setTextLine(state.top_text_line);\n        state.top_text_line++;\n      } else {\n        annotation.setTextLine(state.text_line);\n        state.text_line++;\n      }\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  }\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  // Create a new `Annotation` with the string `text`.\n  constructor(text) {\n    super();\n    this.setAttribute('type', 'Annotation');\n\n    this.note = null;\n    this.index = null;\n    this.text = text;\n    this.justification = Annotation.Justify.CENTER;\n    this.vert_justification = Annotation.VerticalJustify.TOP;\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    // The default width is calculated from the text.\n    this.setWidth(Flow.textWidth(text));\n  }\n\n  getCategory() { return Annotation.CATEGORY; }\n\n  // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n  setFont(family, size, weight) {\n    this.font = { family, size, weight };\n    return this;\n  }\n\n  // Set vertical position of text (above or below stave). `just` must be\n  // a value in `Annotation.VerticalJustify`.\n  setVerticalJustification(just) {\n    this.vert_justification = typeof (just) === 'string'\n      ? Annotation.VerticalJustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Get and set horizontal justification. `justification` is a value in\n  // `Annotation.Justify`.\n  getJustification() { return this.justification; }\n  setJustification(just) {\n    this.justification = typeof (just) === 'string'\n      ? Annotation.JustifyString[just]\n      : just;\n    return this;\n  }\n\n  // Render text beside the note.\n  draw() {\n    this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR(\n        'NoNoteForAnnotation', \"Can't draw text annotation without an attached note.\"\n      );\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n      this.index);\n\n    // We're changing context parameters. Save current state.\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = this.context.measureText(this.text).width;\n\n    // Estimate text height to be the same as the width of an 'm'.\n    //\n    // This is a hack to work around the inability to measure text height\n    // in HTML5 Canvas (and SVG).\n    const text_height = this.context.measureText('m').width;\n    let x;\n    let y;\n\n    if (this.justification === Annotation.Justify.LEFT) {\n      x = start.x;\n    } else if (this.justification === Annotation.Justify.RIGHT) {\n      x = start.x - text_width;\n    } else if (this.justification === Annotation.Justify.CENTER) {\n      x = start.x - text_width / 2;\n    } else /* CENTER_STEM */ {\n      x = this.note.getStemX() - text_width / 2;\n    }\n\n    let stem_ext;\n    let spacing;\n    const has_stem = this.note.hasStem();\n    const stave = this.note.getStave();\n\n    // The position of the text varies based on whether or not the note\n    // has a stem.\n    if (has_stem) {\n      stem_ext = this.note.getStem().getExtents();\n      spacing = stave.getSpacingBetweenLines();\n    }\n\n    if (this.vert_justification === Annotation.VerticalJustify.BOTTOM) {\n      // HACK: We need to compensate for the text's height since its origin\n      // is bottom-right.\n      y = stave.getYForBottomText(this.text_line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n      if (has_stem) {\n        const stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n        y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n      }\n    } else if (this.vert_justification === Annotation.VerticalJustify.CENTER) {\n      const yt = this.note.getYForTopText(this.text_line) - 1;\n      const yb = stave.getYForBottomText(this.text_line);\n      y = yt + (yb - yt) / 2 + text_height / 2;\n    } else if (this.vert_justification === Annotation.VerticalJustify.TOP) {\n      y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n      if (has_stem) {\n        y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n      }\n    } else /* CENTER_STEM */ {\n      const extents = this.note.getStemExtents();\n      y = extents.topY + (extents.baseY - extents.topY) / 2 +\n        text_height / 2;\n    }\n\n    L('Rendering annotation: ', this.text, x, y);\n    this.context.fillText(this.text, x, y);\n    this.context.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\n/**\n   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   @param release If true, render a release. (DEPRECATED)\n   @param phrase If set, ignore \"text\" and \"release\", and use the more\n                 sophisticated phrase specified.\n\n   Example of a phrase:\n\n     [{\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"half\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"1 1/2\"\n       width: 8;\n     }]\n */\nexport class Bend extends Modifier {\n  static get CATEGORY() { return 'bends'; }\n\n  static get UP() {\n    return 0;\n  }\n  static get DOWN() {\n    return 1;\n  }\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  static format(bends, state) {\n    if (!bends || bends.length === 0) return false;\n\n    let last_width = 0;\n    // Bends are always on top.\n    const text_line = state.top_text_line;\n\n    // Format Bends\n    for (let i = 0; i < bends.length; ++i) {\n      const bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor(text, release, phrase) {\n    super();\n    this.setAttribute('type', 'Bend');\n\n    this.text = text;\n    this.x_shift = 0;\n    this.release = release || false;\n    this.font = '10pt Arial';\n    this.render_options = {\n      line_width: 1.5,\n      line_style: '#777777',\n      bend_width: 8,\n      release_width: 8,\n    };\n\n    if (phrase) {\n      this.phrase = phrase;\n    } else {\n      // Backward compatibility\n      this.phrase = [{ type: Bend.UP, text: this.text }];\n      if (this.release) this.phrase.push({ type: Bend.DOWN, text: '' });\n    }\n\n    this.updateWidth();\n  }\n\n  getCategory() { return Bend.CATEGORY; }\n\n  setXShift(value) {\n    this.x_shift = value;\n    this.updateWidth();\n  }\n  setFont(font) { this.font = font; return this; }\n  getText() { return this.text; }\n  updateWidth() {\n    const that = this;\n\n    function measure_text(text) {\n      let text_width;\n      if (that.context) {\n        text_width = that.context.measureText(text).width;\n      } else {\n        text_width = Flow.textWidth(text);\n      }\n\n      return text_width;\n    }\n\n    let total_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if ('width' in bend) {\n        total_width += bend.width;\n      } else {\n        const additional_width = (bend.type === Bend.UP) ?\n          this.render_options.bend_width : this.render_options.release_width;\n\n        bend.width = Vex.Max(additional_width, measure_text(bend.text)) + 3;\n        bend.draw_width = bend.width / 2;\n        total_width += bend.width;\n      }\n    }\n\n    this.setWidth(total_width + this.x_shift);\n    return this;\n  }\n  draw() {\n    this.checkContext();\n    if (!(this.note && (this.index != null))) {\n      throw new Vex.RERR('NoNoteForBend', \"Can't draw bend without a note or index.\");\n    }\n\n    this.setRendered();\n\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n      this.index);\n    start.x += 3;\n    start.y += 0.5;\n    const x_shift = this.x_shift;\n\n    const ctx = this.context;\n    const bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n    const annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n    const that = this;\n\n    function renderBend(x, y, width, height) {\n      const cp_x = x + width;\n      const cp_y = y;\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, y);\n      ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderRelease(x, y, width, height) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(that.render_options.line_width);\n      ctx.setStrokeStyle(that.render_options.line_style);\n      ctx.setFillStyle(that.render_options.line_style);\n      ctx.moveTo(x, height);\n      ctx.quadraticCurveTo(\n        x + width, height,\n        x + width, y);\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    function renderArrowHead(x, y, direction) {\n      const width = 4;\n      const dir = direction || 1;\n\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x - width, y + width * dir);\n      ctx.lineTo(x + width, y + width * dir);\n      ctx.closePath();\n      ctx.fill();\n    }\n\n    function renderText(x, text) {\n      ctx.save();\n      ctx.setRawFont(that.font);\n      const render_x = x - (ctx.measureText(text).width / 2);\n      ctx.fillText(text, render_x, annotation_y);\n      ctx.restore();\n    }\n\n    let last_bend = null;\n    let last_drawn_width = 0;\n    for (let i = 0; i < this.phrase.length; ++i) {\n      const bend = this.phrase[i];\n      if (i === 0) bend.draw_width += x_shift;\n\n      last_drawn_width = bend.draw_width +\n        (last_bend ? last_bend.draw_width : 0) -\n        (i === 1 ? x_shift : 0);\n      if (bend.type === Bend.UP) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderArrowHead(start.x, bend_height);\n        }\n\n        renderBend(start.x, start.y, last_drawn_width, bend_height);\n      }\n\n      if (bend.type === Bend.DOWN) {\n        if (last_bend && last_bend.type === Bend.UP) {\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend && last_bend.type === Bend.DOWN) {\n          renderArrowHead(start.x, start.y, -1);\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (last_bend === null) {\n          last_drawn_width = bend.draw_width;\n          renderRelease(start.x, start.y, last_drawn_width, bend_height);\n        }\n      }\n\n      renderText(start.x + last_drawn_width, bend.text);\n      last_bend = bend;\n      last_bend.x = start.x;\n\n      start.x += last_drawn_width;\n    }\n\n    // Final arrowhead and text\n    if (last_bend.type === Bend.UP) {\n      renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n    } else if (last_bend.type === Bend.DOWN) {\n      renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\n\nexport class Vibrato extends Modifier {\n  static get CATEGORY() { return 'vibratos'; }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  getCategory() { return Vibrato.CATEGORY; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx, x, y, opts) {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Accidental } from './accidental';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Stroke } from './strokes';\nimport { StringNumber } from './stringnumber';\nimport { Articulation } from './articulation';\nimport { Ornament } from './ornament';\nimport { Annotation } from './annotation';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\nfunction L(...args) { if (ModifierContext.DEBUG) Vex.L('Vex.Flow.ModifierContext', args); }\n\nexport class ModifierContext {\n  constructor() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0,\n      top_text_line: 0,\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      StaveNote,\n      Dot,\n      FretHandFinger,\n      Accidental,\n      Stroke,\n      GraceNoteGroup,\n      NoteSubGroup,\n      StringNumber,\n      Articulation,\n      Ornament,\n      Annotation,\n      Bend,\n      Vibrato,\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [StaveNote];\n  }\n\n  addModifier(modifier) {\n    const type = modifier.getCategory();\n    if (!this.modifiers[type]) this.modifiers[type] = [];\n    this.modifiers[type].push(modifier);\n    modifier.setModifierContext(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  getModifiers(type) { return this.modifiers[type]; }\n  getWidth() { return this.width; }\n  getExtraLeftPx() { return this.state.left_shift; }\n  getExtraRightPx() { return this.state.right_shift; }\n  getState() { return this.state; }\n\n  getMetrics() {\n    if (!this.formatted) {\n      throw new Vex.RERR('UnformattedModifier', 'Unformatted modifier has no metrics.');\n    }\n\n    return {\n      width: this.state.left_shift + this.state.right_shift + this.spacing,\n      spacing: this.spacing,\n      extra_left_px: this.state.left_shift,\n      extra_right_px: this.state.right_shift,\n    };\n  }\n\n  preFormat() {\n    if (this.preFormatted) return;\n    this.PREFORMAT.forEach((modifier) => {\n      L('Preformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.format(this.getModifiers(modifier.CATEGORY), this.state, this);\n    });\n\n    // Update width of this modifier context\n    this.width = this.state.left_shift + this.state.right_shift;\n    this.preFormatted = true;\n  }\n\n  postFormat() {\n    if (this.postFormatted) return;\n    this.POSTFORMAT.forEach((modifier) => {\n      L('Postformatting ModifierContext: ', modifier.CATEGORY);\n      modifier.postFormat(this.getModifiers(modifier.CATEGORY), this);\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\nimport { Vex } from './vex';\nimport { Beam } from './beam';\nimport { Flow } from './tables';\nimport { Fraction } from './fraction';\nimport { Voice } from './voice';\nimport { StaveConnector } from './staveconnector';\nimport { StaveNote } from './stavenote';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nfunction L(...args) { if (Formatter.DEBUG) Vex.L('Vex.Flow.Formatter', args); }\n\n// Helper function to locate the next non-rest note(s).\nfunction lookAhead(notes, restLine, i, compare) {\n  // If no valid next note group, nextRestLine is same as current.\n  let nextRestLine = restLine;\n\n  // Get the rest line for next valid non-rest note group.\n  for (i += 1; i < notes.length; i += 1) {\n    const note = notes[i];\n    if (!note.isRest() && !note.shouldIgnoreTicks()) {\n      nextRestLine = note.getLineForRest();\n      break;\n    }\n  }\n\n  // Locate the mid point between two lines.\n  if (compare && restLine !== nextRestLine) {\n    const top = Math.max(restLine, nextRestLine);\n    const bot = Math.min(restLine, nextRestLine);\n    nextRestLine = Vex.MidLine(top, bot);\n  }\n  return nextRestLine;\n}\n\n// Take an array of `voices` and place aligned tickables in the same context. Returns\n// a mapping from `tick` to `ContextType`, a list of `tick`s, and the resolution\n// multiplier.\n//\n// Params:\n// * `voices`: Array of `Voice` instances.\n// * `ContextType`: A context class (e.g., `ModifierContext`, `TickContext`)\n// * `addToContext`: Function to add tickable to context.\nfunction createContexts(voices, ContextType, addToContext) {\n  if (!voices || !voices.length) {\n    throw new Vex.RERR('BadArgument', 'No voices to format');\n  }\n\n  // Find out highest common multiple of resolution multipliers.\n  // The purpose of this is to find out a common denominator\n  // for all fractional tick values in all tickables of all voices,\n  // so that the values can be expanded and the numerator used\n  // as an integer tick value.\n  const totalTicks = voices[0].getTotalTicks();\n  const resolutionMultiplier = voices.reduce((resolutionMultiplier, voice) => {\n    if (!voice.getTotalTicks().equals(totalTicks)) {\n      throw new Vex.RERR(\n        'TickMismatch', 'Voices should have same total note duration in ticks.'\n      );\n    }\n\n    if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n      throw new Vex.RERR(\n        'IncompleteVoice', 'Voice does not have enough notes.'\n      );\n    }\n\n    return Math.max(\n      resolutionMultiplier,\n      Fraction.LCM(resolutionMultiplier, voice.getResolutionMultiplier())\n    );\n  }, 1);\n\n  // Initialize tick maps.\n  const tickToContextMap = {};\n  const tickList = [];\n  const contexts = [];\n\n  // For each voice, extract notes and create a context for every\n  // new tick that hasn't been seen before.\n  voices.forEach(voice => {\n    // Use resolution multiplier as denominator to expand ticks\n    // to suitable integer values, so that no additional expansion\n    // of fractional tick values is needed.\n    const ticksUsed = new Fraction(0, resolutionMultiplier);\n\n    voice.getTickables().forEach(tickable => {\n      const integerTicks = ticksUsed.numerator;\n\n      // If we have no tick context for this tick, create one.\n      if (!tickToContextMap[integerTicks]) {\n        const newContext = new ContextType();\n        contexts.push(newContext);\n        tickToContextMap[integerTicks] = newContext;\n      }\n\n      // Add this tickable to the TickContext.\n      addToContext(tickable, tickToContextMap[integerTicks]);\n\n      // Maintain a sorted list of tick contexts.\n      tickList.push(integerTicks);\n      ticksUsed.add(tickable.getTicks());\n    });\n  });\n\n  return {\n    map: tickToContextMap,\n    array: contexts,\n    list: Vex.SortAndUnique(tickList, (a, b) => a - b, (a, b) => a === b),\n    resolutionMultiplier,\n  };\n}\n\nexport class Formatter {\n  // Helper function to layout \"notes\" one after the other without\n  // regard for proportions. Useful for tests and debugging.\n  static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n    notes.reduce((x, note) => {\n      note.addToModifierContext(new ModifierContext());\n      const tick = new TickContext().addTickable(note).preFormat();\n      const extra = tick.getExtraPx();\n      tick.setX(x + extra.left);\n\n      return x + tick.getWidth() + extra.right + paddingBetween;\n    }, x);\n  }\n\n  // Helper function to plot formatter debug info.\n  static plotDebugging(ctx, formatter, xPos, y1, y2) {\n    const x = xPos + Note.STAVEPADDING;\n    const contextGaps = formatter.contextGaps;\n    function stroke(x1, x2, color) {\n      ctx.beginPath();\n      ctx.setStrokeStyle(color);\n      ctx.setFillStyle(color);\n      ctx.setLineWidth(1);\n      ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\n    }\n\n    ctx.save();\n    ctx.setFont('Arial', 8, '');\n\n    contextGaps.gaps.forEach(gap => {\n      stroke(x + gap.x1, x + gap.x2, '#aaa');\n      // Vex.drawDot(ctx, xPos + gap.x1, yPos, 'blue');\n      ctx.fillText(Math.round(gap.x2 - gap.x1), x + gap.x1, y2 + 12);\n    });\n\n    ctx.fillText(Math.round(contextGaps.total) + 'px', x - 20, y2 + 12);\n    ctx.setFillStyle('red');\n\n    ctx.fillText('Loss: ' +\n      formatter.lossHistory.map(loss => Math.round(loss)), x - 20, y2 + 22);\n    ctx.restore();\n  }\n\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or\n  //      `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {\n  //      autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  static FormatAndDraw(ctx, stave, notes, params) {\n    const options = {\n      auto_beam: false,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(options, params);\n    } else if (typeof params === 'boolean') {\n      options.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    const voice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Then create beams, if requested.\n    const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter()\n      .joinVoices([voice], { align_rests: options.align_rests })\n      .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave).draw(ctx, stave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  }\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n    const opts = {\n      auto_beam: autobeam,\n      align_rests: false,\n    };\n\n    if (typeof params === 'object') {\n      Vex.Merge(opts, params);\n    } else if (typeof params === 'boolean') {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    const notevoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    const tabvoice = new Voice(Flow.TIME4_4)\n      .setMode(Voice.Mode.SOFT)\n      .addTickables(tabnotes);\n\n    // Then create beams, if requested.\n    const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter()\n      .joinVoices([notevoice], { align_rests: opts.align_rests })\n      .joinVoices([tabvoice])\n      .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    beams.forEach(beam => beam.setContext(ctx).draw());\n\n    // Draw a connector between tab and note staves.\n    new StaveConnector(stave, tabstave).setContext(ctx).draw();\n  }\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `alignAllNotes`: If set to false, only aligns non-beamed notes.\n  // * `alignTuplets`: If set to false, ignores tuplets.\n  static AlignRestsToNotes(notes, alignAllNotes, alignTuplets) {\n    notes.forEach((note, index) => {\n      if (note instanceof StaveNote && note.isRest()) {\n        if (note.tuplet && !alignTuplets) return;\n\n        // If activated rests not on default can be rendered as specified.\n        const position = note.getGlyph().position.toUpperCase();\n        if (position !== 'R/4' && position !== 'B/4') return;\n\n        if (alignAllNotes || note.beam != null) {\n          // Align rests with previous/next notes.\n          const props = note.getKeyProps()[0];\n          if (index === 0) {\n            props.line = lookAhead(notes, props.line, index, false);\n            note.setKeyLine(0, props.line);\n          } else if (index > 0 && index < notes.length) {\n            // If previous note is a rest, use its line number.\n            let restLine;\n            if (notes[index - 1].isRest()) {\n              restLine = notes[index - 1].getKeyProps()[0].line;\n              props.line = restLine;\n            } else {\n              restLine = notes[index - 1].getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, restLine, index, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    });\n\n    return this;\n  }\n\n  constructor() {\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tickContexts = null;\n    this.modiferContexts = null;\n\n    // Gaps between contexts, for free movement of notes post\n    // formatting.\n    this.contextGaps = {\n      total: 0,\n      gaps: [],\n    };\n\n    this.voices = [];\n  }\n\n  // Find all the rests in each of the `voices` and align them\n  // to neighboring notes. If `alignAllNotes` is `false`, then only\n  // align non-beamed notes.\n  alignRests(voices, alignAllNotes) {\n    if (!voices || !voices.length) {\n      throw new Vex.RERR('BadArgument', 'No voices to format rests');\n    }\n\n    voices.forEach(voice =>\n      Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n  }\n\n  // Calculate the minimum width required to align and format `voices`.\n  preCalculateMinTotalWidth(voices) {\n    // Cache results.\n    if (this.hasMinTotalWidth) return this.minTotalWidth;\n\n    // Create tick contexts if not already created.\n    if (!this.tickContexts) {\n      if (!voices) {\n        throw new Vex.RERR(\n          'BadArgument', \"'voices' required to run preCalculateMinTotalWidth\"\n        );\n      }\n\n      this.createTickContexts(voices);\n    }\n\n    const { list: contextList, map: contextMap } = this.tickContexts;\n\n    // Go through each tick context and calculate total width.\n    this.minTotalWidth = contextList\n      .map(tick => {\n        const context = contextMap[tick];\n        context.preFormat();\n        return context.getWidth();\n      })\n      .reduce((a, b) => a + b, 0);\n\n    this.hasMinTotalWidth = true;\n\n    return this.minTotalWidth;\n  }\n\n  // Get minimum width required to render all voices. Either `format` or\n  // `preCalculateMinTotalWidth` must be called before this method.\n  getMinTotalWidth() {\n    if (!this.hasMinTotalWidth) {\n      throw new Vex.RERR(\n        'NoMinTotalWidth',\n        \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\"\n      );\n    }\n\n    return this.minTotalWidth;\n  }\n\n  // Create `ModifierContext`s for each tick in `voices`.\n  createModifierContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      ModifierContext,\n      (tickable, context) => tickable.addToModifierContext(context)\n    );\n\n    this.modiferContexts = contexts;\n    return contexts;\n  }\n\n  // Create `TickContext`s for each tick in `voices`. Also calculate the\n  // total number of ticks in voices.\n  createTickContexts(voices) {\n    const contexts = createContexts(\n      voices,\n      TickContext,\n      (tickable, context) => context.addTickable(tickable)\n    );\n\n    contexts.array.forEach(context => {\n      context.tContexts = contexts.array;\n    });\n\n    this.totalTicks = voices[0].getTicksUsed().clone();\n    this.tickContexts = contexts;\n    return contexts;\n  }\n\n  // This is the core formatter logic. Format voices and justify them\n  // to `justifyWidth` pixels. `renderingContext` is required to justify elements\n  // that can't retreive widths without a canvas. This method sets the `x` positions\n  // of all the tickables/notes in the formatter.\n  preFormat(justifyWidth = 0, renderingContext, voices, stave) {\n    // Initialize context maps.\n    const contexts = this.tickContexts;\n    const { list: contextList, map: contextMap, resolutionMultiplier } = contexts;\n\n    // If voices and a stave were provided, set the Stave for each voice\n    // and preFormat to apply Y values to the notes;\n    if (voices && stave) {\n      voices.forEach(voice => voice.setStave(stave).preFormat());\n    }\n\n    // Now distribute the ticks to each tick context, and assign them their\n    // own X positions.\n    let x = 0;\n    let shift = 0;\n    const centerX = justifyWidth / 2;\n    this.minTotalWidth = 0;\n\n    // Pass 1: Give each note maximum width requested by context.\n    contextList.forEach((tick) => {\n      const context = contextMap[tick];\n      if (renderingContext) context.setContext(renderingContext);\n\n      // Make sure that all tickables in this context have calculated their\n      // space requirements.\n      context.preFormat();\n\n      const width = context.getWidth();\n      this.minTotalWidth += width;\n\n      const metrics = context.getMetrics();\n      x = x + shift + metrics.extraLeftPx;\n      context.setX(x);\n\n      // Calculate shift for the next tick.\n      shift = width - metrics.extraLeftPx;\n    });\n\n    this.minTotalWidth = x + shift;\n    this.hasMinTotalWidth = true;\n\n    // No justification needed. End formatting.\n    if (justifyWidth <= 0) return;\n\n    // Pass 2: Take leftover width, and distribute it to proportionately to\n    // all notes.\n    const remainingX = justifyWidth - this.minTotalWidth;\n    const leftoverPxPerTick = remainingX / (this.totalTicks.value() * resolutionMultiplier);\n    let spaceAccum = 0;\n\n    contextList.forEach((tick, index) => {\n      const prevTick = contextList[index - 1] || 0;\n      const context = contextMap[tick]; // tickContext\n      const tickSpace = (tick - prevTick) * leftoverPxPerTick;\n\n      spaceAccum += tickSpace;\n      context.setX(context.getX() + spaceAccum);\n\n      // Move center aligned tickables to middle\n      context\n        .getCenterAlignedTickables()\n        .forEach(tickable => { // eslint-disable-line\n          tickable.center_x_shift = centerX - context.getX();\n        });\n    });\n\n    // Just one context. Done formatting.\n    if (contextList.length === 1) return;\n\n    this.justifyWidth = justifyWidth;\n    this.lossHistory = [];\n    this.evaluate();\n  }\n\n  // Calculate the total cost of this formatting decision.\n  evaluate() {\n    const justifyWidth = this.justifyWidth;\n    // Calculate available slack per tick context. This works out how much freedom\n    // to move a context has in either direction, without affecting other notes.\n    this.contextGaps = { total: 0, gaps: [] };\n    this.tickContexts.list.forEach((tick, index) => {\n      if (index === 0) return;\n      const prevTick = this.tickContexts.list[index - 1];\n      const prevContext = this.tickContexts.map[prevTick];\n      const context = this.tickContexts.map[tick];\n      const prevMetrics = prevContext.getMetrics();\n\n      const insideRightEdge = prevContext.getX() + prevMetrics.width;\n      const insideLeftEdge = context.getX();\n      const gap = insideLeftEdge - insideRightEdge;\n      this.contextGaps.total += gap;\n      this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n\n      // Tell the tick contexts how much they can reposition themselves.\n      context.getFormatterMetrics().freedom.left = gap;\n      prevContext.getFormatterMetrics().freedom.right = gap;\n    });\n\n    // Calculate mean distance in each voice for each duration type, then calculate\n    // how far each note is from the mean.\n    const durationStats = this.durationStats = {};\n\n    function updateStats(duration, space) {\n      const stats = durationStats[duration];\n      if (stats === undefined) {\n        durationStats[duration] = { mean: space, count: 1 };\n      } else {\n        stats.count += 1;\n        stats.mean = (stats.mean + space) / 2;\n      }\n    }\n\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note, i, notes) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getMetrics();\n        const formatterMetrics = note.getFormatterMetrics();\n        const leftNoteEdge = note.getX() + metrics.noteWidth +\n          metrics.modRightPx + metrics.extraRightPx;\n        let space = 0;\n\n        if (i < (notes.length - 1)) {\n          const rightNote = notes[i + 1];\n          const rightMetrics = rightNote.getMetrics();\n          const rightNoteEdge = rightNote.getX() -\n            rightMetrics.modLeftPx - rightMetrics.extraLeftPx;\n\n          space = rightNoteEdge - leftNoteEdge;\n          formatterMetrics.space.used = rightNote.getX() - note.getX();\n          rightNote.getFormatterMetrics().freedom.left = space;\n        } else {\n          space = justifyWidth - leftNoteEdge;\n          formatterMetrics.space.used = justifyWidth - note.getX();\n        }\n\n        formatterMetrics.freedom.right = space;\n        updateStats(duration, formatterMetrics.space.used);\n      });\n    });\n\n    // Calculate how much each note deviates from the mean. Loss function is square\n    // root of the sum of squared deviations.\n    let totalDeviation = 0;\n    this.voices.forEach(voice => {\n      voice.getTickables().forEach((note) => {\n        const duration = note.getTicks().clone().simplify().toString();\n        const metrics = note.getFormatterMetrics();\n        metrics.iterations += 1;\n        metrics.space.deviation = metrics.space.used - durationStats[duration].mean;\n        metrics.duration = duration;\n        metrics.space.mean = durationStats[duration].mean;\n\n        totalDeviation += Math.pow(durationStats[duration].mean, 2);\n      });\n    });\n\n    this.totalCost = Math.sqrt(totalDeviation);\n    this.lossHistory.push(this.totalCost);\n    return this;\n  }\n\n  // Run a single iteration of rejustification. At a high level, this method calculates\n  // the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n  // attempt to reduce the cost. You can call this method multiple times until it finds\n  // and oscillates around a global minimum.\n  tune() {\n    const sum = (means) => means.reduce((a, b) => a + b);\n\n    // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n    // on adjacent tickcontexts.\n    function move(current, prev, next, shift) {\n      current.setX(current.getX() + shift);\n      current.getFormatterMetrics().freedom.left += shift;\n      current.getFormatterMetrics().freedom.right -= shift;\n\n      if (prev) prev.getFormatterMetrics().freedom.right += shift;\n      if (next) next.getFormatterMetrics().freedom.left -= shift;\n    }\n\n    let shift = 0;\n    this.tickContexts.list.forEach((tick, index, list) => {\n      const context = this.tickContexts.map[tick];\n      const prevContext = (index > 0) ? this.tickContexts.map[list[index - 1]] : null;\n      const nextContext = (index < list.length - 1) ? this.tickContexts.map[list[index + 1]] : null;\n\n      move(context, prevContext, nextContext, shift);\n\n      const cost = -sum(\n        context.getTickables().map(t => t.getFormatterMetrics().space.deviation));\n\n      if (cost > 0) {\n        shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n      } else if (cost < 0) {\n        if (nextContext) {\n          shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n        } else {\n          shift = 0;\n        }\n      }\n\n      const minShift = Math.min(5, Math.abs(shift));\n      shift = shift > 0 ? minShift : -minShift;\n    });\n\n    return this.evaluate();\n  }\n\n  // This is the top-level call for all formatting logic completed\n  // after `x` *and* `y` values have been computed for the notes\n  // in the voices.\n  postFormat() {\n    const postFormatContexts = (contexts) =>\n      contexts.list.forEach(tick => contexts.map[tick].postFormat());\n\n    postFormatContexts(this.modiferContexts);\n    postFormatContexts(this.tickContexts);\n\n    return this;\n  }\n\n  // Take all `voices` and create `ModifierContext`s out of them. This tells\n  // the formatters that the voices belong on a single stave.\n  joinVoices(voices) {\n    this.createModifierContexts(voices);\n    this.hasMinTotalWidth = false;\n    return this;\n  }\n\n  // Align rests in voices, justify the contexts, and position the notes\n  // so voices are aligned and ready to render onto the stave. This method\n  // mutates the `x` positions of all tickables in `voices`.\n  //\n  // Voices are full justified to fit in `justifyWidth` pixels.\n  //\n  // Set `options.context` to the rendering context. Set `options.align_rests`\n  // to true to enable rest alignment.\n  format(voices, justifyWidth, options) {\n    const opts = {\n      align_rests: false,\n      context: null,\n      stave: null,\n    };\n\n    Vex.Merge(opts, options);\n    this.voices = voices;\n    this.alignRests(voices, opts.align_rests);\n    this.createTickContexts(voices);\n    this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n    // Only postFormat if a stave was supplied for y value formatting\n    if (opts.stave) this.postFormat();\n\n    return this;\n  }\n\n  // This method is just like `format` except that the `justifyWidth` is inferred\n  // from the `stave`.\n  formatToStave(voices, stave, options) {\n    const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n    L('Formatting voices to width: ', justifyWidth);\n    const opts = { context: stave.getContext() };\n    Vex.Merge(opts, options);\n    return this.format(voices, justifyWidth, opts);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\n\nimport { Element } from './element';\n\nexport class StaveModifier extends Element {\n  static get Position() {\n    return {\n      LEFT: 1,\n      RIGHT: 2,\n      ABOVE: 3,\n      BELOW: 4,\n      BEGIN: 5,\n      END: 6,\n    };\n  }\n\n  constructor() {\n    super();\n    this.setAttribute('type', 'StaveModifier');\n\n    this.padding = 10;\n    this.position = StaveModifier.Position.ABOVE;\n    this.layoutMetrics = null;\n  }\n\n  getPosition() { return this.position; }\n  setPosition(position) { this.position = position; return this; }\n  getStave() { return this.stave; }\n  setStave(stave) { this.stave = stave; return this; }\n  getWidth() { return this.width; }\n  setWidth(width) { this.width = width; return this; }\n  getX() { return this.x; }\n  setX(x) { this.x = x; return this; }\n  getCategory() { return ''; }\n  makeSpacer(padding) {\n    // TODO(0xfe): Return an instance of type `Spacer` based on `GhostNote`\n    // instead of this hack.\n\n    return {\n      getContext() { return true; },\n      setStave() {},\n      renderToStave() {},\n      getMetrics() {\n        return { width: padding };\n      },\n    };\n  }\n  placeGlyphOnLine(glyph, stave, line) {\n    glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n  }\n  getPadding(index) {\n    return (index !== undefined && index < 2 ? 0 : this.padding);\n  }\n  setPadding(padding) { this.padding = padding; return this; }\n  setLayoutMetrics(layoutMetrics) {\n    this.layoutMetrics = layoutMetrics;\n    return this;\n  }\n  getLayoutMetrics() {\n    return this.layoutMetrics;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\n\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\n\nexport class Barline extends StaveModifier {\n  static get CATEGORY() { return 'barlines'; }\n  static get type() {\n    return {\n      SINGLE: 1,\n      DOUBLE: 2,\n      END: 3,\n      REPEAT_BEGIN: 4,\n      REPEAT_END: 5,\n      REPEAT_BOTH: 6,\n      NONE: 7,\n    };\n  }\n\n  static get typeString() {\n    return {\n      single: Barline.type.SINGLE,\n      double: Barline.type.DOUBLE,\n      end: Barline.type.END,\n      repeatBegin: Barline.type.REPEAT_BEGIN,\n      repeatEnd: Barline.type.REPEAT_END,\n      repeatBoth: Barline.type.REPEAT_BOTH,\n      none: Barline.type.NONE,\n    };\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(type) {\n    super();\n    this.setAttribute('type', 'Barline');\n    this.thickness = Flow.STAVE_LINE_THICKNESS;\n\n    const TYPE = Barline.type;\n    this.widths = {};\n    this.widths[TYPE.SINGLE] = 5;\n    this.widths[TYPE.DOUBLE] = 5;\n    this.widths[TYPE.END] = 5;\n    this.widths[TYPE.REPEAT_BEGIN] = 5;\n    this.widths[TYPE.REPEAT_END] = 5;\n    this.widths[TYPE.REPEAT_BOTH] = 5;\n    this.widths[TYPE.NONE] = 5;\n\n    this.paddings = {};\n    this.paddings[TYPE.SINGLE] = 0;\n    this.paddings[TYPE.DOUBLE] = 0;\n    this.paddings[TYPE.END] = 0;\n    this.paddings[TYPE.REPEAT_BEGIN] = 15;\n    this.paddings[TYPE.REPEAT_END] = 15;\n    this.paddings[TYPE.REPEAT_BOTH] = 15;\n    this.paddings[TYPE.NONE] = 0;\n\n    this.layoutMetricsMap = {};\n    this.layoutMetricsMap[TYPE.SINGLE] = {\n      xMin: 0,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.DOUBLE] = {\n      xMin: -3,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.END] = {\n      xMin: -5,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_END] = {\n      xMin: -10,\n      xMax: 1,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n      xMin: -2,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n      xMin: -10,\n      xMax: 10,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.layoutMetricsMap[TYPE.NONE] = {\n      xMin: 0,\n      xMax: 0,\n      paddingLeft: 5,\n      paddingRight: 5,\n    };\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type);\n  }\n  getCategory() { return Barline.CATEGORY; }\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    this.setWidth(this.widths[this.type]);\n    this.setPadding(this.paddings[this.type]);\n    this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n    return this;\n  }\n\n  // Draw barlines\n  draw(stave) {\n    var ctx = stave.checkContext();\n    ctx.openGroup('stave-barline');\n\n    this.setRendered();\n\n    switch (this.type) {\n      case Barline.type.SINGLE:\n        this.drawVerticalBar(stave, this.x, false);\n        break;\n      case Barline.type.DOUBLE:\n        this.drawVerticalBar(stave, this.x, true);\n        break;\n      case Barline.type.END:\n        this.drawVerticalEndBar(stave, this.x);\n        break;\n      case Barline.type.REPEAT_BEGIN:\n        // If the barline is shifted over (in front of clef/time/key)\n        // Draw vertical bar at the beginning.\n        this.drawRepeatBar(stave, this.x, true);\n        if (stave.getX() !== this.x) {\n          this.drawVerticalBar(stave, stave.getX());\n        }\n\n        break;\n      case Barline.type.REPEAT_END:\n        this.drawRepeatBar(stave, this.x, false);\n        break;\n      case Barline.type.REPEAT_BOTH:\n        this.drawRepeatBar(stave, this.x, false);\n        this.drawRepeatBar(stave, this.x, true);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.closeGroup();\n  }\n\n  drawVerticalBar(stave, x, double_bar) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    if (double_bar) {\n      stave.context.fillRect(x - 3, topY, 1, botY - topY);\n    }\n    stave.context.fillRect(x, topY, 1, botY - topY);\n  }\n\n  drawVerticalEndBar(stave, x) {\n    stave.checkContext();\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    stave.context.fillRect(x - 5, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n  }\n\n  drawRepeatBar(stave, x, begin) {\n    stave.checkContext();\n\n    const topY = stave.getTopLineTopY();\n    const botY = stave.getBottomLineBottomY();\n    let x_shift = 3;\n\n    if (!begin) {\n      x_shift = -5;\n    }\n\n    stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n    stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n    const dot_radius = 2;\n\n    // Shift dots left or right\n    if (begin) {\n      x_shift += 4;\n    } else {\n      x_shift -= 4;\n    }\n\n    const dot_x = (x + x_shift) + (dot_radius / 2);\n\n    // calculate the y offset based on number of stave lines\n    let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n    y_offset = (y_offset / 2) - (stave.getSpacingBetweenLines() / 2);\n    let dot_y = topY + y_offset + (dot_radius / 2);\n\n    // draw the top repeat dot\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n\n    // draw the bottom repeat dot\n    dot_y += stave.getSpacingBetweenLines();\n    stave.context.beginPath();\n    stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n    stave.context.fill();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class Repetition extends StaveModifier {\n  static get CATEGORY() { return 'repetitions'; }\n  static get type() {\n    return {\n      NONE: 1,         // no coda or segno\n      CODA_LEFT: 2,    // coda at beginning of stave\n      CODA_RIGHT: 3,   // coda at end of stave\n      SEGNO_LEFT: 4,   // segno at beginning of stave\n      SEGNO_RIGHT: 5,  // segno at end of stave\n      DC: 6,           // D.C. at end of stave\n      DC_AL_CODA: 7,   // D.C. al coda at end of stave\n      DC_AL_FINE: 8,   // D.C. al Fine end of stave\n      DS: 9,           // D.S. at end of stave\n      DS_AL_CODA: 10,  // D.S. al coda at end of stave\n      DS_AL_FINE: 11,  // D.S. al Fine at end of stave\n      FINE: 12,        // Fine at end of stave\n    };\n  }\n\n  constructor(type, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Repetition');\n\n    this.symbol_type = type;\n    this.x = x;\n    this.x_shift = 0;\n    this.y_shift = y_shift;\n    this.font = {\n      family: 'times',\n      size: 12,\n      weight: 'bold italic',\n    };\n  }\n\n  getCategory() { return Repetition.CATEGORY; }\n  setShiftX(x) { this.x_shift = x; return this; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    this.setRendered();\n\n    switch (this.symbol_type) {\n      case Repetition.type.CODA_RIGHT:\n        this.drawCodaFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.CODA_LEFT:\n        this.drawSymbolText(stave, x, 'Coda', true);\n        break;\n      case Repetition.type.SEGNO_LEFT:\n        this.drawSignoFixed(stave, x);\n        break;\n      case Repetition.type.SEGNO_RIGHT:\n        this.drawSignoFixed(stave, x + stave.width);\n        break;\n      case Repetition.type.DC:\n        this.drawSymbolText(stave, x, 'D.C.', false);\n        break;\n      case Repetition.type.DC_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.C. al', true);\n        break;\n      case Repetition.type.DC_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n        break;\n      case Repetition.type.DS:\n        this.drawSymbolText(stave, x, 'D.S.', false);\n        break;\n      case Repetition.type.DS_AL_CODA:\n        this.drawSymbolText(stave, x, 'D.S. al', true);\n        break;\n      case Repetition.type.DS_AL_FINE:\n        this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n        break;\n      case Repetition.type.FINE:\n        this.drawSymbolText(stave, x, 'Fine', false);\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  drawCodaFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 40, 'v4d', true);\n    return this;\n  }\n\n  drawSignoFixed(stave, x) {\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    Glyph.renderGlyph(stave.context, this.x + x + this.x_shift, y + 25, 30, 'v8c', true);\n    return this;\n  }\n\n  drawSymbolText(stave, x, text, draw_coda) {\n    const ctx = stave.checkContext();\n\n    ctx.save();\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    // Default to right symbol\n    let text_x = 0 + this.x_shift;\n    let symbol_x = x + this.x_shift;\n    if (this.symbol_type === Repetition.type.CODA_LEFT) {\n      // Offset Coda text to right of stave beginning\n      text_x = this.x + stave.options.vertical_bar_width;\n      symbol_x = text_x + ctx.measureText(text).width + 12;\n    } else {\n      // Offset Signo text to left stave end\n      symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n      text_x = symbol_x - + ctx.measureText(text).width - 12;\n    }\n\n    const y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    if (draw_coda) {\n      Glyph.renderGlyph(ctx, symbol_x, y, 40, 'v4d', true);\n    }\n\n    ctx.fillText(text, text_x, y + 5);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class StaveSection extends StaveModifier {\n  static get CATEGORY() { return 'stavesection'; }\n\n  constructor(section, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveSection');\n\n    this.setWidth(16);\n    this.section = section;\n    this.x = x;\n    this.shift_x = 0;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'sans-serif',\n      size: 12,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return StaveSection.CATEGORY; }\n  setStaveSection(section) { this.section = section; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.section).width;\n    let width = text_width + 6;  // add left & right padding\n    if (width < 18) width = 18;\n    const height = 20;\n    //  Seems to be a good default y\n    const y = stave.getYForTopText(3) + this.shift_y;\n    let x = this.x + shift_x;\n    ctx.beginPath();\n    ctx.lineWidth = 2;\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n    x += (width - text_width) / 2;\n    ctx.fillText('' + this.section, x, y + 16);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() { return 'stavetempo'; }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n  getCategory() { return StaveTempo.CATEGORY; }\n  setTempo(tempo) { this.tempo = tempo; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    // if (duration && bpm) {\n    if (duration) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.durationToGlyph(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n\n      if (this.tempo.toIsBeat) {\n        ctx.fillText(' = ', x + 3 * scale, y);\n        x += 3 * scale\n\n        x += 12;\n        console.error('tempo the code', code);\n        const code = Flow.durationToGlyph(this.tempo.toDuration);\n\n\n        Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n        x += code.getWidth() * scale;\n\n        // Draw stem and flags\n        if (code.stem) {\n          let stem_height = 30;\n          if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n          stem_height *= scale;\n\n          const y_top = y - stem_height;\n          ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n          if (code.flag) {\n            Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem);\n            if (!dots) x += 6 * scale;\n          }\n        }\n\n        for (let i = 0; i < this.tempo.toDots; i++) {\n          x += 6 * scale;\n          ctx.beginPath();\n          ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n          ctx.fill();\n        }\n      } else {\n        ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n      }\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `TextNote` is a notation element that is positioned in time. Generally\n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\nexport class TextNote extends Note {\n  static get Justification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'segno': {\n        code: 'v8c',\n        point: 40,\n        x_shift: 0,\n        y_shift: -10,\n        // width: 10 // optional\n      },\n      'tr': {\n        code: 'v1f',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_upper': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'mordent_lower': {\n        code: 'v45',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'f': {\n        code: 'vba',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'p': {\n        code: 'vbf',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'm': {\n        code: 'v62',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      's': {\n        code: 'v4a',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'z': {\n        code: 'v80',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n      'coda': {\n        code: 'v4d',\n        point: 40,\n        x_shift: 0,\n        y_shift: -8,\n        // width: 10 // optional\n      },\n      'pedal_open': {\n        code: 'v36',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'pedal_close': {\n        code: 'v5d',\n        point: 40,\n        x_shift: 0,\n        y_shift: 3,\n      },\n      'caesura_straight': {\n        code: 'v34',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'caesura_curved': {\n        code: 'v4b',\n        point: 40,\n        x_shift: 0,\n        y_shift: 2,\n      },\n      'breath': {\n        code: 'v6c',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'tick': {\n        code: 'v6f',\n        point: 50,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn': {\n        code: 'v72',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n      'turn_inverted': {\n        code: 'v33',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n      },\n\n      // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n      'mordent': {\n        code: 'v1e',\n        point: 40,\n        x_shift: 0,\n        y_shift: 0,\n        // width: 10 // optional\n      },\n    };\n  }\n\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextNote');\n\n    // Note properties\n    this.text = text_struct.text;\n    this.superscript = text_struct.superscript;\n    this.subscript = text_struct.subscript;\n    this.glyph_type = text_struct.glyph;\n    this.glyph = null;\n    this.font = {\n      family: 'Arial',\n      size: 12,\n      weight: '',\n    };\n\n    // Set font\n    if (text_struct.font) this.font = text_struct.font;\n\n    // Determine and set initial note width. Note that the text width is\n    // an approximation and isn't very accurate. The only way to accurately\n    // measure the length of text is with `canvasmeasureText()`\n    if (this.glyph_type) {\n      const struct = TextNote.GLYPHS[this.glyph_type];\n      if (!struct) throw new Vex.RERR('Invalid glyph type: ' + this.glyph_type);\n\n      this.glyph = new Glyph(struct.code, struct.point, { cache: false });\n\n      if (struct.width) {\n        this.setWidth(struct.width);\n      } else {\n        this.setWidth(this.glyph.getMetrics().width);\n      }\n\n      this.glyph_struct = struct;\n    } else {\n      this.setWidth(Flow.textWidth(this.text));\n    }\n    this.line = text_struct.line || 0;\n    this.smooth = text_struct.smooth || false;\n    this.ignore_ticks = text_struct.ignore_ticks || false;\n    this.justification = TextNote.Justification.LEFT;\n  }\n\n  // Set the horizontal justification of the TextNote\n  setJustification(just) {\n    this.justification = just;\n    return this;\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Pre-render formatting\n  preFormat() {\n    this.checkContext();\n\n    if (this.preFormatted) return;\n\n    if (this.smooth) {\n      this.setWidth(0);\n    } else {\n      if (this.glyph) {\n        // Width already set.\n      } else {\n        this.setWidth(this.context.measureText(this.text).width);\n      }\n    }\n\n    if (this.justification === TextNote.Justification.CENTER) {\n      this.extraLeftPx = this.width / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      this.extraLeftPx = this.width;\n    }\n\n    this.setPreFormatted(true);\n  }\n\n  // Renders the TextNote\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    this.setRendered();\n    const ctx = this.context;\n    let x = this.getAbsoluteX();\n    if (this.justification === TextNote.Justification.CENTER) {\n      x -= this.getWidth() / 2;\n    } else if (this.justification === TextNote.Justification.RIGHT) {\n      x -= this.getWidth();\n    }\n\n    let y;\n    if (this.glyph) {\n      y = this.stave.getYForLine(this.line + -3);\n      this.glyph.render(\n        this.context,\n        x + this.glyph_struct.x_shift,\n        y + this.glyph_struct.y_shift\n      );\n    } else {\n      y = this.stave.getYForLine(this.line + -3);\n      this.applyStyle(ctx);\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.text, x, y);\n\n      // Width of the letter M gives us the approximate height of the text\n      const height = ctx.measureText('M').width;\n      // Get accurate width of text\n      const width = ctx.measureText(this.text).width;\n\n      // Write superscript\n      if (this.superscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.superscript, x + width + 2, y - (height / 2.2));\n      }\n\n      // Write subscript\n      if (this.subscript) {\n        ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n        ctx.fillText(this.subscript, x + width + 2, y + (height / 2.2) - 1);\n      }\n\n      this.restoreStyle(ctx);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY() { return 'stavetext'; }\n\n  constructor(text, position, options) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Vex.Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory() { return StaveText.CATEGORY; }\n  setStaveText(text) { this.text = text; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setText(text) {\n    this.text = text;\n  }\n\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\nfunction L(...args) { if (Clef.DEBUG) Vex.L('Vex.Flow.Clef', args); }\n\nexport class Clef extends StaveModifier {\n  static get CATEGORY() { return 'clefs'; }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  static get types() {\n    return {\n      'treble': {\n        code: 'v83',\n        line: 3,\n      },\n      'bass': {\n        code: 'v79',\n        line: 1,\n      },\n      'alto': {\n        code: 'vad',\n        line: 2,\n      },\n      'tenor': {\n        code: 'vad',\n        line: 1,\n      },\n      'percussion': {\n        code: 'v59',\n        line: 2,\n      },\n      'soprano': {\n        code: 'vad',\n        line: 4,\n      },\n      'mezzo-soprano': {\n        code: 'vad',\n        line: 3,\n      },\n      'baritone-c': {\n        code: 'vad',\n        line: 0,\n      },\n      'baritone-f': {\n        code: 'v79',\n        line: 2,\n      },\n      'subbass': {\n        code: 'v79',\n        line: 0,\n      },\n      'french': {\n        code: 'v83',\n        line: 4,\n      },\n      'tab': {\n        code: 'v2f',\n      },\n    };\n  }\n\n  // Sizes affect the point-size of the clef.\n  static get sizes() {\n    return {\n      'default': 40,\n      'small': 32,\n    };\n  }\n\n  // Annotations attach to clefs -- such as \"8\" for octave up or down.\n  static get annotations() {\n    return {\n      '8va': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: -1.2,\n                x_shift: 11,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: -0.4,\n                x_shift: 8,\n              },\n            },\n          },\n        },\n      },\n      '8vb': {\n        code: 'v8',\n        sizes: {\n          'default': {\n            point: 20,\n            attachments: {\n              'treble': {\n                line: 6.3,\n                x_shift: 10,\n              },\n              'bass': {\n                line: 4,\n                x_shift: 1,\n              },\n            },\n          },\n          'small': {\n            point: 18,\n            attachments: {\n              'treble': {\n                line: 5.8,\n                x_shift: 6,\n              },\n              'bass': {\n                line: 3.5,\n                x_shift: 0.5,\n              },\n            },\n          },\n        },\n      },\n    };\n  }\n\n  // Create a new clef. The parameter `clef` must be a key from\n  // `Clef.types`.\n  constructor(type, size, annotation) {\n    super();\n    this.setAttribute('type', 'Clef');\n\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setType(type, size, annotation);\n    this.setWidth(this.glyph.getMetrics().width);\n    L('Creating clef:', type);\n  }\n\n  getCategory() { return Clef.CATEGORY; }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef = Clef.types[type];\n    if (size === undefined) {\n      this.size = 'default';\n    } else {\n      this.size = size;\n    }\n    this.clef.point = Clef.sizes[this.size];\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n\n    // If an annotation, such as 8va, is specified, add it to the Clef object.\n    if (annotation !== undefined) {\n      const anno_dict = Clef.annotations[annotation];\n      this.annotation = {\n        code: anno_dict.code,\n        point: anno_dict.sizes[this.size].point,\n        line: anno_dict.sizes[this.size].attachments[this.type].line,\n        x_shift: anno_dict.sizes[this.size].attachments[this.type].x_shift,\n      };\n\n      this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n      this.attachment.metrics.x_max = 0;\n      this.attachment.setXShift(this.annotation.x_shift);\n    } else {\n      this.annotation = undefined;\n    }\n\n    return this;\n  }\n\n  getWidth() {\n    if (this.type === 'tab' && !this.stave) {\n      throw new Vex.RERR('ClefError', \"Can't get width without stave.\");\n    }\n\n    return this.width;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n\n    if (this.type !== 'tab') return this;\n\n    let glyphScale;\n    let glyphOffset;\n    const numLines = this.stave.getOptions().num_lines;\n    switch (numLines) {\n      case 8:\n        glyphScale = 55;\n        glyphOffset = 14;\n        break;\n      case 7:\n        glyphScale = 47;\n        glyphOffset = 8;\n        break;\n      case 6:\n        glyphScale = 40;\n        glyphOffset = 1;\n        break;\n      case 5:\n        glyphScale = 30;\n        glyphOffset = -6;\n        break;\n      case 4:\n        glyphScale = 23;\n        glyphOffset = -12;\n        break;\n      default:\n        throw new Vex.RERR('ClefError', `Invalid number of lines: ${numLines}`);\n    }\n\n    this.glyph.setPoint(glyphScale);\n    this.glyph.setYShift(glyphOffset);\n\n    return this;\n  }\n\n  draw() {\n    if (!this.x) throw new Vex.RERR('ClefError', \"Can't draw clef without x.\");\n    if (!this.stave) throw new Vex.RERR('ClefError', \"Can't draw clef without stave.\");\n    this.setRendered();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setContext(this.stave.context);\n    if (this.clef.line !== undefined) {\n      this.placeGlyphOnLine(this.glyph, this.stave, this.clef.line);\n    }\n\n    this.glyph.renderToStave(this.x);\n\n    if (this.annotation !== undefined) {\n      this.placeGlyphOnLine(this.attachment, this.stave, this.annotation.line);\n      this.attachment.setStave(this.stave);\n      this.attachment.setContext(this.stave.context);\n      this.attachment.renderToStave(this.x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class KeySignature extends StaveModifier {\n  static get CATEGORY() { return 'keysignatures'; }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  static get accidentalSpacing() {\n    return {\n      '#': {\n        above: 6,\n        below: 4,\n      },\n      'b': {\n        above: 4,\n        below: 7,\n      },\n      'n': {\n        above: 4,\n        below: 1,\n      },\n      '##': {\n        above: 6,\n        below: 4,\n      },\n      'bb': {\n        above: 4,\n        below: 7,\n      },\n      'db': {\n        above: 4,\n        below: 7,\n      },\n      'd': {\n        above: 4,\n        below: 7,\n      },\n      'bbs': {\n        above: 4,\n        below: 7,\n      },\n      '++': {\n        above: 6,\n        below: 4,\n      },\n      '+': {\n        above: 6,\n        below: 4,\n      },\n      '+-': {\n        above: 6,\n        below: 4,\n      },\n      '++-': {\n        above: 6,\n        below: 4,\n      },\n      'bs': {\n        above: 4,\n        below: 10,\n      },\n      'bss': {\n        above: 4,\n        below: 10,\n      },\n    };\n  }\n\n  // Create a new Key Signature based on a `key_spec`\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super();\n    this.setAttribute('type', 'KeySignature');\n\n    this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n    this.glyphs = [];\n    this.xPositions = []; // relative to this.x\n    this.paddingForced = false;\n  }\n\n  getCategory() { return KeySignature.CATEGORY; }\n\n  // Add an accidental glyph to the `KeySignature` instance which represents\n  // the provided `acc`. If `nextAcc` is also provided, the appropriate\n  // spacing will be included in the glyph's position\n  convertToGlyph(acc, nextAcc) {\n    const accGlyphData = Flow.accidentalCodes(acc.type);\n    const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n\n    // Determine spacing between current accidental and the next accidental\n    let extraWidth = 1;\n    if (acc.type === 'n' && nextAcc) {\n      const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n      if (spacing) {\n        const isAbove = nextAcc.line >= acc.line;\n        extraWidth = isAbove ? spacing.above : spacing.below;\n      }\n    }\n\n    // Place the glyph on the stave\n    this.placeGlyphOnLine(glyph, this.stave, acc.line);\n    this.glyphs.push(glyph);\n\n    const xPosition = this.xPositions[this.xPositions.length - 1];\n    const glyphWidth = glyph.getMetrics().width + extraWidth;\n    // Store the next accidental's x position\n    this.xPositions.push(xPosition + glyphWidth);\n    // Expand size of key signature\n    this.width += glyphWidth;\n  }\n\n  // Cancel out a key signature provided in the `spec` parameter. This will\n  // place appropriate natural accidentals before the key signature.\n  cancelKey(spec) {\n    this.formatted = false;\n    this.cancelKeySpec = spec;\n\n    return this;\n  }\n\n  convertToCancelAccList(spec) {\n    // Get the accidental list for the cancelled key signature\n    const cancel_accList = Flow.keySignature(spec);\n\n    // If the cancelled key has a different accidental type, ie: # vs b\n    const different_types = this.accList.length > 0\n      && cancel_accList.length > 0\n      && cancel_accList[0].type !== this.accList[0].type;\n\n    // Determine how many naturals needed to add\n    const naturals = different_types\n      ? cancel_accList.length\n      : cancel_accList.length - this.accList.length;\n\n    // Return if no naturals needed\n    if (naturals < 1) return;\n\n    // Get the line position for each natural\n    const cancelled = [];\n    for (let i = 0; i < naturals; i++) {\n      let index = i;\n      if (!different_types) {\n        index = cancel_accList.length - naturals + i;\n      }\n\n      const acc = cancel_accList[index];\n      cancelled.push({ type: 'n', line: acc.line });\n    }\n\n    // Combine naturals with main accidental list for the key signature\n    this.accList = cancelled.concat(this.accList);\n  }\n\n  // Deprecated\n  addToStave(stave) {\n    this.paddingForced = true;\n    stave.addModifier(this);\n\n    return this;\n  }\n\n  // Apply the accidental staff line placement based on the `clef` and\n  // the  accidental `type` for the key signature ('# or 'b').\n  convertAccLines(clef, type) {\n    let offset = 0.0; // if clef === \"treble\"\n    let customLines; // when clef doesn't follow treble key sig shape\n\n    switch (clef) {\n      // Treble & Subbass both have offsets of 0, so are not included.\n      case 'soprano':\n        if (type === '#') customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n        else offset = -1;\n        break;\n      case 'mezzo-soprano':\n        if (type === 'b') customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n        else offset = 1.5;\n        break;\n      case 'alto':\n        offset = 0.5;\n        break;\n      case 'tenor':\n        if (type === '#') customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        else offset = -0.5;\n        break;\n      case 'baritone-f':\n      case 'baritone-c':\n        if (type === 'b') customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n        else offset = 2;\n        break;\n      case 'bass':\n      case 'french':\n        offset = 1;\n        break;\n      default:\n        break;\n    }\n\n    // If there's a special case, assign those lines/spaces:\n    let i;\n    if (typeof customLines !== 'undefined') {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line = customLines[i];\n      }\n    } else if (offset !== 0) {\n      for (i = 0; i < this.accList.length; ++i) {\n        this.accList[i].line += offset;\n      }\n    }\n  }\n\n  getPadding(index) {\n    if (!this.formatted) this.format();\n\n    return (\n      this.glyphs.length === 0 || (!this.paddingForced && index < 2) ?\n        0 : this.padding\n    );\n  }\n\n  getWidth() {\n    if (!this.formatted) this.format();\n\n    return this.width;\n  }\n\n  setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n    this.formatted = false;\n    this.keySpec = keySpec;\n    this.cancelKeySpec = cancelKeySpec;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  // Alter the accidentals of a key spec one by one.\n  // Each alteration is a new accidental that replaces the\n  // original accidental (or the canceled one).\n  alterKey(alterKeySpec) {\n    this.formatted = false;\n    this.alterKeySpec = alterKeySpec;\n\n    return this;\n  }\n\n  convertToAlterAccList(alterKeySpec) {\n    const max = Math.min(alterKeySpec.length, this.accList.length);\n    for (let i = 0; i < max; ++i) {\n      if (alterKeySpec[i]) {\n        this.accList[i].type = alterKeySpec[i];\n      }\n    }\n  }\n\n  format() {\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    this.width = 0;\n    this.glyphs = [];\n    this.xPositions = [0]; // initialize with initial x position\n    this.accList = Flow.keySignature(this.keySpec);\n    if (this.cancelKeySpec) {\n      this.convertToCancelAccList(this.cancelKeySpec);\n    }\n    const firstAccidentalType = this.accList.length > 0 ? this.accList[0].type : null;\n    if (this.alterKeySpec) {\n      this.convertToAlterAccList(this.alterKeySpec);\n    }\n\n    if (this.accList.length > 0) {\n      const clef = ((this.position === StaveModifier.Position.END) ?\n        this.stave.endClef : this.stave.clef) || this.stave.clef;\n      this.convertAccLines(clef, firstAccidentalType);\n      for (let i = 0; i < this.accList.length; ++i) {\n        this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n      }\n    }\n\n    this.formatted = true;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('KeySignatureError', \"Can't draw key signature without stave.\");\n    }\n\n    if (!this.formatted) this.format();\n    this.setRendered();\n\n    for (let i = 0; i < this.glyphs.length; i++) {\n      const glyph = this.glyphs[i];\n      const x = this.x + this.xPositions[i];\n      glyph.setStave(this.stave);\n      glyph.setContext(this.stave.context);\n      glyph.renderToStave(x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Vex } from './vex';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\n\nconst assertIsValidFraction = (timeSpec) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new Vex.RERR(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new Vex.RERR(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY() { return 'timesignatures'; }\n\n  static get glyphs() {\n    return {\n      'C': {\n        code: 'v41',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'vb6',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec = null, customPadding = 15, validate_args = true) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n    this.validate_args = validate_args;\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = 40;\n    this.topLine = 2;\n    this.bottomLine = 4;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory() { return TimeSignature.CATEGORY; }\n\n  parseTimeSpec(timeSpec) {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    if (this.validate_args) {\n      assertIsValidFraction(timeSpec);\n    }\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits, botDigits) {\n    const glyph = new Glyph('v0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('v' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('v' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    });\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine) + 1\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig() {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec) {\n    this.timeSig = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY() { return 'voltas'; }\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5,\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return Volta.CATEGORY; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n    // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\nimport { Barline } from './stavebarline';\nimport { StaveModifier } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { KeySignature } from './keysignature';\nimport { TimeSignature } from './timesignature';\nimport { Volta } from './stavevolta';\n\nexport class Stave extends Element {\n  constructor(x, y, width, options) {\n    super();\n    this.setAttribute('type', 'Stave');\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.formatted = false;\n    this.start_x = x + 5;\n    this.end_x = x + width;\n    this.modifiers = [];  // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n    this.measure = 0;\n    this.clef = 'treble';\n    this.endClef = undefined;\n    this.font = {\n      family: 'sans-serif',\n      size: 8,\n      weight: '',\n    };\n    this.options = {\n      vertical_bar_width: 10,       // Width around vertical bar end-marker\n      glyph_spacing_px: 10,\n      num_lines: 5,\n      fill_style: '#999999',\n      left_bar: true,               // draw vertical bar on left\n      right_bar: true,               // draw vertical bar on right\n      spacing_between_lines_px: 10, // in pixels\n      space_above_staff_ln: 4,      // in staff lines\n      space_below_staff_ln: 4,      // in staff lines\n      top_text_position: 1,          // in staff lines\n    };\n    this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n    Vex.Merge(this.options, options);\n\n    this.resetLines();\n\n    const BARTYPE = Barline.type;\n    // beg bar\n    this.addModifier(new Barline(this.options.left_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n    // end bar\n    this.addEndModifier(new Barline(this.options.right_bar ? BARTYPE.SINGLE : BARTYPE.NONE));\n  }\n\n  space(spacing) { return this.options.spacing_between_lines_px * spacing; }\n\n  resetLines() {\n    this.options.line_config = [];\n    for (let i = 0; i < this.options.num_lines; i++) {\n      this.options.line_config.push({ visible: true });\n    }\n    this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n      this.options.spacing_between_lines_px;\n    this.options.bottom_text_position = this.options.num_lines;\n  }\n\n  getOptions() { return this.options; }\n\n  setNoteStartX(x) {\n    if (!this.formatted) this.format();\n\n    this.start_x = x;\n    if (this.modifiers.length > 0) {\n      const begBarline = this.modifiers[0];\n      if (begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n        begBarline.setX(this.start_x - begBarline.getWidth());\n      }\n    }\n    return this;\n  }\n  getNoteStartX() {\n    if (!this.formatted) this.format();\n\n    return this.start_x;\n  }\n\n  getNoteEndX() {\n    if (!this.formatted) this.format();\n\n    return this.end_x;\n  }\n  getTieStartX() { return this.start_x; }\n  getTieEndX() { return this.x + this.width; }\n  getX() { return this.x; }\n  getNumLines() { return this.options.num_lines; }\n  setNumLines(lines) {\n    this.options.num_lines = parseInt(lines, 10);\n    this.resetLines();\n    return this;\n  }\n  setY(y) { this.y = y; return this; }\n\n  getY() {return this.y}\n\n  getTopLineTopY() {\n    return this.getYForLine(0) - (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n  getBottomLineBottomY() {\n    return this.getYForLine(this.getNumLines() - 1) + (Flow.STAVE_LINE_THICKNESS / 2);\n  }\n\n  setX(x) {\n    const shift = x - this.x;\n    this.formatted = false;\n    this.x = x;\n    this.start_x += shift;\n    this.end_x += shift;\n    for (let i = 0; i < this.modifiers.length; i++) {\n      const mod = this.modifiers[i];\n      if (mod.x !== undefined) {\n        mod.x += shift;\n      }\n    }\n    return this;\n  }\n\n  setWidth(width) {\n    this.formatted = false;\n    this.width = width;\n    this.end_x = this.x + width;\n\n    // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n    // this.modifiers[1].setX(this.end_x);\n    return this;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getStyle() {\n    return Object.assign({\n      fillStyle: this.options.fill_style,\n      strokeStyle: this.options.fill_style, // yes, this is correct for legacy compatibility\n      lineWidth: Flow.STAVE_LINE_THICKNESS,\n    }, this.style || {});\n  }\n\n  setMeasure(measure) { this.measure = measure; return this; }\n\n  /**\n   * Gets the pixels to shift from the beginning of the stave\n   * following the modifier at the provided index\n   * @param  {Number} index The index from which to determine the shift\n   * @return {Number}       The amount of pixels shifted\n   */\n  getModifierXShift(index = 0) {\n    if (typeof index !== 'number') {\n      throw new Vex.RERR('InvalidIndex', 'Must be of number type');\n    }\n\n    if (!this.formatted) this.format();\n\n    if (this.getModifiers(StaveModifier.Position.BEGIN).length === 1) {\n      return 0;\n    }\n\n    let start_x = this.start_x - this.x;\n    const begBarline = this.modifiers[0];\n    if (begBarline.getType() === Barline.type.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n      start_x -= begBarline.getWidth();\n    }\n\n    return start_x;\n  }\n\n  // Coda & Segno Symbol functions\n  setRepetitionTypeLeft(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  setRepetitionTypeRight(type, y) {\n    this.modifiers.push(new Repetition(type, this.x, y));\n    return this;\n  }\n\n  // Volta functions\n  setVoltaType(type, number_t, y) {\n    this.modifiers.push(new Volta(type, number_t, this.x, y));\n    return this;\n  }\n\n  // Section functions\n  setSection(section, y) {\n    this.modifiers.push(new StaveSection(section, this.x, y));\n    return this;\n  }\n\n  // Tempo functions\n  setTempo(tempo, y) {\n    this.modifiers.push(new StaveTempo(tempo, this.x, y));\n    return this;\n  }\n\n  // Text functions\n  setText(text, position, options) {\n    this.modifiers.push(new StaveText(text, position, options));\n    return this;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getSpacingBetweenLines() {\n    return this.options.spacing_between_lines_px;\n  }\n\n  getBoundingBox() {\n    return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n  }\n\n  getBottomY() {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const score_bottom = this.getYForLine(options.num_lines) +\n      (options.space_below_staff_ln * spacing);\n\n    return score_bottom;\n  }\n\n  getBottomLineY() {\n    return this.getYForLine(this.options.num_lines);\n  }\n\n  // This returns the y for the *center* of a staff line\n  getYForLine(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n\n    const y = this.y + (line * spacing) + (headroom * spacing);\n\n    return y;\n  }\n\n  getLineForY(y) {\n    // Does the reverse of getYForLine - somewhat dumb and just calls\n    // getYForLine until the right value is reaches\n\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    return ((y - this.y) / spacing) - headroom;\n  }\n\n  getYForTopText(line) {\n    const l = line || 0;\n    return this.getYForLine(-l - this.options.top_text_position);\n  }\n\n  getYForBottomText(line) {\n    const l = line || 0;\n    return this.getYForLine(this.options.bottom_text_position + l);\n  }\n\n  getYForNote(line) {\n    const options = this.options;\n    const spacing = options.spacing_between_lines_px;\n    const headroom = options.space_above_staff_ln;\n    const y = this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n\n    return y;\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(3);\n  }\n\n  addModifier(modifier, position) {\n    if (position !== undefined) {\n      modifier.setPosition(position);\n    }\n\n    modifier.setStave(this);\n    this.formatted = false;\n    this.modifiers.push(modifier);\n    return this;\n  }\n\n  addEndModifier(modifier) {\n    this.addModifier(modifier, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Bar Line functions\n  setBegBarType(type) {\n    // Only valid bar types at beginning of stave is none, single or begin repeat\n    const { SINGLE, REPEAT_BEGIN, NONE } = Barline.type;\n    if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n      this.modifiers[0].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setEndBarType(type) {\n    // Repeat end not valid at end of stave\n    if (type !== Barline.type.REPEAT_BEGIN) {\n      this.modifiers[1].setType(type);\n      this.formatted = false;\n    }\n    return this;\n  }\n\n  setClef(clefSpec, size, annotation, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    if (position === StaveModifier.Position.END) {\n      this.endClef = clefSpec;\n    } else {\n      this.clef = clefSpec;\n    }\n\n    const clefs = this.getModifiers(position, Clef.CATEGORY);\n    if (clefs.length === 0) {\n      this.addClef(clefSpec, size, annotation, position);\n    } else {\n      clefs[0].setType(clefSpec, size, annotation);\n    }\n\n    return this;\n  }\n\n  setEndClef(clefSpec, size, annotation) {\n    this.setClef(clefSpec, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  setKeySignature(keySpec, cancelKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n    if (keySignatures.length === 0) {\n      this.addKeySignature(keySpec, cancelKeySpec, position);\n    } else {\n      keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n    }\n\n    return this;\n  }\n\n  setEndKeySignature(keySpec, cancelKeySpec) {\n    this.setKeySignature(keySpec, cancelKeySpec, StaveModifier.Position.END);\n    return this;\n  }\n\n  setTimeSignature(timeSpec, customPadding, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n\n    const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n    if (timeSignatures.length === 0) {\n      this.addTimeSignature(timeSpec, customPadding, position);\n    } else {\n      timeSignatures[0].setTimeSig(timeSpec);\n    }\n\n    return this;\n  }\n\n  setEndTimeSignature(timeSpec, customPadding) {\n    this.setTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  addKeySignature(keySpec, cancelKeySpec, position) {\n    if (position === undefined) {\n      position = StaveModifier.Position.BEGIN;\n    }\n    this.addModifier(new KeySignature(keySpec, cancelKeySpec)\n      .setPosition(position), position);\n    return this;\n  }\n\n  addClef(clef, size, annotation, position) {\n    if (position === undefined || position === StaveModifier.Position.BEGIN) {\n      this.clef = clef;\n    } else if (position === StaveModifier.Position.END) {\n      this.endClef = clef;\n    }\n\n    this.addModifier(new Clef(clef, size, annotation), position);\n    return this;\n  }\n\n  addEndClef(clef, size, annotation) {\n    this.addClef(clef, size, annotation, StaveModifier.Position.END);\n    return this;\n  }\n\n  addTimeSignature(timeSpec, customPadding, position) {\n    this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n    return this;\n  }\n\n  addEndTimeSignature(timeSpec, customPadding) {\n    this.addTimeSignature(timeSpec, customPadding, StaveModifier.Position.END);\n    return this;\n  }\n\n  // Deprecated\n  addTrebleGlyph() {\n    this.addClef('treble');\n    return this;\n  }\n\n  getModifiers(position, category) {\n    if (position === undefined) return this.modifiers;\n\n    return this.modifiers.filter(modifier =>\n      position === modifier.getPosition() &&\n      (category === undefined || category === modifier.getCategory())\n    );\n  }\n\n  sortByCategory(items, order) {\n    for (let i = items.length - 1; i >= 0; i--) {\n      for (let j = 0; j < i; j++) {\n        if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n          const temp = items[j];\n          items[j] = items[j + 1];\n          items[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  format() {\n    const begBarline = this.modifiers[0];\n    const endBarline = this.modifiers[1];\n\n    const begModifiers = this.getModifiers(StaveModifier.Position.BEGIN);\n    const endModifiers = this.getModifiers(StaveModifier.Position.END);\n\n    this.sortByCategory(begModifiers, {\n      barlines: 0, clefs: 1, keysignatures: 2, timesignatures: 3,\n    });\n\n    this.sortByCategory(endModifiers, {\n      timesignatures: 0, keysignatures: 1, barlines: 2, clefs: 3,\n    });\n\n    if (begModifiers.length > 1 &&\n      begBarline.getType() === Barline.type.REPEAT_BEGIN) {\n      begModifiers.push(begModifiers.splice(0, 1)[0]);\n      begModifiers.splice(0, 0, new Barline(Barline.type.SINGLE));\n    }\n\n    if (endModifiers.indexOf(endBarline) > 0) {\n      endModifiers.splice(0, 0, new Barline(Barline.type.NONE));\n    }\n\n    let width;\n    let padding;\n    let modifier;\n    let offset = 0;\n    let x = this.x;\n    for (let i = 0; i < begModifiers.length; i++) {\n      modifier = begModifiers[i];\n      padding = modifier.getPadding(i + offset);\n      width = modifier.getWidth();\n\n      x += padding;\n      modifier.setX(x);\n      x += width;\n\n      if (padding + width === 0) offset--;\n    }\n\n    this.start_x = x;\n    x = this.x + this.width;\n\n    const widths = {\n      left: 0,\n      right: 0,\n      paddingRight: 0,\n      paddingLeft: 0,\n    };\n\n    let lastBarlineIdx = 0;\n\n    for (let i = 0; i < endModifiers.length; i++) {\n      modifier = endModifiers[i];\n      lastBarlineIdx = (modifier.getCategory() === 'barlines') ? i : lastBarlineIdx;\n\n      widths.right = 0;\n      widths.left = 0;\n      widths.paddingRight = 0;\n      widths.paddingLeft = 0;\n      const layoutMetrics = modifier.getLayoutMetrics();\n\n      if (layoutMetrics) {\n        if (i !== 0) {\n          widths.right = layoutMetrics.xMax || 0;\n          widths.paddingRight = layoutMetrics.paddingRight || 0;\n        }\n        widths.left = (-layoutMetrics.xMin) || 0;\n        widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n\n        if (i === endModifiers.length - 1) {\n          widths.paddingLeft = 0;\n        }\n      } else {\n        widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n        if (i !== 0) {\n          widths.right = modifier.getWidth();\n        }\n        if (i === 0) {\n          widths.left = modifier.getWidth();\n        }\n      }\n      x -= widths.paddingRight;\n      x -= widths.right;\n\n      modifier.setX(x);\n\n      x -= widths.left;\n      x -= widths.paddingLeft;\n    }\n\n    this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n    this.formatted = true;\n  }\n\n  /**\n   * All drawing functions below need the context to be set.\n   */\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    if (!this.formatted) this.format();\n\n    const num_lines = this.options.num_lines;\n    const width = this.width;\n    const x = this.x;\n    let y;\n\n    // Render lines\n    for (let line = 0; line < num_lines; line++) {\n      y = this.getYForLine(line);\n\n      this.applyStyle();\n      if (this.options.line_config[line].visible) {\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(x + width, y);\n        this.context.stroke();\n      }\n      this.restoreStyle();\n    }\n\n    // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n    for (let i = 0; i < this.modifiers.length; i++) {\n      // Only draw modifier if it has a draw function\n      if (typeof this.modifiers[i].draw === 'function') {\n        this.modifiers[i].applyStyle(this.context);\n        this.modifiers[i].draw(this, this.getModifierXShift(i));\n        this.modifiers[i].restoreStyle(this.context);\n      }\n    }\n\n    // Render measure numbers\n    if (this.measure > 0) {\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      const text_width = this.context.measureText('' + this.measure).width;\n      y = this.getYForTopText(0) + 3;\n      this.context.fillText('' + this.measure, this.x - text_width / 2, y);\n      this.context.restore();\n    }\n\n    return this;\n  }\n\n  // Draw Simple barlines for backward compatability\n  // Do not delete - draws the beginning bar of the stave\n  drawVertical(x, isDouble) {\n    this.drawVerticalFixed(this.x + x, isDouble);\n  }\n\n  drawVerticalFixed(x, isDouble) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    if (isDouble) {\n      this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n    }\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  drawVerticalBar(x) {\n    this.drawVerticalBarFixed(this.x + x, false);\n  }\n\n  drawVerticalBarFixed(x) {\n    this.checkContext();\n\n    const top_line = this.getYForLine(0);\n    const bottom_line = this.getYForLine(this.options.num_lines - 1);\n    this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n  }\n\n  /**\n   * Get the current configuration for the Stave.\n   * @return {Array} An array of configuration objects.\n   */\n  getConfigForLines() {\n    return this.options.line_config;\n  }\n\n  /**\n   * Configure properties of the lines in the Stave\n   * @param line_number The index of the line to configure.\n   * @param line_config An configuration object for the specified line.\n   * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n   *   range of the number of lines specified in the constructor.\n   */\n  setConfigForLine(line_number, line_config) {\n    if (line_number >= this.options.num_lines || line_number < 0) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The line number must be within the range of the number of lines in the Stave.'\n      );\n    }\n\n    if (line_config.visible === undefined) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration object is missing the 'visible' property.\"\n      );\n    }\n\n    if (typeof (line_config.visible) !== 'boolean') {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        \"The line configuration objects 'visible' property must be true or false.\"\n      );\n    }\n\n    this.options.line_config[line_number] = line_config;\n\n    return this;\n  }\n\n  /**\n   * Set the staff line configuration array for all of the lines at once.\n   * @param lines_configuration An array of line configuration objects.  These objects\n   *   are of the same format as the single one passed in to setLineConfiguration().\n   *   The caller can set null for any line config entry if it is desired that the default be used\n   * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n   *   exactly the same number of elements as the num_lines configuration object set in\n   *   the constructor.\n   */\n  setConfigForLines(lines_configuration) {\n    if (lines_configuration.length !== this.options.num_lines) {\n      throw new Vex.RERR(\n        'StaveConfigError',\n        'The length of the lines configuration array must match the number of lines in the Stave'\n      );\n    }\n\n    // Make sure the defaults are present in case an incomplete set of\n    //  configuration options were supplied.\n    // eslint-disable-next-line\n    for (const line_config in lines_configuration) {\n      // Allow 'null' to be used if the caller just wants the default for a particular node.\n      if (!lines_configuration[line_config]) {\n        lines_configuration[line_config] = this.options.line_config[line_config];\n      }\n      Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n    }\n\n    this.options.line_config = lines_configuration;\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Stave } from './stave';\n\nexport class TabStave extends Stave {\n  constructor(x, y, width, options) {\n    const tab_options = {\n      spacing_between_lines_px: 13,\n      num_lines: 6,\n      top_text_position: 1,\n    };\n\n    Vex.Merge(tab_options, options);\n    super(x, y, width, tab_options);\n    this.setAttribute('type', 'TabStave');\n  }\n\n  getYForGlyphs() {\n    return this.getYForLine(2.5);\n  }\n\n  // Deprecated\n  addTabGlyph() {\n    this.addClef('tab');\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Dot } from './dot';\nimport { Glyph } from './glyph';\n\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n  const stem_through = [];\n  let group = [];\n  for (let string = 1; string <= num_lines; string++) {\n    const is_used = strings_used.indexOf(string) > -1;\n\n    if (!is_used) {\n      group.push(string);\n    } else {\n      stem_through.push(group);\n      group = [];\n    }\n  }\n  if (group.length > 0) stem_through.push(group);\n\n  return stem_through;\n}\n\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n  const up_stem = stem_direction !== 1;\n  const down_stem = stem_direction !== -1;\n\n  const line_spacing = stave.getSpacingBetweenLines();\n  const total_lines = stave.getNumLines();\n\n  const stem_lines = [];\n\n  unused_strings.forEach(strings => {\n    const containsLastString = strings.indexOf(total_lines) > -1;\n    const containsFirstString =  strings.indexOf(1) > -1;\n\n    if ((up_stem && containsFirstString) ||\n       (down_stem && containsLastString)) {\n      return;\n    }\n\n    // If there's only one string in the group, push a duplicate value.\n    // We do this because we need 2 strings to convert into upper/lower y\n    // values.\n    if (strings.length === 1) {\n      strings.push(strings[0]);\n    }\n\n    const line_ys = [];\n    // Iterate through each group string and store it's y position\n    strings.forEach((string, index, strings) => {\n      const isTopBound = string === 1;\n      const isBottomBound = string === total_lines;\n\n      // Get the y value for the appropriate staff line,\n      // we adjust for a 0 index array, since string numbers are index 1\n      let y = stave.getYForLine(string - 1);\n\n      // Unless the string is the first or last, add padding to each side\n      // of the line\n      if (index === 0 && !isTopBound) {\n        y -= line_spacing / 2 - 1;\n      } else if (index === strings.length - 1 && !isBottomBound) {\n        y += line_spacing / 2 - 1;\n      }\n\n      // Store the y value\n      line_ys.push(y);\n\n      // Store a subsequent y value connecting this group to the main\n      // stem above/below the stave if it's the top/bottom string\n      if (stem_direction === 1 && isTopBound) {\n        line_ys.push(stem_y - 2);\n      } else if (stem_direction === -1 && isBottomBound) {\n        line_ys.push(stem_y + 2);\n      }\n    });\n\n    // Add the sorted y values to the\n    stem_lines.push(line_ys.sort((a, b) => a - b));\n  });\n\n  return stem_lines;\n}\n\nexport class TabNote extends StemmableNote {\n  static get CATEGORY() { return 'tabnotes'; }\n\n  // Initialize the TabNote with a `tab_struct` full of properties\n  // and whether to `draw_stem` when rendering the note\n  constructor(tab_struct, draw_stem) {\n    super(tab_struct);\n    this.setAttribute('type', 'TabNote');\n\n    this.ghost = false; // Renders parenthesis around notes\n    // Note properties\n    //\n    // The fret positions in the note. An array of `{ str: X, fret: X }`\n    this.positions = tab_struct.positions;\n\n    // Render Options\n    Vex.Merge(this.render_options, {\n      // font size for note heads and rests\n      glyph_font_scale: Flow.DEFAULT_TABLATURE_FONT_SCALE,\n      // Flag to draw a stem\n      draw_stem,\n      // Flag to draw dot modifiers\n      draw_dots: draw_stem,\n      // Flag to extend the main stem through the stave and fret positions\n      draw_stem_through_stave: false,\n      // vertical shift from stave line\n      y_shift: 0,\n      // normal glyph scale\n      scale: 1.0,\n      // default tablature font\n      font: '10pt Arial',\n    });\n\n    this.glyph = Flow.durationToGlyph(this.duration, this.noteType);\n\n    if (!this.glyph) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        `Invalid note initialization data (No glyph found): ${JSON.stringify(tab_struct)}`\n      );\n    }\n\n    this.buildStem();\n\n    if (tab_struct.stem_direction) {\n      this.setStemDirection(tab_struct.stem_direction);\n    } else {\n      this.setStemDirection(Stem.UP);\n    }\n\n    // Renders parenthesis around notes\n    this.ghost = false;\n    this.updateWidth();\n  }\n\n  reset() {\n    if (this.stave) this.setStave(this.stave);\n  }\n\n  // The ModifierContext category\n  getCategory() { return TabNote.CATEGORY; }\n\n  // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n  // Often used for indicating frets that are being bent to\n  setGhost(ghost) {\n    this.ghost = ghost;\n    this.updateWidth();\n    return this;\n  }\n\n  // Determine if the note has a stem\n  hasStem() { return this.render_options.draw_stem; }\n\n  // Get the default stem extension for the note\n  getStemExtension() {\n    const glyph = this.getGlyph();\n\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    if (glyph) {\n      return this.getStemDirection() === 1\n        ? glyph.tabnote_stem_up_extension\n        : glyph.tabnote_stem_down_extension;\n    }\n\n    return 0;\n  }\n\n  // Add a dot to the note\n  addDot() {\n    const dot = new Dot();\n    this.dots += 1;\n    return this.addModifier(dot, 0);\n  }\n\n  // Calculate and store the width of the note\n  updateWidth() {\n    this.glyphs = [];\n    this.width = 0;\n    for (let i = 0; i < this.positions.length; ++i) {\n      let fret = this.positions[i].fret;\n      if (this.ghost) fret = '(' + fret + ')';\n      const glyph = Flow.tabToGlyph(fret, this.render_options.scale);\n      this.glyphs.push(glyph);\n      this.width = Math.max(glyph.getWidth(), this.width);\n    }\n    // For some reason we associate a notehead glyph with a TabNote, and this\n    // glyph is used for certain width calculations. Of course, this is totally\n    // incorrect since a notehead is a poor approximation for the dimensions of\n    // a fret number which can have multiple digits. As a result, we must\n    // overwrite getWidth() to return the correct width\n    this.glyph.getWidth = () => this.width;\n  }\n\n  // Set the `stave` to the note\n  setStave(stave) {\n    super.setStave(stave);\n    this.context = stave.context;\n\n    // Calculate the fret number width based on font used\n    let i;\n    if (this.context) {\n      const ctx = this.context;\n      this.width = 0;\n      for (i = 0; i < this.glyphs.length; ++i) {\n        const glyph = this.glyphs[i];\n        const text = '' + glyph.text;\n        if (text.toUpperCase() !== 'X') {\n          ctx.save();\n          ctx.setRawFont(this.render_options.font);\n          glyph.width = ctx.measureText(text).width;\n          ctx.restore();\n          glyph.getWidth = () => glyph.width;\n        }\n        this.width = Math.max(glyph.getWidth(), this.width);\n      }\n      this.glyph.getWidth = () => this.width;\n    }\n\n    // we subtract 1 from `line` because getYForLine expects a 0-based index,\n    // while the position.str is a 1-based index\n    const ys = this.positions.map(({ str: line }) => stave.getYForLine(line - 1));\n\n    this.setYs(ys);\n\n    if (this.stem) {\n      this.stem.setYBounds(this.getStemY(), this.getStemY());\n    }\n\n    return this;\n  }\n\n  // Get the fret positions for the note\n  getPositions() { return this.positions; }\n\n  // Add self to the provided modifier context `mc`\n  addToModifierContext(mc) {\n    this.setModifierContext(mc);\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      this.modifierContext.addModifier(this.modifiers[i]);\n    }\n    this.modifierContext.addModifier(this);\n    this.preFormatted = false;\n    return this;\n  }\n\n  // Get the `x` coordinate to the right of the note\n  getTieRightX() {\n    let tieStartX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieStartX += note_glyph_width / 2;\n    tieStartX += (-this.width / 2) + this.width + 2;\n\n    return tieStartX;\n  }\n\n  // Get the `x` coordinate to the left of the note\n  getTieLeftX() {\n    let tieEndX = this.getAbsoluteX();\n    const note_glyph_width = this.glyph.getWidth();\n    tieEndX += note_glyph_width / 2;\n    tieEndX -= (this.width / 2) + 2;\n\n    return tieEndX;\n  }\n\n  // Get the default `x` and `y` coordinates for a modifier at a specific\n  // `position` at a fret position `index`\n  getModifierStartXY(position, index) {\n    if (!this.preFormatted) {\n      throw new Vex.RERR('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', 'No Y-Values calculated for this note.');\n    }\n\n    let x = 0;\n    if (position === Modifier.Position.LEFT) {\n      x = -1 * 2;  // extra_left_px\n    } else if (position === Modifier.Position.RIGHT) {\n      x = this.width + 2; // extra_right_px\n    } else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n      const note_glyph_width = this.glyph.getWidth();\n      x = note_glyph_width / 2;\n    }\n\n    return {\n      x: this.getAbsoluteX() + x,\n      y: this.ys[index],\n    };\n  }\n\n  // Get the default line for rest\n  getLineForRest() { return this.positions[0].str; }\n\n  // Pre-render formatting\n  preFormat() {\n    if (this.preFormatted) return;\n    if (this.modifierContext) this.modifierContext.preFormat();\n    // width is already set during init()\n    this.setPreFormatted(true);\n  }\n\n  // Get the x position for the stem\n  getStemX() { return this.getCenterGlyphX(); }\n\n  // Get the y position for the stem\n  getStemY() {\n    const num_lines = this.stave.getNumLines();\n\n    // The decimal staff line amounts provide optimal spacing between the\n    // fret number and the stem\n    const stemUpLine = -0.5;\n    const stemDownLine = num_lines - 0.5;\n    const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n    return this.stave.getYForLine(stemStartLine);\n  }\n\n  // Get the stem extents for the tabnote\n  getStemExtents() {\n    return this.stem.getExtents();\n  }\n\n  // Draw the fal onto the context\n  drawFlag() {\n    const {\n      beam, glyph, context, stem, stem_direction,\n      render_options: { draw_stem, glyph_font_scale },\n    } = this;\n\n    const shouldDrawFlag = beam == null && draw_stem;\n\n    // Now it's the flag's turn.\n    if (glyph.flag && shouldDrawFlag) {\n      const flag_x = this.getStemX() + 1;\n      const flag_y = this.getStemY() - stem.getHeight();\n\n      const flag_code = stem_direction === Stem.DOWN\n        ? glyph.code_flag_downstem // Down stems have flags on the left.\n        : glyph.code_flag_upstem;\n\n      // Draw the Flag\n      Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code);\n    }\n  }\n\n  // Render the modifiers onto the context\n  drawModifiers() {\n    // Draw the modifiers\n    this.modifiers.forEach((modifier) => {\n      // Only draw the dots if enabled\n      if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n      modifier.setContext(this.context);\n      modifier.drawWithStyle();\n    });\n  }\n\n  // Render the stem extension through the fret positions\n  drawStemThrough() {\n    const stem_x = this.getStemX();\n    const stem_y = this.getStemY();\n    const ctx = this.context;\n\n    const stem_through = this.render_options.draw_stem_through_stave;\n    const draw_stem = this.render_options.draw_stem;\n    if (draw_stem && stem_through) {\n      const total_lines = this.stave.getNumLines();\n      const strings_used = this.positions.map(position => position.str);\n\n      const unused_strings = getUnusedStringGroups(total_lines, strings_used);\n      const stem_lines = getPartialStemLines(\n        stem_y,\n        unused_strings,\n        this.getStave(),\n        this.getStemDirection()\n      );\n\n      ctx.save();\n      ctx.setLineWidth(Stem.WIDTH);\n      stem_lines.forEach(bounds => {\n        if (bounds.length === 0) return;\n\n        ctx.beginPath();\n        ctx.moveTo(stem_x, bounds[0]);\n        ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n        ctx.stroke();\n        ctx.closePath();\n      });\n      ctx.restore();\n    }\n  }\n\n  // Render the fret positions onto the context\n  drawPositions() {\n    const ctx = this.context;\n    const x = this.getAbsoluteX();\n    const ys = this.ys;\n    for (let i = 0; i < this.positions.length; ++i) {\n      const y = ys[i] + this.render_options.y_shift;\n      const glyph = this.glyphs[i];\n\n      // Center the fret text beneath the notation note head\n      const note_glyph_width = this.glyph.getWidth();\n      const tab_x = x + (note_glyph_width / 2) - (glyph.getWidth() / 2);\n\n      // FIXME: Magic numbers.\n      ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n\n      if (glyph.code) {\n        Glyph.renderGlyph(ctx, tab_x, y,\n          this.render_options.glyph_font_scale * this.render_options.scale,\n          glyph.code);\n      } else {\n        ctx.save();\n        ctx.setRawFont(this.render_options.font);\n        const text = glyph.text.toString();\n        ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n        ctx.restore();\n      }\n    }\n  }\n\n  // The main rendering function for the entire note\n  draw() {\n    this.checkContext();\n\n    if (!this.stave) {\n      throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    }\n\n    if (this.ys.length === 0) {\n      throw new Vex.RERR('NoYValues', \"Can't draw note without Y values.\");\n    }\n\n    this.setRendered();\n    const render_stem = this.beam == null && this.render_options.draw_stem;\n\n    this.drawPositions();\n    this.drawStemThrough();\n\n    const stem_x = this.getStemX();\n\n    this.stem.setNoteHeadXBounds(stem_x, stem_x);\n\n    if (render_stem) {\n      this.context.openGroup('stem', null, { pointerBBox: true });\n      this.stem.setContext(this.context).draw();\n      this.context.closeGroup();\n    }\n\n    this.drawFlag();\n    this.drawModifiers();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args) { if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args); }\n\nexport class VibratoBracket extends Element {\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line) { this.line = line; return this; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n\n  // Draw the vibrato bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n    // If stop note is not set then vibrato will be drawn\n    // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifier } from './stavemodifier';\nimport { TimeSignature } from './timesignature';\n\nlet semibrave_rest;\nfunction get_semibrave_rest() {\n  if (!semibrave_rest) {\n    const notehead = new NoteHead({ duration: 'w', note_type: 'r' });\n    semibrave_rest = {\n      glyph_font_scale: notehead.render_options.glyph_font_scale,\n      glyph_code: notehead.glyph_code,\n      width: notehead.getWidth(),\n    };\n  }\n  return semibrave_rest;\n}\n\nexport class MultiMeasureRest extends Element {\n  // Parameters:\n  // * `number_of_measures` - Number of measures.\n  // * `options` - The options object.\n  //   * `show_number` - Show number of measures string or not.\n  //   * `number_line` -  Staff line to render the number of measures string.\n  //   * `number_glyph_point` - Size of the number of measures string glyphs.\n  //   * `padding_left` - Left padding from stave x.\n  //   * `padding_right` - Right padding from stave end x.\n  //   * `line` - Staff line to render rest line or rest symbols.\n  //   * `spacing_between_lines_px` - Spacing between staff lines to\n  // resolve serif height or {2-bar and 4-bar}rest symbol height.\n  //   * `line_thickness` - Rest line thickness.\n  //   * `serif_thickness` - Rest serif line thickness.\n  //   * `use_symbols` - Use rest symbols or not.\n  //   * `symbol_spacing` - Spacing between each rest symbol glyphs.\n  //   * `semibrave_rest_glyph_scale` - Size of the semibrave(1-bar) rest symbol.\n  constructor(number_of_measures, options) {\n    super();\n    this.setAttribute('type', 'MultiMeasureRest');\n\n    this.render_options = {\n      show_number: true,\n      number_line: -0.5,\n      number_glyph_point: 40, // same as TimeSignature.\n\n      padding_left: undefined,\n      padding_right: undefined,\n\n      line: 2,\n\n      spacing_between_lines_px: 10, // same as Stave.\n\n      line_thickness: undefined,\n      serif_thickness: 2,\n\n      use_symbols: false,\n      symbol_spacing: undefined,\n\n      /* same as NoteHead. */\n      semibrave_rest_glyph_scale: Flow.DEFAULT_NOTATION_FONT_SCALE,\n    };\n    Vex.Merge(this.render_options, options);\n\n    this.number_of_measures = number_of_measures;\n    this.xs = {\n      left: NaN,\n      right: NaN,\n    };\n  }\n\n  getXs() {\n    return this.xs;\n  }\n\n  setStave(stave) {\n    this.stave = stave;\n    return this;\n  }\n\n  getStave() {\n    return this.stave;\n  }\n\n  drawLine(ctx, left, right, sbl) {\n    const y = this.stave.getYForLine(this.render_options.line);\n    const padding = (right - left) * 0.1;\n\n    left += padding;\n    right -= padding;\n\n    const serif = {\n      thickness: this.render_options.serif_thickness,\n      height: sbl,\n    };\n    let lineThicknessHalf = sbl * 0.25;\n    if (!isNaN(this.render_options.line_thickness)) {\n      lineThicknessHalf = this.render_options.line_thickness * 0.5;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(left, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - sbl);\n    ctx.lineTo(left + serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - lineThicknessHalf);\n    ctx.lineTo(right - serif.thickness, y - sbl);\n    ctx.lineTo(right, y - sbl);\n    ctx.lineTo(right, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + sbl);\n    ctx.lineTo(right - serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + lineThicknessHalf);\n    ctx.lineTo(left + serif.thickness, y + sbl);\n    ctx.lineTo(left, y + sbl);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  drawSymbols(ctx, left, right, sbl) {\n    const n4 = Math.floor(this.number_of_measures / 4);\n    const n = this.number_of_measures % 4;\n    const n2 = Math.floor(n / 2);\n    const n1 = n % 2;\n\n    const semibrave_rest = get_semibrave_rest();\n    const semibrave_rest_width = semibrave_rest.width *\n      (this.render_options.semibrave_rest_glyph_scale / semibrave_rest.glyph_font_scale);\n    const glyphs = {\n      2: {\n        width: semibrave_rest_width * 0.5,\n        height: sbl,\n      },\n      1: {\n        width: semibrave_rest_width,\n      },\n    };\n\n    let spacing = semibrave_rest_width * 1.35;\n    if (!isNaN(this.render_options.symbol_spacing)) {\n      spacing = this.render_options.symbol_spacing;\n    }\n\n    const width = (n4 * glyphs[2].width) + (n2 * glyphs[2].width)\n      + (n1 * glyphs[1].width) + ((n4 + n2 + n1 - 1) * spacing);\n    let x = left + ((right - left) * 0.5) - (width * 0.5);\n    const yTop = this.stave.getYForLine(this.render_options.line - 1);\n    const yMiddle = this.stave.getYForLine(this.render_options.line);\n    const yBottom = this.stave.getYForLine(this.render_options.line + 1);\n\n    ctx.save();\n    ctx.setStrokeStyle('none');\n    ctx.setLineWidth(0);\n\n    for (let i = 0; i < n4; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n2; ++i) {\n      ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n      x += glyphs[2].width + spacing;\n    }\n    for (let i = 0; i < n1; ++i) {\n      Glyph.renderGlyph(ctx, x, yTop, this.render_options.semibrave_rest_glyph_scale,\n        semibrave_rest.glyph_code);\n      x += glyphs[1].width + spacing;\n    }\n\n    ctx.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const ctx = this.context;\n    const stave = this.stave;\n    const sbl = this.render_options.spacing_between_lines_px;\n\n    let left = stave.getNoteStartX();\n    let right = stave.getNoteEndX();\n\n    // FIXME: getNoteStartX() returns x+5(barline width) and\n    // getNoteEndX() returns x + width(no barline width) by default. how to fix?\n    const begModifiers = stave.getModifiers(StaveModifier.Position.BEGIN);\n    if (begModifiers.length === 1 && begModifiers[0].getCategory() === 'barlines') {\n      left -= begModifiers[0].getWidth();\n    }\n\n    if (!isNaN(this.render_options.padding_left)) {\n      left = stave.getX() + this.render_options.padding_left;\n    }\n\n    if (!isNaN(this.render_options.padding_right)) {\n      right = stave.getX() + stave.getWidth() - this.render_options.padding_right;\n    }\n\n    this.xs.left = left;\n    this.xs.right = right;\n\n    if (this.render_options.use_symbols) {\n      this.drawSymbols(ctx, left, right, sbl);\n    } else {\n      this.drawLine(ctx, left, right, sbl);\n    }\n\n    if (this.render_options.show_number) {\n      const timeSpec = '/' + this.number_of_measures;\n      const timeSig = new TimeSignature(null, undefined, false);\n      timeSig.point = this.render_options.number_glyph_point;\n      timeSig.setTimeSig(timeSpec);\n      timeSig.setStave(stave);\n      timeSig.x = left + ((right - left) * 0.5) - (timeSig.timeSig.glyph.getMetrics().width * 0.5);\n      timeSig.bottomLine = this.render_options.number_line;\n      timeSig.setContext(ctx).draw();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\n\n/** @constructor */\nexport class ClefNote extends Note {\n  static get CATEGORY() { return 'clefnote'; }\n\n  constructor(type, size, annotation) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'ClefNote');\n\n    this.setType(type, size, annotation);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  setType(type, size, annotation) {\n    this.type = type;\n    this.clef_obj = new Clef(type, size, annotation);\n    this.clef = this.clef_obj.clef;\n    this.glyph = new Glyph(this.clef.code, this.clef.point);\n    this.setWidth(this.glyph.getMetrics().width);\n    return this;\n  }\n\n  getClef() {\n    return this.clef;\n  }\n\n  setContext(context) {\n    this.context = context;\n    this.glyph.setContext(this.context);\n    return this;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  getCategory() { return ClefNote.CATEGORY; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    if (!this.glyph.getContext()) {\n      this.glyph.setContext(this.context);\n    }\n\n    this.setRendered();\n    const abs_x = this.getAbsoluteX();\n\n    this.glyph.setStave(this.stave);\n    this.glyph.setYShift(\n      this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n    this.glyph.renderToStave(abs_x);\n\n    // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n    if (this.clef_obj.annotation !== undefined) {\n      const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n      if (!attachment.getContext()) {\n        attachment.setContext(this.context);\n      }\n      attachment.setStave(this.stave);\n      attachment.setYShift(\n        this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n      attachment.setXShift(this.clef_obj.annotation.x_shift);\n      attachment.renderToStave(abs_x);\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\n\nimport { Note } from './note';\nimport { KeySignature } from './keysignature';\n\nexport class KeySigNote extends Note {\n  constructor(keySpec, cancelKeySpec, alterKeySpec) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'KeySigNote');\n\n    this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    this.keySignature.setStave(this.stave);\n    this.keySignature.format();\n    this.setWidth(this.keySignature.width);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n    this.keySignature.x = this.getAbsoluteX();\n    this.keySignature.setContext(this.context);\n    this.keySignature.draw();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { TabTie } from './tabtie';\n\nexport class TabSlide extends TabTie {\n  static get SLIDE_UP() {\n    return 1;\n  }\n  static get SLIDE_DOWN() {\n    return -1;\n  }\n\n  static createSlideUp(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  }\n\n  static createSlideDown(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  }\n\n  constructor(notes, direction) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super(notes, 'sl.');\n    this.setAttribute('type', 'TabSlide');\n\n    if (!direction) {\n      const first_fret = notes.first_note.getPositions()[0].fret;\n      const last_fret = notes.last_note.getPositions()[0].fret;\n\n      direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n        TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n    }\n\n    this.slide_direction = direction;\n    this.render_options.cp1 = 11;\n    this.render_options.cp2 = 14;\n    this.render_options.y_shift = 0.5;\n\n    this.setFont({ font: 'Times', size: 10, style: 'bold italic' });\n    this.setNotes(notes);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    const first_x_px = params.first_x_px;\n    const first_ys = params.first_ys;\n    const last_x_px = params.last_x_px;\n\n    const direction = this.slide_direction;\n    if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n      throw new Vex.RERR('BadSlide', 'Invalid slide direction');\n    }\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const slide_y = first_ys[this.first_indices[i]] +\n        this.render_options.y_shift;\n\n      if (isNaN(slide_y)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for slide rendering.');\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(first_x_px, slide_y + (3 * direction));\n      ctx.lineTo(last_x_px, slide_y - (3 * direction));\n      ctx.closePath();\n      ctx.stroke();\n    }\n\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Flow } from './tables';\n\nexport class GraceNote extends StaveNote {\n  static get CATEGORY() { return 'gracenotes'; }\n  static get LEDGER_LINE_OFFSET() { return 2; }\n  static get SCALE() { return 0.66; }\n\n  constructor(note_struct) {\n    super(Object.assign(note_struct, {\n      glyph_font_scale: Flow.DEFAULT_NOTATION_FONT_SCALE * GraceNote.SCALE,\n      stroke_px: GraceNote.LEDGER_LINE_OFFSET,\n    }));\n    this.setAttribute('type', 'GraceNote');\n\n    this.slash = note_struct.slash;\n    this.slur = true;\n\n    this.buildNoteHeads();\n\n    this.width = 3;\n  }\n\n  getStemExtension() {\n    if (this.stem_extension_override != null) {\n      return this.stem_extension_override;\n    }\n\n    const glyph = this.getGlyph();\n    if (glyph) {\n      let ret = super.getStemExtension();\n      if (glyph.stem) {\n        const staveNoteScale = this.getStaveNoteScale();\n        ret = ((Stem.HEIGHT + ret) * staveNoteScale) - Stem.HEIGHT;\n      }\n      return ret;\n    }\n\n    return 0;\n  }\n\n  getCategory() { return GraceNote.CATEGORY; }\n\n  // FIXME: move this to more basic class.\n  getStaveNoteScale() {\n    return this.render_options.glyph_font_scale / Flow.DEFAULT_NOTATION_FONT_SCALE;\n  }\n\n  draw() {\n    this.context.openGroup('grace-note');\n    super.draw();\n    this.context.closeGroup();\n    this.setRendered();\n    const stem = this.stem;\n    if (this.slash && stem) {\n      const staveNoteScale = this.getStaveNoteScale();\n\n      // some magic numbers are based on the staveNoteScale 0.66.\n      const offsetScale = staveNoteScale / 0.66;\n      let slashBBox = undefined;\n      const beam = this.beam;\n      if (beam) {\n        // FIXME: should render slash after beam?\n        if (!beam.postFormatted) {\n          beam.postFormat();\n        }\n\n        slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale,\n          8 * offsetScale,\n          {\n            stem: 6 * offsetScale,\n            beam: 5 * offsetScale,\n          });\n      } else {\n        const stem_direction = this.getStemDirection();\n        const noteHeadBounds = this.getNoteHeadBounds();\n        const noteStemHeight = stem.getHeight();\n        let x = this.getAbsoluteX();\n        let y = stem_direction === Flow.Stem.DOWN ?\n          noteHeadBounds.y_top - noteStemHeight :\n          noteHeadBounds.y_bottom - noteStemHeight;\n\n        const defaultStemExtention = stem_direction === Flow.Stem.DOWN ?\n          this.glyph.stem_down_extension :\n          this.glyph.stem_up_extension;\n\n        let defaultOffsetY = Flow.STEM_HEIGHT;\n        defaultOffsetY -= (defaultOffsetY / 2.8);\n        defaultOffsetY += defaultStemExtention;\n        y += ((defaultOffsetY * staveNoteScale) * stem_direction);\n\n        const offsets = stem_direction === Flow.Stem.UP ? {\n          x1: 1,\n          y1: 0,\n          x2: 13,\n          y2: -9,\n        } : {\n          x1: -4,\n          y1: 1,\n          x2: 13,\n          y2: 9,\n        };\n\n        x += (offsets.x1 * offsetScale);\n        y += (offsets.y1 * offsetScale);\n        slashBBox = {\n          x1: x,\n          y1: y,\n          x2: x + (offsets.x2 * offsetScale),\n          y2: y + (offsets.y2 * offsetScale),\n        };\n      }\n\n      // FIXME: avoide staff lines, leadger lines or others.\n\n      const ctx = this.context;\n      ctx.save();\n      ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n      ctx.beginPath();\n      ctx.moveTo(slashBBox.x1, slashBBox.y1);\n      ctx.lineTo(slashBBox.x2, slashBBox.y2);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n    const beam = this.beam;\n    const beam_slope = beam.slope;\n    const isBeamEndNote = (beam.notes[beam.notes.length - 1] === this);\n    const scaleX = isBeamEndNote ? -1 : 1;\n    const beam_angle = Math.atan(beam_slope * scaleX);\n\n    // slash line intersecting point on beam.\n    const iPointOnBeam = {\n      dx: Math.cos(beam_angle) * slashBeamOffset,\n      dy: Math.sin(beam_angle) * slashBeamOffset,\n    };\n\n    slashStemOffset *= this.getStemDirection();\n    const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n    const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n    const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n    const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n    const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n\n    const stemX = this.getStemX();\n    const stem0X = beam.notes[0].getStemX();\n    const stemY = this.beam.getBeamYToDraw() + ((stemX - stem0X) * beam_slope);\n\n    const ret = {\n      x1: stemX - protrusion_stem_dx,\n      y1: (stemY + slashStemOffset - protrusion_stem_dy),\n      x2: stemX + (iPointOnBeam.dx * scaleX) + protrusion_beam_dx,\n      y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n    };\n    return ret;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { TabNote } from './tabnote';\n\nexport class GraceTabNote extends TabNote {\n  static get CATEGORY() { return 'gracetabnotes'; }\n\n  constructor(note_struct) {\n    super(note_struct, false);\n    this.setAttribute('type', 'GraceTabNote');\n\n    Vex.Merge(this.render_options, {\n      // vertical shift from stave line\n      y_shift: 0.3,\n      // grace glyph scale\n      scale: 0.6,\n      // grace tablature font\n      font: '7.5pt Arial',\n    });\n\n    this.updateWidth();\n  }\n\n  getCategory() { return GraceTabNote.CATEGORY; }\n\n  draw() {\n    super.draw();\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of tunings for tablature.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\n\nexport class Tuning {\n  static get names() {\n    return {\n      'standard': 'E/5,B/4,G/4,D/4,A/3,E/3',\n      'dagdad': 'D/5,A/4,G/4,D/4,A/3,D/3',\n      'dropd': 'E/5,B/4,G/4,D/4,A/3,D/3',\n      'eb': 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n      'standardBanjo': 'D/5,B/4,G/4,D/4,G/5',\n    };\n  }\n\n  constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n    // Default to standard tuning.\n    this.setTuning(tuningString);\n  }\n\n  noteToInteger(noteString) {\n    return Flow.keyProperties(noteString).int_value;\n  }\n\n  setTuning(noteString) {\n    if (Tuning.names[noteString]) {\n      noteString = Tuning.names[noteString];\n    }\n\n    this.tuningString = noteString;\n    this.tuningValues = [];\n    this.numStrings = 0;\n\n    const keys = noteString.split(/\\s*,\\s*/);\n    if (keys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'Invalid tuning string: ' + noteString);\n    }\n\n    this.numStrings = keys.length;\n    for (let i = 0; i < this.numStrings; ++i) {\n      this.tuningValues[i] = this.noteToInteger(keys[i]);\n    }\n  }\n\n  getValueForString(stringNum) {\n    const s = parseInt(stringNum, 10);\n    if (s < 1 || s > this.numStrings) {\n      throw new Vex.RERR(\n        'BadArguments', `String number must be between 1 and ${this.numStrings}:${stringNum}`\n      );\n    }\n\n    return this.tuningValues[s - 1];\n  }\n\n  getValueForFret(fretNum, stringNum) {\n    const stringValue = this.getValueForString(stringNum);\n    const f = parseInt(fretNum, 10);\n\n    if (f < 0) {\n      throw new Vex.RERR('BadArguments', 'Fret number must be 0 or higher: ' +\n          fretNum);\n    }\n\n    return stringValue + f;\n  }\n\n  getNoteForFret(fretNum, stringNum) {\n    const noteValue = this.getValueForFret(fretNum, stringNum);\n\n    const octave = Math.floor(noteValue / 12);\n    const value = noteValue % 12;\n\n    return Flow.integerToNote(value) + '/' + octave;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\n\nimport { Vex } from './vex';\nimport { Music } from './music';\n\nexport class KeyManager {\n  constructor(key) {\n    this.music = new Music();\n    this.setKey(key);\n  }\n\n  setKey(key) {\n    this.key = key;\n    this.reset();\n    return this;\n  }\n\n  getKey() { return this.key; }\n\n  reset() {\n    this.keyParts = this.music.getKeyParts(this.key);\n\n    this.keyString = this.keyParts.root;\n    if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n    const is_supported_type = Music.scaleTypes[this.keyParts.type];\n    if (!is_supported_type) {\n      throw new Vex.RERR('BadArguments', `Unsupported key type: ${this.key}`);\n    }\n\n    this.scale = this.music.getScaleTones(\n      this.music.getNoteValue(this.keyString),\n      Music.scaleTypes[this.keyParts.type]\n    );\n\n    this.scaleMap = {};\n    this.scaleMapByValue = {};\n    this.originalScaleMapByValue = {};\n\n    const noteLocation = Music.root_indices[this.keyParts.root];\n\n    for (let i = 0; i < Music.roots.length; ++i) {\n      const index = (noteLocation + i) % Music.roots.length;\n      const rootName = Music.roots[index];\n\n      const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n      this.scaleMap[rootName] = noteName;\n      this.scaleMapByValue[this.scale[i]] = noteName;\n      this.originalScaleMapByValue[this.scale[i]] = noteName;\n    }\n\n    return this;\n  }\n\n  getAccidental(key) {\n    const root = this.music.getKeyParts(key).root;\n    const parts = this.music.getNoteParts(this.scaleMap[root]);\n\n    return {\n      note: this.scaleMap[root],\n      accidental: parts.accidental,\n    };\n  }\n\n  selectNote(note) {\n    note = note.toLowerCase();\n    const parts = this.music.getNoteParts(note);\n\n    // First look for matching note in our altered scale\n    const scaleNote = this.scaleMap[parts.root];\n    const modparts = this.music.getNoteParts(scaleNote);\n\n    if (scaleNote === note) {\n      return {\n        'note': scaleNote,\n        'accidental': parts.accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in our altered scale\n    const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n    if (valueNote != null) {\n      return {\n        'note': valueNote,\n        'accidental': this.music.getNoteParts(valueNote).accidental,\n        'change': false,\n      };\n    }\n\n    // Then search for a note of equivalent value in the original scale\n    const originalValueNote = this.originalScaleMapByValue[\n      this.music.getNoteValue(note)];\n    if (originalValueNote != null) {\n      this.scaleMap[modparts.root] = originalValueNote;\n      delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n      return {\n        'note': originalValueNote,\n        'accidental': this.music.getNoteParts(originalValueNote).accidental,\n        'change': true,\n      };\n    }\n\n    // Then try to unmodify a currently modified note.\n    if (modparts.root === note) {\n      delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(modparts.root)] =  modparts.root;\n      this.scaleMap[modparts.root] = modparts.root;\n      return {\n        'note': modparts.root,\n        'accidental': null,\n        'change': true,\n      };\n    }\n\n    // Last resort -- shitshoot\n    delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n    this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n    delete this.scaleMap[modparts.root];\n    this.scaleMap[modparts.root] = note;\n\n    return {\n      note,\n      'accidental': parts.accidental,\n      'change': true,\n    };\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\n\nexport class StaveHairpin extends Element {\n  static get type() {\n    return {\n      CRESC: 1,\n      DECRESC: 2,\n    };\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'A valid Formatter must be provide to draw offsets by ticks.'\n      );\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px };\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes, type) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position) {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options) {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params) {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class Curve extends Element {\n  static get Position() {\n    return {\n      NEAR_HEAD: 1,\n      NEAR_TOP: 2,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      nearHead: Curve.Position.NEAR_HEAD,\n      nearTop: Curve.Position.NEAR_TOP,\n    };\n  }\n\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  constructor(from, to, options) {\n    super();\n    this.setAttribute('type', 'Curve');\n\n    this.render_options = {\n      spacing: 2,\n      thickness: 2,\n      x_shift: 0,\n      y_shift: 10,\n      position: Curve.Position.NEAR_HEAD,\n      position_end: Curve.Position.NEAR_HEAD,\n      invert: false,\n      cps: [{ x: 0, y: 10 }, { x: 0, y: 10 }],\n    };\n\n    Vex.Merge(this.render_options, options);\n    this.setNotes(from, to);\n  }\n\n  setNotes(from, to) {\n    if (!from && !to) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Curve needs to have either first_note or last_note set.'\n      );\n    }\n\n    this.from = from;\n    this.to = to;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.from || !this.to);\n  }\n\n  renderCurve(params) {\n    const ctx = this.context;\n    const cps = this.render_options.cps;\n\n    const x_shift = this.render_options.x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    const first_x = params.first_x + x_shift;\n    const first_y = params.first_y + y_shift;\n    const last_x = params.last_x - x_shift;\n    const last_y = params.last_y + y_shift;\n    const thickness = this.render_options.thickness;\n\n    const cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n    ctx.beginPath();\n    ctx.moveTo(first_x, first_y);\n    ctx.bezierCurveTo(\n      first_x + cp_spacing + cps[0].x,\n      first_y + (cps[0].y * params.direction),\n      last_x - cp_spacing + cps[1].x,\n      last_y + (cps[1].y * params.direction),\n      last_x,\n      last_y\n    );\n    ctx.bezierCurveTo(\n      last_x - cp_spacing + cps[1].x,\n      last_y + ((cps[1].y + thickness) * params.direction),\n      first_x + cp_spacing + cps[0].x,\n      first_y + ((cps[0].y + thickness) * params.direction),\n      first_x,\n      first_y\n    );\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.from;\n    const last_note = this.to;\n    let first_x;\n    let last_x;\n    let first_y;\n    let last_y;\n    let stem_direction;\n\n    let metric = 'baseY';\n    let end_metric = 'baseY';\n\n    function getPosition(position) {\n      return typeof(position) === 'string'\n        ? Curve.PositionString[position]\n        : position;\n    }\n    const position = getPosition(this.render_options.position);\n    const position_end = getPosition(this.render_options.position_end);\n\n    if (position === Curve.Position.NEAR_TOP) {\n      metric = 'topY';\n      end_metric = 'topY';\n    }\n\n    if (position_end === Curve.Position.NEAR_HEAD) {\n      end_metric = 'baseY';\n    } else if (position_end === Curve.Position.NEAR_TOP) {\n      end_metric = 'topY';\n    }\n\n    if (first_note) {\n      first_x = first_note.getTieRightX();\n      stem_direction = first_note.getStemDirection();\n      first_y = first_note.getStemExtents()[metric];\n    } else {\n      first_x = last_note.getStave().getTieStartX();\n      first_y = last_note.getStemExtents()[metric];\n    }\n\n    if (last_note) {\n      last_x = last_note.getTieLeftX();\n      stem_direction = last_note.getStemDirection();\n      last_y = last_note.getStemExtents()[end_metric];\n    } else {\n      last_x = first_note.getStave().getTieEndX();\n      last_y = first_note.getStemExtents()[end_metric];\n    }\n\n    this.renderCurve({\n      first_x,\n      last_x,\n      first_y,\n      last_y,\n      direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n    });\n    return true;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\nfunction L(...args) { if (TextDynamics.DEBUG) Vex.L('Vex.Flow.TextDynamics', args); }\n\nexport class TextDynamics extends Note {\n  // The glyph data for each dynamics letter\n  static get GLYPHS() {\n    return {\n      'f': {\n        code: 'vba',\n        width: 12,\n      },\n      'p': {\n        code: 'vbf',\n        width: 14,\n      },\n      'm': {\n        code: 'v62',\n        width: 17,\n      },\n      's': {\n        code: 'v4a',\n        width: 10,\n      },\n      'z': {\n        code: 'v80',\n        width: 12,\n      },\n      'r': {\n        code: 'vb1',\n        width: 12,\n      },\n    };\n  }\n\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  // Create the dynamics marking. `text_struct` is an object\n  // that contains a `duration` property and a `sequence` of\n  // letters that represents the letters to render\n  constructor(text_struct) {\n    super(text_struct);\n    this.setAttribute('type', 'TextDynamics');\n\n    this.sequence = text_struct.text.toLowerCase();\n    this.line = text_struct.line || 0;\n    this.glyphs = [];\n\n    Vex.Merge(this.render_options, {\n      glyph_font_size: 40,\n    });\n\n    L('New Dynamics Text: ', this.sequence);\n  }\n\n  // Set the Stave line on which the note should be placed\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  // Preformat the dynamics text\n  preFormat() {\n    let total_width = 0;\n    // Iterate through each letter\n    this.sequence.split('').forEach(letter => {\n      // Get the glyph data for the letter\n      const glyph_data = TextDynamics.GLYPHS[letter];\n      if (!glyph_data) throw new Vex.RERR('Invalid dynamics character: ' + letter);\n\n      const size =  this.render_options.glyph_font_size;\n      const glyph = new Glyph(glyph_data.code, size);\n\n      // Add the glyph\n      this.glyphs.push(glyph);\n\n      total_width += glyph_data.width;\n    });\n\n    // Store the width of the text\n    this.setWidth(total_width);\n    this.preFormatted = true;\n    return this;\n  }\n\n  // Draw the dynamics text on the rendering context\n  draw() {\n    this.setRendered();\n    const x = this.getAbsoluteX();\n    const y = this.stave.getYForLine(this.line + (-3));\n\n    L('Rendering Dynamics: ', this.sequence);\n\n    let letter_x = x;\n    this.glyphs.forEach((glyph, index) => {\n      const current_letter = this.sequence[index];\n      glyph.render(this.context, letter_x, y);\n      letter_x += TextDynamics.GLYPHS[current_letter].width;\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Flow } from './tables';\n\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n  // all cases do this.\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x0, y0);\n  ctx.closePath();\n\n  ctx.fill();\n}\n\n// Helper function to draw a line with arrow heads\nfunction drawArrowLine(ctx, point1, point2, config) {\n  const both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n  const x1 = point1.x;\n  const y1 = point1.y;\n  const x2 = point2.x;\n  const y2 = point2.y;\n\n  // For ends with arrow we actually want to stop before we get to the arrow\n  // so that wide lines won't put a flat end on the arrow.\n  const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  const ratio = (distance - config.arrowhead_length / 3) / distance;\n  let end_x;\n  let end_y;\n  let start_x;\n  let start_y;\n  if (config.draw_end_arrow || both_arrows) {\n    end_x = Math.round(x1 + (x2 - x1) * ratio);\n    end_y = Math.round(y1 + (y2 - y1) * ratio);\n  } else {\n    end_x = x2;\n    end_y = y2;\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    start_x = x1 + (x2 - x1) * (1 - ratio);\n    start_y = y1 + (y2 - y1) * (1 - ratio);\n  } else {\n    start_x = x1;\n    start_y = y1;\n  }\n\n  if (config.color) {\n    ctx.setStrokeStyle(config.color);\n    ctx.setFillStyle(config.color);\n  }\n\n  // Draw the shaft of the arrow\n  ctx.beginPath();\n  ctx.moveTo(start_x, start_y);\n  ctx.lineTo(end_x, end_y);\n  ctx.stroke();\n  ctx.closePath();\n\n  // calculate the angle of the line\n  const line_angle = Math.atan2(y2 - y1, x2 - x1);\n  // h is the line length of a side of the arrow head\n  const h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n  let angle1;\n  let angle2;\n  let top_x;\n  let top_y;\n  let bottom_x;\n  let bottom_y;\n\n  if (config.draw_end_arrow || both_arrows) {\n    angle1 = line_angle + Math.PI + config.arrowhead_angle;\n    top_x = x2 + Math.cos(angle1) * h;\n    top_y = y2 + Math.sin(angle1) * h;\n\n    angle2 = line_angle + Math.PI - config.arrowhead_angle;\n    bottom_x = x2 + Math.cos(angle2) * h;\n    bottom_y = y2 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n  }\n\n  if (config.draw_start_arrow || both_arrows) {\n    angle1 = line_angle + config.arrowhead_angle;\n    top_x = x1 + Math.cos(angle1) * h;\n    top_y = y1 + Math.sin(angle1) * h;\n\n    angle2 = line_angle - config.arrowhead_angle;\n    bottom_x = x1 + Math.cos(angle2) * h;\n    bottom_y = y1 + Math.sin(angle2) * h;\n\n    drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n  }\n}\n\nexport class StaveLine extends Element {\n  // Text Positioning\n  static get TextVerticalPosition() {\n    return {\n      TOP: 1,\n      BOTTOM: 2,\n    };\n  }\n\n  static get TextJustification() {\n    return {\n      LEFT: 1,\n      CENTER: 2,\n      RIGHT: 3,\n    };\n  }\n\n  // Initialize the StaveLine with the given `notes`.\n  //\n  // `notes` is a struct that has:\n  //\n  //  ```\n  //  {\n  //    first_note: Note,\n  //    last_note: Note,\n  //    first_indices: [n1, n2, n3],\n  //    last_indices: [n1, n2, n3]\n  //  }\n  //  ```\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'StaveLine');\n\n    this.notes = notes;\n\n    this.text = '';\n\n    this.font = {\n      family: 'Arial',\n      size: 10,\n      weight: '',\n    };\n\n    this.render_options = {\n      // Space to add to the left or the right\n      padding_left: 4,\n      padding_right: 3,\n\n      // The width of the line in pixels\n      line_width: 1,\n      // An array of line/space lengths. Unsupported with Raphael (SVG)\n      line_dash: null,\n      // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n      rounded_end: true,\n      // The color of the line and arrowheads\n      color: null,\n\n      // Flags to draw arrows on each end of the line\n      draw_start_arrow: false,\n      draw_end_arrow: false,\n\n      // The length of the arrowhead sides\n      arrowhead_length: 10,\n      // The angle of the arrowhead\n      arrowhead_angle: Math.PI / 8,\n\n      // The position of the text\n      text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n      text_justification: StaveLine.TextJustification.CENTER,\n    };\n\n    this.setNotes(notes);\n  }\n\n  // Set the font for the `StaveLine` text\n  setFont(font) { this.font = font; return this; }\n  // The the annotation for the `StaveLine`\n  setText(text) { this.text = text; return this; }\n\n  // Set the notes for the `StaveLine`\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Notes needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Connected notes must have similar index sizes'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  // Apply the style of the `StaveLine` to the context\n  applyLineStyle() {\n    const ctx = this.checkContext();\n    const render_options = this.render_options;\n\n    if (render_options.line_dash) {\n      ctx.setLineDash(render_options.line_dash);\n    }\n\n    if (render_options.line_width) {\n      ctx.setLineWidth(render_options.line_width);\n    }\n\n    if (render_options.rounded_end) {\n      ctx.setLineCap('round');\n    } else {\n      ctx.setLineCap('square');\n    }\n  }\n\n  // Apply the text styling to the context\n  applyFontStyle() {\n    const ctx = this.checkContext();\n\n    if (this.font) {\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    }\n\n    if (this.render_options.color) {\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n    }\n  }\n\n  // Renders the `StaveLine` on the context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n    const render_options = this.render_options;\n\n    ctx.save();\n    this.applyLineStyle();\n\n    // Cycle through each set of indices and draw lines\n    let start_position;\n    let end_position;\n    this.first_indices.forEach((first_index, i) => {\n      const last_index = this.last_indices[i];\n\n      // Get initial coordinates for the start/end of the line\n      start_position = first_note.getModifierStartXY(2, first_index);\n      end_position = last_note.getModifierStartXY(1, last_index);\n      const upwards_slope = start_position.y > end_position.y;\n\n      // Adjust `x` coordinates for modifiers\n      start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n      end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n\n\n      // Adjust first `x` coordinates for displacements\n      const notehead_width = first_note.getGlyph().getWidth();\n      const first_displaced = first_note.getKeyProps()[first_index].displaced;\n      if (first_displaced && first_note.getStemDirection() === 1) {\n        start_position.x += notehead_width + render_options.padding_left;\n      }\n\n      // Adjust last `x` coordinates for displacements\n      const last_displaced = last_note.getKeyProps()[last_index].displaced;\n      if (last_displaced && last_note.getStemDirection() === -1) {\n        end_position.x -= notehead_width + render_options.padding_right;\n      }\n\n      // Adjust y position better if it's not coming from the center of the note\n      start_position.y += upwards_slope ? -3 : 1;\n      end_position.y += upwards_slope ? 2 : 0;\n\n      drawArrowLine(ctx, start_position, end_position, this.render_options);\n    });\n\n    ctx.restore();\n\n    // Determine the x coordinate where to start the text\n    const text_width = ctx.measureText(this.text).width;\n    const justification = render_options.text_justification;\n    let x = 0;\n    if (justification === StaveLine.TextJustification.LEFT) {\n      x = start_position.x;\n    } else if (justification === StaveLine.TextJustification.CENTER) {\n      const delta_x = (end_position.x - start_position.x);\n      const center_x = (delta_x / 2) + start_position.x;\n      x = center_x - (text_width / 2);\n    } else if (justification === StaveLine.TextJustification.RIGHT) {\n      x = end_position.x  -  text_width;\n    }\n\n    // Determine the y value to start the text\n    let y;\n    const vertical_position = render_options.text_position_vertical;\n    if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n      y = first_note.getStave().getYForTopText();\n    } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n      y = first_note.getStave().getYForBottomText(Flow.TEXT_HEIGHT_OFFSET_HACK);\n    }\n\n    // Draw the text\n    ctx.save();\n    this.applyFontStyle();\n    ctx.fillText(this.text, x, y);\n    ctx.restore();\n\n    return this;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Glyph } from './glyph';\n\n// To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\nfunction L(...args) { if (PedalMarking.DEBUG) Vex.L('Vex.Flow.PedalMarking', args); }\n\n// Draws a pedal glyph with the provided `name` on a rendering `context`\n// at the coordinates `x` and `y. Takes into account the glyph data\n// coordinate shifts.\nfunction drawPedalGlyph(name, context, x, y, point) {\n  const glyph_data = PedalMarking.GLYPHS[name];\n  const glyph = new Glyph(glyph_data.code, point);\n  glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n\nexport class PedalMarking extends Element {\n  // Glyph data\n  static get GLYPHS() {\n    return {\n      'pedal_depress': {\n        code: 'v36',\n        x_shift: -10,\n        y_shift: 0,\n      },\n      'pedal_release': {\n        code: 'v5d',\n        x_shift: -2,\n        y_shift: 3,\n      },\n    };\n  }\n\n  static get Styles() {\n    return {\n      TEXT: 1,\n      BRACKET: 2,\n      MIXED: 3,\n    };\n  }\n\n  static get StylesString() {\n    return {\n      text: PedalMarking.Styles.TEXT,\n      bracket: PedalMarking.Styles.BRACKET,\n      mixed: PedalMarking.Styles.MIXED,\n    };\n  }\n\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  static createSustain(notes) {\n    const pedal = new PedalMarking(notes);\n    return pedal;\n  }\n\n  // Create a sostenuto pedal marking\n  static createSostenuto(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText('Sost. Ped.');\n    return pedal;\n  }\n\n  // Create an una corda pedal marking\n  static createUnaCorda(notes) {\n    const pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText('una corda', 'tre corda');\n    return pedal;\n  }\n\n  // ## Prototype Methods\n  constructor(notes) {\n    super();\n    this.setAttribute('type', 'PedalMarking');\n\n    this.notes = notes;\n    this.style = PedalMarking.TEXT;\n    this.line = 0;\n\n    // Custom text for the release/depress markings\n    this.custom_depress_text = '';\n    this.custom_release_text = '';\n\n    this.font = {\n      family: 'Times New Roman',\n      size: 12,\n      weight: 'italic bold',\n    };\n\n    this.render_options = {\n      bracket_height: 10,\n      text_margin_right: 6,\n      bracket_line_width: 1,\n      glyph_point_size: 40,\n      color: 'black',\n    };\n  }\n\n  // Set custom text for the `depress`/`release` pedal markings. No text is\n  // set if the parameter is falsy.\n  setCustomText(depress, release) {\n    this.custom_depress_text = depress || '';\n    this.custom_release_text = release || '';\n    return this;\n  }\n\n  // Set the pedal marking style\n  setStyle(style) {\n    if (style < 1 && style > 3)  {\n      throw new Vex.RERR('InvalidParameter', 'The style must be one found in PedalMarking.Styles');\n    }\n\n    this.style = style;\n    return this;\n  }\n\n  // Set the staff line to render the markings on\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the bracket based pedal markings\n  drawBracketed() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    let prev_x;\n    let prev_y;\n    const pedal = this;\n\n    // Iterate through each note\n    this.notes.forEach((note, index, notes) => {\n      // Each note triggers the opposite pedal action\n      is_pedal_depressed = !is_pedal_depressed;\n\n      // Get the initial coordinates for the note\n      const x = note.getAbsoluteX();\n      const y = note.getStave().getYForBottomText(pedal.line + 3);\n\n      // Throw if current note is positioned before the previous note\n      if (x < prev_x) {\n        throw new Vex.RERR(\n          'InvalidConfiguration', 'The notes provided must be in order of ascending x positions'\n        );\n      }\n\n      // Determine if the previous or next note are the same\n      // as the current note. We need to keep track of this for\n      // when adjustments are made for the release+depress action\n      const next_is_same = notes[index + 1] === note;\n      const prev_is_same = notes[index - 1] === note;\n\n      let x_shift = 0;\n      if (is_pedal_depressed) {\n        // Adjustment for release+depress\n        x_shift =  prev_is_same ? 5 : 0;\n\n        if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n          // For MIXED style, start with text instead of bracket\n          if (pedal.custom_depress_text) {\n            // If we have custom text, use instead of the default \"Ped\" glyph\n            const text_width = ctx.measureText(pedal.custom_depress_text).width;\n            ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n            x_shift = (text_width / 2) + pedal.render_options.text_margin_right;\n          } else {\n            // Render the Ped glyph in position\n            drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n            x_shift = 20 + pedal.render_options.text_margin_right;\n          }\n        } else {\n          // Draw start bracket\n          ctx.beginPath();\n          ctx.moveTo(x, y - pedal.render_options.bracket_height);\n          ctx.lineTo(x + x_shift, y);\n          ctx.stroke();\n          ctx.closePath();\n        }\n      } else {\n        // Adjustment for release+depress\n        x_shift = next_is_same ? -5 : 0;\n\n        // Draw end bracket\n        ctx.beginPath();\n        ctx.moveTo(prev_x, prev_y);\n        ctx.lineTo(x + x_shift, y);\n        ctx.lineTo(x, y - pedal.render_options.bracket_height);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      // Store previous coordinates\n      prev_x = x + x_shift;\n      prev_y = y;\n    });\n  }\n\n  // Draw the text based pedal markings. This defaults to the traditional\n  // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n  drawText() {\n    const ctx = this.context;\n    let is_pedal_depressed = false;\n    const pedal = this;\n\n    // The glyph point size\n    const point = pedal.render_options.glyph_point_size;\n\n    // Iterate through each note, placing glyphs or custom text accordingly\n    this.notes.forEach(note => {\n      is_pedal_depressed = !is_pedal_depressed;\n      const stave = note.getStave();\n      const x = note.getAbsoluteX();\n      const y = stave.getYForBottomText(pedal.line + 3);\n\n      let text_width = 0;\n      if (is_pedal_depressed) {\n        if (pedal.custom_depress_text) {\n          text_width = ctx.measureText(pedal.custom_depress_text).width;\n          ctx.fillText(pedal.custom_depress_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_depress', ctx, x, y, point);\n        }\n      } else {\n        if (pedal.custom_release_text) {\n          text_width = ctx.measureText(pedal.custom_release_text).width;\n          ctx.fillText(pedal.custom_release_text, x - (text_width / 2), y);\n        } else {\n          drawPedalGlyph('pedal_release', ctx, x, y, point);\n        }\n      }\n    });\n  }\n\n  // Render the pedal marking in position on the rendering context\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.setStrokeStyle(this.render_options.color);\n    ctx.setFillStyle(this.render_options.color);\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n    L('Rendering Pedal Marking');\n\n    if (this.style === PedalMarking.Styles.BRACKET || this.style === PedalMarking.Styles.MIXED) {\n      ctx.setLineWidth(this.render_options.bracket_line_width);\n      this.drawBracketed();\n    } else if (this.style === PedalMarking.Styles.TEXT) {\n      this.drawText();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Renderer } from './renderer';\n\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\nfunction L(...args) { if (TextBracket.DEBUG) Vex.L('Vex.Flow.TextBracket', args); }\n\nexport class TextBracket extends Element {\n  // FIXME: Modifier.Position is singular while this is plural, make consistent\n  static get Positions() {\n    return {\n      TOP: 1,\n      BOTTOM: -1,\n    };\n  }\n\n  static get PositionString() {\n    return {\n      top: TextBracket.Positions.TOP,\n      bottom: TextBracket.Positions.BOTTOM,\n    };\n  }\n\n  constructor({\n    start,\n    stop,\n    text = '',\n    superscript = '',\n    position = TextBracket.Positions.TOP,\n  }) {\n    super();\n    this.setAttribute('type', 'TextBracket');\n\n    this.start = start;\n    this.stop = stop;\n\n    this.text = text;\n    this.superscript = superscript;\n\n    this.position = typeof position === 'string'\n      ? TextBracket.PositionString[position]\n      : position;\n\n    this.line = 1;\n\n    this.font = {\n      family: 'Serif',\n      size: 15,\n      weight: 'italic',\n    };\n\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n\n      // In the BOTTOM position, the bracket line can extend\n      // under the superscript.\n      underline_superscript: true,\n    };\n  }\n\n  // Apply the text backet styling to the provided `context`\n  applyStyle(context) {\n    // Apply style for the octave bracket\n    context.setFont(this.font.family, this.font.size, this.font.weight);\n    context.setStrokeStyle(this.render_options.color);\n    context.setFillStyle(this.render_options.color);\n    context.setLineWidth(this.render_options.line_width);\n\n    return this;\n  }\n\n  // Set whether the bracket line should be `dashed`. You can also\n  // optionally set the `dash` pattern by passing in an array of numbers\n  setDashed(dashed, dash) {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n\n  // Set the font for the text\n  setFont(font) {\n    // We use Object.assign to support partial updates to the font object\n    this.font = Object.assign({}, this.font, font);\n    return this;\n  }\n  // Set the rendering `context` for the octave bracket\n  setLine(line) { this.line = line; return this; }\n\n  // Draw the octave bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    let y = 0;\n    switch (this.position) {\n      case TextBracket.Positions.TOP:\n        y =  this.start.getStave().getYForTopText(this.line);\n        break;\n      case TextBracket.Positions.BOTTOM:\n        y =  this.start.getStave().getYForBottomText(this.line + Flow.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', `The position ${this.position} is invalid`);\n    }\n\n    // Get the preliminary start and stop coordintates for the bracket\n    const start = { x: this.start.getAbsoluteX(), y };\n    const stop = { x: this.stop.getAbsoluteX(), y };\n\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n\n    const bracket_height = this.render_options.bracket_height * this.position;\n\n    ctx.save();\n    this.applyStyle(ctx);\n\n    // Draw text\n    ctx.fillText(this.text, start.x, start.y);\n\n    // Get the width and height for the octave number\n    const main_width = ctx.measureText(this.text).width;\n    const main_height = ctx.measureText('M').width;\n\n    // Calculate the y position for the super script\n    const super_y = start.y - (main_height / 2.5);\n\n    // Draw the superscript\n    ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n    // Determine width and height of the superscript\n    const superscript_width = ctx.measureText(this.superscript).width;\n    const super_height = ctx.measureText('M').width;\n\n    // Setup initial coordinates for the bracket line\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyph().getWidth();\n\n    // Adjust x and y coordinates based on position\n    if (this.position === TextBracket.Positions.TOP) {\n      start_x += main_width + superscript_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracket.Positions.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n\n      if (!this.render_options.underline_superscript) {\n        start_x += superscript_width;\n      }\n    }\n\n    if (this.render_options.dashed) {\n      // Main line\n      Renderer.drawDashedLine(\n        ctx,\n        start_x,\n        line_y,\n        end_x,\n        line_y,\n        this.render_options.dash\n      );\n      // Ending Bracket\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(\n          ctx,\n          end_x,\n          line_y + (1 * this.position),\n          end_x,\n          line_y + bracket_height,\n          this.render_options.dash\n        );\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      // Main line\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        // Ending bracket\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    ctx.restore();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { Barline } from './stavebarline';\n\n// To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\nfunction L(...args) { if (BarNote.DEBUG) Vex.L('Vex.Flow.BarNote', args); }\n\nexport class BarNote extends Note {\n  constructor(type = Barline.type.SINGLE) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'BarNote');\n\n    this.metrics = {\n      widths: {},\n    };\n\n    const TYPE = Barline.type;\n    this.metrics.widths = {\n      [TYPE.SINGLE]: 8,\n      [TYPE.DOUBLE]: 12,\n      [TYPE.END]: 15,\n      [TYPE.REPEAT_BEGIN]: 14,\n      [TYPE.REPEAT_END]: 14,\n      [TYPE.REPEAT_BOTH]: 18,\n      [TYPE.NONE]: 0,\n    };\n\n    // Tell the formatter that bar notes have no duration.\n    this.ignore_ticks = true;\n    this.setType(type);\n  }\n\n  // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n  getType() { return this.type; }\n  setType(type) {\n    this.type = typeof(type) === 'string'\n      ? Barline.typeString[type]\n      : type;\n\n    // Set width to width of relevant `Barline`.\n    this.setWidth(this.metrics.widths[this.type]);\n    return this;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    /* overridden to ignore */\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  // Render note to stave.\n  draw() {\n    this.checkContext();\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n    L('Rendering bar line at: ', this.getAbsoluteX());\n    const barline = new Barline(this.type);\n    barline.setX(this.getAbsoluteX());\n    barline.draw(this.stave);\n    this.setRendered();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n\nimport { Vex } from './vex';\nimport { StemmableNote } from './stemmablenote';\n\nexport class GhostNote extends StemmableNote {\n  /** @constructor */\n  constructor(parameter) {\n    // Sanity check\n    if (!parameter) {\n      throw new Vex.RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    let note_struct;\n\n    // Preserve backwards-compatibility\n    if (typeof (parameter) === 'string') {\n      note_struct = { duration: parameter };\n    } else if (typeof (parameter) === 'object') {\n      note_struct = parameter;\n    } else {\n      throw new Vex.RuntimeError('BadArguments',\n        'Ghost note must have valid initialization data to identify ' +\n        'duration.');\n    }\n\n    super(note_struct);\n    this.setAttribute('type', 'GhostNote');\n\n    // Note properties\n    this.setWidth(0);\n  }\n\n  isRest() { return true; }\n\n  setStave(stave) {\n    super.setStave(stave);\n  }\n\n  addToModifierContext() { /* intentionally overridden */ return this; }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    if (!this.stave) throw new Vex.RERR('NoStave', \"Can't draw without a stave.\");\n\n    // Draw the modifiers\n    this.setRendered();\n    for (let i = 0; i < this.modifiers.length; ++i) {\n      const modifier = this.modifiers[i];\n      modifier.setContext(this.context);\n      modifier.drawWithStyle();\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\n\nexport class Tremolo extends Modifier {\n  static get CATEGORY() { return 'tremolo'; }\n  static get YOFFSETSTEMUP() { return -9; }\n  static get YOFFSETSTEMDOWN() { return -21; }\n  static get XOFFSETSTEMUP() { return 6; }\n  static get XOFFSETSTEMDOWN() { return -2; }\n  constructor(num) {\n    super();\n    this.setAttribute('type', 'Tremolo');\n\n    this.num = num;\n    this.note = null;\n    this.index = null;\n    this.position = Modifier.Position.CENTER;\n    this.code = 'v74';\n  }\n\n  getCategory() { return Tremolo.CATEGORY; }\n\n  draw() {\n    this.checkContext();\n\n    if (!(this.note && this.index != null)) {\n      throw new Vex.RERR('NoAttachedNote', \"Can't draw Tremolo without a note and index.\");\n    }\n\n    this.setRendered();\n    const stemDirection = this.note.getStemDirection();\n    this.y_spacing = 4 * stemDirection;\n    const start = this.note.getModifierStartXY(this.position, this.index);\n    let x = start.x;\n    let y = this.note.stem.getExtents().topY;\n    const scale = this.note.getCategory() === 'gracenotes' ? GraceNote.SCALE : 1;\n    if (stemDirection < 0) {\n      y += Tremolo.YOFFSETSTEMDOWN * scale;\n    } else {\n      y += Tremolo.YOFFSETSTEMUP * scale;\n    }\n\n    this.font = {\n      family: 'Arial',\n      size: 16 * scale,\n      weight: '',\n    };\n\n    this.render_options = {\n      font_scale: 35 * scale,\n      stroke_px: 3,\n      stroke_spacing: 10 * scale,\n    };\n\n    x += stemDirection < 0 ? Tremolo.XOFFSETSTEMDOWN : Tremolo.XOFFSETSTEMUP;\n    for (let i = 0; i < this.num; ++i) {\n      Glyph.renderGlyph(this.context, x, y, this.render_options.font_scale, this.code);\n      y += this.y_spacing;\n    }\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args) { if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args); }\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height =  params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x,  y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x,  y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x,  y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    });\n  }\n\n  // Set the line to center the element on\n  setLine(line) { this.line = line; return this; }\n\n  // Set the full height at the open end\n  setHeight(height) { this.height = height; return this; }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat() { this.preFormatted = true; return this; }\n\n  // Render the Crescendo object onto the canvas\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x  = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\n\nimport { Vex } from './vex';\n\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\nfunction L(...args) { if (Parser.DEBUG) Vex.L('Vex.Flow.Parser', args); }\n\nexport const X = Vex.MakeException('ParserError');\n\n// Converts parser results into an easy to reference list that can be\n// used in triggers.\nfunction flattenMatches(results) {\n  if (results.matchedString !== undefined) return results.matchedString;\n  if (results.results) return flattenMatches(results.results);\n  if (results.length === 1) return flattenMatches(results[0]);\n  if (results.length === 0) return null;\n  return results.map(flattenMatches);\n}\n\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n  // For an example of a simple grammar, take a look at tests/parser_tests.js or\n  // the EasyScore grammar in easyscore.js.\n  constructor(grammar) {\n    this.grammar = grammar;\n  }\n\n  // Parse `line` using current grammar. Returns {success: true} if the\n  // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n  // where `errorPos` is the location of the error in the string.\n  parse(line) {\n    this.line = line;\n    this.pos = 0;\n    this.errorPos = -1;\n    const results = this.expect(this.grammar.begin());\n    results.errorPos = this.errorPos;\n    return results;\n  }\n\n  matchFail(returnPos) {\n    if (this.errorPos === -1) this.errorPos = this.pos;\n    this.pos = returnPos;\n  }\n\n  matchSuccess() {\n    this.errorPos = -1;\n  }\n\n  // Look for `token` in this.line[this.pos], and return success\n  // if one is found. `token` is specified as a regular expression.\n  matchToken(token, noSpace = false) {\n    const regexp = noSpace\n      ? new RegExp('^((' + token + '))')\n      : new RegExp('^((' + token + ')\\\\s*)');\n    const workingLine = this.line.slice(this.pos);\n    const result = workingLine.match(regexp);\n    if (result !== null) {\n      return {\n        success: true,\n        matchedString: result[2],\n        incrementPos: result[1].length,\n        pos: this.pos,\n      };\n    } else {\n      return {\n        success: false,\n        pos: this.pos,\n      };\n    }\n  }\n\n  // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n  // set, then return success even if the token is not found, but reset\n  // the position before exiting.\n  expectOne(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n\n    let allMatches = true;\n    let oneMatch = false;\n    maybe = (maybe === true) || (rule.maybe === true);\n\n    // Execute all sub rules in sequence.\n    for (let i = 0; i < rule.expect.length; i++) {\n      const next = rule.expect[i];\n      const localPos = this.pos;\n      const result = this.expect(next);\n\n      // If `rule.or` is set, then return success if any one\n      // of the subrules match, else all subrules must match.\n      if (result.success) {\n        results.push(result);\n        oneMatch = true;\n        if (rule.or) break;\n      } else {\n        allMatches = false;\n        if (!rule.or) {\n          this.pos = localPos;\n          break;\n        }\n      }\n    }\n\n    const gotOne = (rule.or && oneMatch) || allMatches;\n    const success = gotOne || (maybe === true);\n    if (maybe && !gotOne) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches: gotOne ? 1 : 0 };\n  }\n\n  // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n  // then a failed match is also a success (but the position is reset).\n  expectOneOrMore(rule, maybe = false) {\n    const results = [];\n    const pos = this.pos;\n    let numMatches = 0;\n    let more = true;\n\n    do {\n      const result = this.expectOne(rule);\n      if (result.success) {\n        numMatches++;\n        results.push(result.results);\n      } else {\n        more = false;\n      }\n    } while (more);\n\n    const success = (numMatches > 0) || (maybe === true);\n    if (maybe && !(numMatches > 0)) this.pos = pos;\n    if (success) this.matchSuccess(); else this.matchFail(pos);\n    return { success, results, numMatches };\n  }\n\n  // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n  expectZeroOrMore(rule) {\n    return this.expectOneOrMore(rule, true);\n  }\n\n  // Execute the rule produced by the provided the `rules` function. This\n  // ofloads to one of the above matchers and consolidates the results. It is also\n  // responsible for executing any code triggered by the rule (in `rule.run`.)\n  expect(rules) {\n    L('Evaluating rules:', rules);\n    let result;\n    if (!rules) {\n      throw new X('Invalid Rule: ' + rules, rules);\n    }\n\n    // Get rule from Grammar class.\n    const rule = rules.bind(this.grammar)();\n\n    if (rule.token) {\n      // Base case: parse the regex and throw an error if the\n      // line doesn't match.\n      result = this.matchToken(rule.token, (rule.noSpace === true));\n      if (result.success) {\n        // Token match! Update position and throw away parsed portion\n        // of string.\n        this.pos += result.incrementPos;\n      }\n    } else if (rule.expect) {\n      if (rule.oneOrMore) {\n        result = this.expectOneOrMore(rule);\n      } else if (rule.zeroOrMore) {\n        result = this.expectZeroOrMore(rule);\n      } else {\n        result = this.expectOne(rule);\n      }\n    } else {\n      throw new X('Bad grammar! No `token` or `expect` property', rule);\n    }\n\n    // If there's a trigger attached to this rule, then pull it.\n    result.matches = [];\n    if (result.results) result.results.forEach(r => result.matches.push(flattenMatches(r)));\n    if (rule.run && result.success) rule.run(result);\n    return result;\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a parser for a simple language to generate\n// VexFlow objects.\n\nimport { Vex } from './vex';\nimport { StaveNote } from './stavenote';\nimport { Parser } from './parser';\nimport { Articulation } from './articulation';\n\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\nfunction L(...args) { if (EasyScore.DEBUG) Vex.L('Vex.Flow.EasyScore', args); }\n\nexport const X = Vex.MakeException('EasyScoreError');\n\nclass Grammar {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  begin() { return this.LINE; }\n\n  LINE() {\n    return {\n      expect: [this.PIECE, this.PIECES, this.EOL],\n    };\n  }\n  PIECE() {\n    return {\n      expect: [this.CHORDORNOTE, this.PARAMS],\n      run: () => this.builder.commitPiece(),\n    };\n  }\n  PIECES() {\n    return {\n      expect: [this.COMMA, this.PIECE],\n      zeroOrMore: true,\n    };\n  }\n  PARAMS() {\n    return {\n      expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n    };\n  }\n  CHORDORNOTE() {\n    return {\n      expect: [this.CHORD, this.SINGLENOTE],\n      or: true,\n    };\n  }\n  CHORD() {\n    return {\n      expect: [this.LPAREN, this.NOTES, this.RPAREN],\n      run: (state) => this.builder.addChord(state.matches[1]),\n    };\n  }\n  NOTES() {\n    return {\n      expect: [this.NOTE],\n      oneOrMore: true,\n    };\n  }\n  NOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n    };\n  }\n  SINGLENOTE() {\n    return {\n      expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n      run: (state) =>\n        this.builder.addSingleNote(state.matches[0], state.matches[1], state.matches[2]),\n    };\n  }\n  ACCIDENTAL() {\n    return {\n      expect: [this.ACCIDENTALS],\n      maybe: true,\n    };\n  }\n  DOTS() {\n    return {\n      expect: [this.DOT],\n      zeroOrMore: true,\n      run: (state) => this.builder.setNoteDots(state.matches[0]),\n    };\n  }\n  TYPE() {\n    return {\n      expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n      maybe: true,\n      run: (state) => this.builder.setNoteType(state.matches[2]),\n    };\n  }\n  DURATION() {\n    return {\n      expect: [this.SLASH, this.DURATIONS],\n      maybe: true,\n      run: (state) => this.builder.setNoteDuration(state.matches[1]),\n    };\n  }\n  OPTS() {\n    return {\n      expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n      maybe: true,\n    };\n  }\n  KEYVALS() {\n    return {\n      expect: [this.COMMA, this.KEYVAL],\n      zeroOrMore: true,\n    };\n  }\n  KEYVAL() {\n    const unquote = (str) => str.slice(1, -1);\n\n    return {\n      expect: [this.KEY, this.EQUALS, this.VAL],\n      run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n    };\n  }\n  VAL()  {\n    return {\n      expect: [this.SVAL, this.DVAL],\n      or: true,\n    };\n  }\n\n  KEY()         { return { token: '[a-zA-Z][a-zA-Z0-9]*' }; }\n  DVAL()        { return { token: '[\"][^\"]*[\"]' }; }\n  SVAL()        { return { token: \"['][^']*[']\" }; }\n  NOTENAME()    { return { token: '[a-gA-G]' }; }\n  OCTAVE()      { return { token: '[0-9]+' }; }\n  ACCIDENTALS() { return { token: 'bbs|bb|bss|bs|b|db|d|##|#|n|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' }; }\n  DURATIONS()   { return { token: '[0-9whq]+' }; }\n  TYPES()       { return { token: '[rRsSxX]' }; }\n  LPAREN()      { return { token: '[(]' }; }\n  RPAREN()      { return { token: '[)]' }; }\n  COMMA()       { return { token: '[,]' }; }\n  DOT()         { return { token: '[.]' }; }\n  SLASH()       { return { token: '[/]' }; }\n  MAYBESLASH()  { return { token: '[/]?' }; }\n  EQUALS()      { return { token: '[=]' }; }\n  LBRACKET()    { return { token: '\\\\[' }; }\n  RBRACKET()    { return { token: '\\\\]' }; }\n  EOL()         { return { token: '$' }; }\n}\n\nclass Builder {\n  constructor(factory) {\n    this.factory = factory;\n    this.commitHooks = [];\n    this.reset();\n  }\n\n  reset(options = {}) {\n    this.options = {\n      stem: 'auto',\n      clef: 'treble',\n    };\n    this.elements = {\n      notes: [],\n      accidentals: [],\n    };\n    this.rollingDuration = '8';\n    this.resetPiece();\n    Object.assign(this.options, options);\n  }\n\n  getFactory() { return this.factory; }\n\n  getElements() { return this.elements; }\n\n  addCommitHook(commitHook) {\n    this.commitHooks.push(commitHook);\n  }\n\n  resetPiece() {\n    L('resetPiece');\n    this.piece = {\n      chord: [],\n      duration: this.rollingDuration,\n      dots: 0,\n      type: undefined,\n      options: {},\n    };\n  }\n\n  setNoteDots(dots) {\n    L('setNoteDots:', dots);\n    if (dots) this.piece.dots = dots.length;\n  }\n\n  setNoteDuration(duration) {\n    L('setNoteDuration:', duration);\n    this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n  }\n\n  setNoteType(type) {\n    L('setNoteType:', type);\n    if (type) this.piece.type = type;\n  }\n\n  addNoteOption(key, value) {\n    L('addNoteOption: key:', key, 'value:', value);\n    this.piece.options[key] = value;\n  }\n\n  addNote(key, accid, octave) {\n    L('addNote:', key, accid, octave);\n    this.piece.chord.push({ key, accid, octave });\n  }\n\n  addSingleNote(key, accid, octave) {\n    L('addSingleNote:', key, accid, octave);\n    this.addNote(key, accid, octave);\n  }\n\n  addChord(notes) {\n    L('startChord');\n    if (typeof(notes[0]) !== 'object') {\n      this.addSingleNote(notes[0]);\n    } else {\n      notes.forEach(n => {\n        if (n) this.addNote(...n);\n      });\n    }\n    L('endChord');\n  }\n\n  commitPiece() {\n    L('commitPiece');\n    const { factory } = this;\n\n    if (!factory) return;\n\n    const options = Object.assign({}, this.options, this.piece.options);\n    const { stem, clef } = options;\n    const autoStem = stem.toLowerCase() === 'auto';\n    const stemDirection = !autoStem && stem.toLowerCase() === 'up'\n      ? StaveNote.STEM_UP\n      : StaveNote.STEM_DOWN;\n\n    // Build StaveNotes.\n    const { chord, duration, dots, type } = this.piece;\n    const keys = chord.map(note => note.key + '/' + note.octave);\n    const note = factory.StaveNote({\n      keys,\n      duration,\n      dots,\n      type,\n      clef,\n      auto_stem: autoStem,\n    });\n    if (!autoStem) note.setStemDirection(stemDirection);\n\n    // Attach accidentals.\n    const accids = chord.map(note => note.accid || null);\n    accids.forEach((accid, i) => {\n      if (accid) note.addAccidental(i, factory.Accidental({ type: accid }));\n    });\n\n    // Attach dots.\n    for (let i = 0; i < dots; i++) note.addDotToAll();\n\n    this.commitHooks.forEach(fn => fn(options, note, this));\n\n    this.elements.notes.push(note);\n    this.elements.accidentals.concat(accids);\n    this.resetPiece();\n  }\n}\n\nfunction setId({ id }, note) {\n  if (id === undefined) return;\n\n  note.setAttribute('id', id);\n}\n\n\nfunction setClass(options, note) {\n  if (!options.class) return;\n\n  const commaSeparatedRegex = /\\s*,\\s*/;\n\n  options.class\n    .split(commaSeparatedRegex)\n    .forEach(className => note.addClass(className));\n}\n\nexport class EasyScore {\n  constructor(options = {}) {\n    this.setOptions(options);\n    this.defaults = {\n      clef: 'treble',\n      time: '4/4',\n      stem: 'auto',\n    };\n  }\n\n  set(defaults) {\n    Object.assign(this.defaults, defaults);\n    return this;\n  }\n\n  setOptions(options) {\n    this.options = Object.assign({\n      factory: null,\n      builder: null,\n      commitHooks: [\n        setId,\n        setClass,\n        Articulation.easyScoreHook,\n      ],\n      throwOnError: false,\n    }, options);\n\n    this.factory = this.options.factory;\n    this.builder = this.options.builder || new Builder(this.factory);\n    this.grammar = new Grammar(this.builder);\n    this.parser = new Parser(this.grammar);\n    this.options.commitHooks.forEach(commitHook => this.addCommitHook(commitHook));\n    return this;\n  }\n\n  setContext(context) {\n    if (this.factory) this.factory.setContext(context);\n    return this;\n  }\n\n  parse(line, options = {}) {\n    this.builder.reset(options);\n    const result = this.parser.parse(line);\n    if (!result.success && this.options.throwOnError) {\n      throw new X('Error parsing line: ' + line, result);\n    }\n    return result;\n  }\n\n  beam(notes, options = {}) {\n    this.factory.Beam({ notes, options });\n    return notes;\n  }\n\n  tuplet(notes, options = {}) {\n    this.factory.Tuplet({ notes, options });\n    return notes;\n  }\n\n  notes(line, options = {}) {\n    options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n    this.parse(line, options);\n    return this.builder.getElements().notes;\n  }\n\n  voice(notes, voiceOptions) {\n    voiceOptions = Object.assign({ time: this.defaults.time }, voiceOptions);\n    return this.factory.Voice(voiceOptions).addTickables(notes);\n  }\n\n  addCommitHook(commitHook) {\n    return this.builder.addCommitHook(commitHook);\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { KeySigNote } from './keysignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote } from './textnote';\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args) { if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args); }\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({ renderer: { elementId, width, height } });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() { return this.options; }\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const { elementId, backend, width, height, background } = this.options.renderer;\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getStave() { return this.stave; }\n  getVoices() { return this.voices; }\n\n  // Returns pixels from current stave spacing.\n  space(spacing) { return this.options.stave.space * spacing; }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    });\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3,\n      },\n    });\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct) {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params) {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {},\n    });\n\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params) {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default',\n      },\n    });\n\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  KeySigNote(params) {\n    const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n    if (this.stave) keySigNote.setStave(this.stave);\n    keySigNote.setContext(this.context);\n    this.renderQ.push(keySigNote);\n    return keySigNote;\n  }\n\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    });\n\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    });\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    });\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  MultiMeasureRest(params) {\n    const multimeasurerest = new MultiMeasureRest(params.number_of_measures, params);\n    multimeasurerest.setContext(this.context);\n    this.renderQ.push(multimeasurerest);\n    return multimeasurerest;\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n    const voice = new Voice(params.time);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: [],\n      },\n    });\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    });\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined,\n      },\n    });\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text);\n\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {},\n    });\n\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false,\n      },\n    });\n\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1,\n      },\n    });\n\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n    });\n\n    const pedal = new PedalMarking(params.notes);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\n\nfunction setDefaults(params, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class System extends Element {\n  constructor(params = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {}) {\n    this.options = setDefaults(options, {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      options: {},\n    });\n\n    this.factory = this.options.factory || new Factory({ renderer: { el: null } });\n  }\n\n  setContext(context) {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double') {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  addStave(params) {\n    params = setDefaults(params, {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      options: { left_bar: false },\n    });\n\n    if (!params.stave) {\n      params.stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options: params.options,\n      });\n    }\n\n    params.voices.forEach(voice =>\n      voice\n        .setContext(this.context)\n        .setStave(params.stave)\n        .getTickables()\n        .forEach(tickable => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format() {\n    const formatter = new Formatter();\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices = [];\n    const debugNoteMetricsYs = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.width - (startX - this.options.x) - Note.STAVEPADDING;\n    formatter.format(allVoices, justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune();\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw() {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach(note => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n","// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Renderer } from './renderer';\nimport { Formatter } from './formatter';\nimport { Music } from './music';\nimport { Glyph } from './glyph';\nimport { Stave } from './stave';\nimport { StaveNote } from './stavenote';\nimport { StaveModifier } from './stavemodifier';\nimport { StaveTempo } from './stavetempo';\nimport { Voice } from './voice';\nimport { Accidental } from './accidental';\nimport { Beam } from './beam';\nimport { StaveTie } from './stavetie';\nimport { TabStave } from './tabstave';\nimport { TabNote } from './tabnote';\nimport { Bend } from './bend';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Note } from './note';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { TickContext } from './tickcontext';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Barline } from './stavebarline';\nimport { NoteHead } from './notehead';\nimport { StaveConnector } from './staveconnector';\nimport { ClefNote } from './clefnote';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Stem } from './stem';\nimport { TabTie } from './tabtie';\nimport { Clef } from './clef';\nimport { Dot } from './dot';\nimport { Modifier } from './modifier';\nimport { TabSlide } from './tabslide';\nimport { Tuplet } from './tuplet';\nimport { GraceNote } from './gracenote';\nimport { GraceTabNote } from './gracetabnote';\nimport { Tuning } from './tuning';\nimport { KeyManager } from './keymanager';\nimport { StaveHairpin } from './stavehairpin';\nimport { BoundingBox } from './boundingbox';\nimport { Stroke } from './strokes';\nimport { TextNote } from './textnote';\nimport { Curve } from './curve';\nimport { TextDynamics } from './textdynamics';\nimport { StaveLine } from './staveline';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { FretHandFinger } from './frethandfinger';\nimport { Repetition } from './staverepetition';\nimport { BarNote } from './barnote';\nimport { GhostNote } from './ghostnote';\nimport { NoteSubGroup } from './notesubgroup';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { Tremolo } from './tremolo';\nimport { StringNumber } from './stringnumber';\nimport { Crescendo } from './crescendo';\nimport { Volta } from './stavevolta';\nimport { Font } from './fonts/vexflow_font';\nimport { System } from './system';\nimport { Factory } from './factory';\nimport { Parser } from './parser';\nimport { EasyScore } from './easyscore';\nimport { Registry } from './registry';\nimport { SVGContext } from './svgcontext';\nimport { Tickable } from './tickable';\n\nVex.Flow = Flow;\nVex.Flow.SVGContext = SVGContext;\nVex.Flow.Tickable = Tickable;\n\nVex.Flow.Element = Element;\nVex.Flow.Fraction = Fraction;\nVex.Flow.Renderer = Renderer;\nVex.Flow.Formatter = Formatter;\nVex.Flow.Music = Music;\nVex.Flow.Glyph = Glyph;\nVex.Flow.Stave = Stave;\nVex.Flow.StaveNote = StaveNote;\nVex.Flow.StaveModifier = StaveModifier;\nVex.Flow.StaveTempo = StaveTempo;\nVex.Flow.Voice = Voice;\nVex.Flow.Accidental = Accidental;\nVex.Flow.Beam = Beam;\nVex.Flow.StaveTie = StaveTie;\nVex.Flow.TabStave = TabStave;\nVex.Flow.TabNote = TabNote;\nVex.Flow.Bend = Bend;\nVex.Flow.Vibrato = Vibrato;\nVex.Flow.VibratoBracket = VibratoBracket;\nVex.Flow.Note = Note;\nVex.Flow.ModifierContext = ModifierContext;\nVex.Flow.MultiMeasureRest = MultiMeasureRest;\nVex.Flow.TickContext = TickContext;\nVex.Flow.Articulation = Articulation;\nVex.Flow.Annotation = Annotation;\nVex.Flow.Barline = Barline;\nVex.Flow.NoteHead = NoteHead;\nVex.Flow.StaveConnector = StaveConnector;\nVex.Flow.ClefNote = ClefNote;\nVex.Flow.KeySignature = KeySignature;\nVex.Flow.KeySigNote = KeySigNote;\nVex.Flow.TimeSignature = TimeSignature;\nVex.Flow.TimeSigNote = TimeSigNote;\nVex.Flow.Stem = Stem;\nVex.Flow.TabTie = TabTie;\nVex.Flow.Clef = Clef;\nVex.Flow.Dot = Dot;\nVex.Flow.Modifier = Modifier;\nVex.Flow.TabSlide = TabSlide;\nVex.Flow.Tuplet = Tuplet;\nVex.Flow.GraceNote = GraceNote;\nVex.Flow.GraceTabNote = GraceTabNote;\nVex.Flow.Tuning = Tuning;\nVex.Flow.KeyManager = KeyManager;\nVex.Flow.StaveHairpin = StaveHairpin;\nVex.Flow.BoundingBox = BoundingBox;\nVex.Flow.Stroke = Stroke;\nVex.Flow.TextNote = TextNote;\nVex.Flow.Curve = Curve;\nVex.Flow.TextDynamics = TextDynamics;\nVex.Flow.StaveLine = StaveLine;\nVex.Flow.Ornament = Ornament;\nVex.Flow.PedalMarking = PedalMarking;\nVex.Flow.TextBracket = TextBracket;\nVex.Flow.FretHandFinger = FretHandFinger;\nVex.Flow.Repetition = Repetition;\nVex.Flow.BarNote = BarNote;\nVex.Flow.GhostNote = GhostNote;\nVex.Flow.NoteSubGroup = NoteSubGroup;\nVex.Flow.GraceNoteGroup = GraceNoteGroup;\nVex.Flow.Tremolo = Tremolo;\nVex.Flow.StringNumber = StringNumber;\nVex.Flow.Crescendo = Crescendo;\nVex.Flow.Volta = Volta;\nVex.Flow.Font = Font;\nVex.Flow.System = System;\nVex.Flow.Factory = Factory;\nVex.Flow.Parser = Parser;\nVex.Flow.EasyScore = EasyScore;\nVex.Flow.Registry = Registry;\n\nexport default Vex;\n"],"sourceRoot":""}